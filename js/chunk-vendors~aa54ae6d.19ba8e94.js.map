{"version":3,"sources":["webpack:///./node_modules/parse/lib/browser/OfflineQuery.js"],"names":["_interopRequireDefault","_keys","_forEach","_map","_getIterator2","_filter","_typeof2","_slice","_isArray","_indexOf","equalObjects","default","decode","ParseError","ParsePolygon","ParseGeoPoint","contains","haystack","needle","__type","i","ptr","objectId","className","call","transformObject","object","_toFullJSON","matchesQuery","objects","query","obj","q","field","toJSON","where","matchesKeyConstraints","equalObjectsGeneric","compareTo","eqlFn","length","key","constraints","keyComponents","split","subObjectKey","keyRemainder","join","_context","test","INVALID_KEY_NAME","concat","condition","toString","Date","isNaN","iso","_context2","propertyExists","existenceIsRequired","expString","escapeEnd","escapeStart","substring","replace","Math","max","modifiers","$options","exp","RegExp","distance","radiansTo","$maxDistance","Infinity","southWest","$box","northEast","latitude","longitude","subQueryObjects","index","arr","_i","subObject","_subQueryObjects","_i2","_subObject","_subQueryObjects2","_i3","_subObject2","_subQueryObjects3","_i4","_subObject3","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","value","err","return","_context3","points","$polygon","geoPoint","polygon","containsPoint","_polygon","coordinates","point","$point","validateQuery","_context4","specialQuerykeys","$regex","match","INVALID_QUERY","OfflineQuery","module","exports"],"mappings":"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","file":"js/chunk-vendors~aa54ae6d.19ba8e94.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\n\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\n\nvar _map = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/map\"));\n\nvar _getIterator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js/get-iterator\"));\n\nvar _filter = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/filter\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _slice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\"));\n\nvar _isArray = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\"));\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nvar equalObjects = require('./equals').default;\n\nvar decode = require('./decode').default;\n\nvar ParseError = require('./ParseError').default;\n\nvar ParsePolygon = require('./ParsePolygon').default;\n\nvar ParseGeoPoint = require('./ParseGeoPoint').default;\n/**\n * contains -- Determines if an object is contained in a list with special handling for Parse pointers.\n */\n\n\nfunction contains(haystack, needle) {\n  if (needle && needle.__type && (needle.__type === 'Pointer' || needle.__type === 'Object')) {\n    for (var i in haystack) {\n      var ptr = haystack[i];\n\n      if (typeof ptr === 'string' && ptr === needle.objectId) {\n        return true;\n      }\n\n      if (ptr.className === needle.className && ptr.objectId === needle.objectId) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  return (0, _indexOf.default)(haystack).call(haystack, needle) > -1;\n}\n\nfunction transformObject(object) {\n  if (object._toFullJSON) {\n    return object._toFullJSON();\n  }\n\n  return object;\n}\n/**\n * matchesQuery -- Determines if an object would be returned by a Parse Query\n * It's a lightweight, where-clause only implementation of a full query engine.\n * Since we find queries that match objects, rather than objects that match\n * queries, we can avoid building a full-blown query tool.\n */\n\n\nfunction matchesQuery(className, object, objects, query) {\n  if (object.className !== className) {\n    return false;\n  }\n\n  var obj = object;\n  var q = query;\n\n  if (object.toJSON) {\n    obj = object.toJSON();\n  }\n\n  if (query.toJSON) {\n    q = query.toJSON().where;\n  }\n\n  obj.className = className;\n\n  for (var field in q) {\n    if (!matchesKeyConstraints(className, obj, objects, field, q[field])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction equalObjectsGeneric(obj, compareTo, eqlFn) {\n  if ((0, _isArray.default)(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      if (eqlFn(obj[i], compareTo)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  return eqlFn(obj, compareTo);\n}\n/**\n * Determines whether an object matches a single key's constraints\n */\n\n\nfunction matchesKeyConstraints(className, object, objects, key, constraints) {\n  if (constraints === null) {\n    return false;\n  }\n\n  if ((0, _indexOf.default)(key).call(key, '.') >= 0) {\n    // Key references a subobject\n    var keyComponents = key.split('.');\n    var subObjectKey = keyComponents[0];\n    var keyRemainder = (0, _slice.default)(keyComponents).call(keyComponents, 1).join('.');\n    return matchesKeyConstraints(className, object[subObjectKey] || {}, objects, keyRemainder, constraints);\n  }\n\n  var i;\n\n  if (key === '$or') {\n    for (i = 0; i < constraints.length; i++) {\n      if (matchesQuery(className, object, objects, constraints[i])) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  if (key === '$and') {\n    for (i = 0; i < constraints.length; i++) {\n      if (!matchesQuery(className, object, objects, constraints[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  if (key === '$nor') {\n    for (i = 0; i < constraints.length; i++) {\n      if (matchesQuery(className, object, objects, constraints[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  if (key === '$relatedTo') {\n    // Bail! We can't handle relational queries locally\n    return false;\n  }\n\n  if (!/^[A-Za-z][0-9A-Za-z_]*$/.test(key)) {\n    throw new ParseError(ParseError.INVALID_KEY_NAME, \"Invalid Key: \".concat(key));\n  } // Equality (or Array contains) cases\n\n\n  if ((0, _typeof2.default)(constraints) !== 'object') {\n    if ((0, _isArray.default)(object[key])) {\n      var _context;\n\n      return (0, _indexOf.default)(_context = object[key]).call(_context, constraints) > -1;\n    }\n\n    return object[key] === constraints;\n  }\n\n  var compareTo;\n\n  if (constraints.__type) {\n    if (constraints.__type === 'Pointer') {\n      return equalObjectsGeneric(object[key], constraints, function (obj, ptr) {\n        return typeof obj !== 'undefined' && ptr.className === obj.className && ptr.objectId === obj.objectId;\n      });\n    }\n\n    return equalObjectsGeneric(decode(object[key]), decode(constraints), equalObjects);\n  } // More complex cases\n\n\n  for (var condition in constraints) {\n    compareTo = constraints[condition];\n\n    if (compareTo.__type) {\n      compareTo = decode(compareTo);\n    } // Compare Date Object or Date String\n\n\n    if (toString.call(compareTo) === '[object Date]' || typeof compareTo === 'string' && new Date(compareTo) !== 'Invalid Date' && !isNaN(new Date(compareTo))) {\n      object[key] = new Date(object[key].iso ? object[key].iso : object[key]);\n    }\n\n    switch (condition) {\n      case '$lt':\n        if (object[key] >= compareTo) {\n          return false;\n        }\n\n        break;\n\n      case '$lte':\n        if (object[key] > compareTo) {\n          return false;\n        }\n\n        break;\n\n      case '$gt':\n        if (object[key] <= compareTo) {\n          return false;\n        }\n\n        break;\n\n      case '$gte':\n        if (object[key] < compareTo) {\n          return false;\n        }\n\n        break;\n\n      case '$ne':\n        if (equalObjects(object[key], compareTo)) {\n          return false;\n        }\n\n        break;\n\n      case '$in':\n        if (!contains(compareTo, object[key])) {\n          return false;\n        }\n\n        break;\n\n      case '$nin':\n        if (contains(compareTo, object[key])) {\n          return false;\n        }\n\n        break;\n\n      case '$all':\n        for (i = 0; i < compareTo.length; i++) {\n          var _context2;\n\n          if ((0, _indexOf.default)(_context2 = object[key]).call(_context2, compareTo[i]) < 0) {\n            return false;\n          }\n        }\n\n        break;\n\n      case '$exists':\n        {\n          var propertyExists = typeof object[key] !== 'undefined';\n          var existenceIsRequired = constraints['$exists'];\n\n          if (typeof constraints['$exists'] !== 'boolean') {\n            // The SDK will never submit a non-boolean for $exists, but if someone\n            // tries to submit a non-boolean for $exits outside the SDKs, just ignore it.\n            break;\n          }\n\n          if (!propertyExists && existenceIsRequired || propertyExists && !existenceIsRequired) {\n            return false;\n          }\n\n          break;\n        }\n\n      case '$regex':\n        {\n          if ((0, _typeof2.default)(compareTo) === 'object') {\n            return compareTo.test(object[key]);\n          } // JS doesn't support perl-style escaping\n\n\n          var expString = '';\n          var escapeEnd = -2;\n          var escapeStart = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\Q');\n\n          while (escapeStart > -1) {\n            // Add the unescaped portion\n            expString += compareTo.substring(escapeEnd + 2, escapeStart);\n            escapeEnd = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\E', escapeStart);\n\n            if (escapeEnd > -1) {\n              expString += compareTo.substring(escapeStart + 2, escapeEnd).replace(/\\\\\\\\\\\\\\\\E/g, '\\\\E').replace(/\\W/g, '\\\\$&');\n            }\n\n            escapeStart = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\Q', escapeEnd);\n          }\n\n          expString += compareTo.substring(Math.max(escapeStart, escapeEnd + 2));\n          var modifiers = constraints.$options || '';\n          modifiers = modifiers.replace('x', '').replace('s', ''); // Parse Server / Mongo support x and s modifiers but JS RegExp doesn't\n\n          var exp = new RegExp(expString, modifiers);\n\n          if (!exp.test(object[key])) {\n            return false;\n          }\n\n          break;\n        }\n\n      case '$nearSphere':\n        {\n          if (!compareTo || !object[key]) {\n            return false;\n          }\n\n          var distance = compareTo.radiansTo(object[key]);\n          var max = constraints.$maxDistance || Infinity;\n          return distance <= max;\n        }\n\n      case '$within':\n        {\n          if (!compareTo || !object[key]) {\n            return false;\n          }\n\n          var southWest = compareTo.$box[0];\n          var northEast = compareTo.$box[1];\n\n          if (southWest.latitude > northEast.latitude || southWest.longitude > northEast.longitude) {\n            // Invalid box, crosses the date line\n            return false;\n          }\n\n          return object[key].latitude > southWest.latitude && object[key].latitude < northEast.latitude && object[key].longitude > southWest.longitude && object[key].longitude < northEast.longitude;\n        }\n\n      case '$options':\n        // Not a query type, but a way to add options to $regex. Ignore and\n        // avoid the default\n        break;\n\n      case '$maxDistance':\n        // Not a query type, but a way to add a cap to $nearSphere. Ignore and\n        // avoid the default\n        break;\n\n      case '$select':\n        {\n          var subQueryObjects = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.query.className, obj, arr, compareTo.query.where);\n          });\n\n          for (var _i = 0; _i < subQueryObjects.length; _i += 1) {\n            var subObject = transformObject(subQueryObjects[_i]);\n            return equalObjects(object[key], subObject[compareTo.key]);\n          }\n\n          return false;\n        }\n\n      case '$dontSelect':\n        {\n          var _subQueryObjects = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.query.className, obj, arr, compareTo.query.where);\n          });\n\n          for (var _i2 = 0; _i2 < _subQueryObjects.length; _i2 += 1) {\n            var _subObject = transformObject(_subQueryObjects[_i2]);\n\n            return !equalObjects(object[key], _subObject[compareTo.key]);\n          }\n\n          return false;\n        }\n\n      case '$inQuery':\n        {\n          var _subQueryObjects2 = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.className, obj, arr, compareTo.where);\n          });\n\n          for (var _i3 = 0; _i3 < _subQueryObjects2.length; _i3 += 1) {\n            var _subObject2 = transformObject(_subQueryObjects2[_i3]);\n\n            if (object[key].className === _subObject2.className && object[key].objectId === _subObject2.objectId) {\n              return true;\n            }\n          }\n\n          return false;\n        }\n\n      case '$notInQuery':\n        {\n          var _subQueryObjects3 = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.className, obj, arr, compareTo.where);\n          });\n\n          for (var _i4 = 0; _i4 < _subQueryObjects3.length; _i4 += 1) {\n            var _subObject3 = transformObject(_subQueryObjects3[_i4]);\n\n            if (object[key].className === _subObject3.className && object[key].objectId === _subObject3.objectId) {\n              return false;\n            }\n          }\n\n          return true;\n        }\n\n      case '$containedBy':\n        {\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = (0, _getIterator2.default)(object[key]), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var value = _step.value;\n\n              if (!contains(compareTo, value)) {\n                return false;\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          return true;\n        }\n\n      case '$geoWithin':\n        {\n          var _context3;\n\n          var points = (0, _map.default)(_context3 = compareTo.$polygon).call(_context3, function (geoPoint) {\n            return [geoPoint.latitude, geoPoint.longitude];\n          });\n          var polygon = new ParsePolygon(points);\n          return polygon.containsPoint(object[key]);\n        }\n\n      case '$geoIntersects':\n        {\n          var _polygon = new ParsePolygon(object[key].coordinates);\n\n          var point = new ParseGeoPoint(compareTo.$point);\n          return _polygon.containsPoint(point);\n        }\n\n      default:\n        return false;\n    }\n  }\n\n  return true;\n}\n\nfunction validateQuery(query\n/*: any*/\n) {\n  var _context4;\n\n  var q = query;\n\n  if (query.toJSON) {\n    q = query.toJSON().where;\n  }\n\n  var specialQuerykeys = ['$and', '$or', '$nor', '_rperm', '_wperm', '_perishable_token', '_email_verify_token', '_email_verify_token_expires_at', '_account_lockout_expires_at', '_failed_login_count'];\n  (0, _forEach.default)(_context4 = (0, _keys.default)(q)).call(_context4, function (key) {\n    if (q && q[key] && q[key].$regex) {\n      if (typeof q[key].$options === 'string') {\n        if (!q[key].$options.match(/^[imxs]+$/)) {\n          throw new ParseError(ParseError.INVALID_QUERY, \"Bad $options value for query: \".concat(q[key].$options));\n        }\n      }\n    }\n\n    if ((0, _indexOf.default)(specialQuerykeys).call(specialQuerykeys, key) < 0 && !key.match(/^[a-zA-Z][a-zA-Z0-9_\\.]*$/)) {\n      throw new ParseError(ParseError.INVALID_KEY_NAME, \"Invalid key name: \".concat(key));\n    }\n  });\n}\n\nvar OfflineQuery = {\n  matchesQuery: matchesQuery,\n  validateQuery: validateQuery\n};\nmodule.exports = OfflineQuery;"],"sourceRoot":""}