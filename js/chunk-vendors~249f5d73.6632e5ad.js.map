{"version":3,"sources":["webpack:///./node_modules/parse/lib/browser/ParseFile.js","webpack:///./node_modules/parse/lib/browser/ParseACL.js","webpack:///./node_modules/parse/lib/browser/ParseGeoPoint.js","webpack:///./node_modules/parse/lib/browser/ParseInstallation.js","webpack:///./node_modules/parse/lib/browser/ParseObject.js","webpack:///./node_modules/parse/lib/browser/ParseError.js","webpack:///./node_modules/parse/lib/browser/ParseLiveQuery.js","webpack:///./node_modules/parse/lib/browser/Parse.js","webpack:///./node_modules/parse/lib/browser/ParseConfig.js"],"names":["_interopRequireDefault","_Object$defineProperty","exports","value","default","_promise","_regenerator","_asyncToGenerator2","_slice","_indexOf","_isArray","_classCallCheck2","_createClass2","_defineProperty2","_CoreManager","XHR","XMLHttpRequest","dataUriRegexp","b64Digit","number","String","fromCharCode","TypeError","ParseFile","name","data","type","this","specifiedType","_name","undefined","_data","encodeBase64","_source","format","base64","Blob","file","uri","commaIndex","call","matches","exec","key","_getData","mark","_callee","options","controller","result","_this","wrap","_context","prev","next","abrupt","_url","Error","requestTask","task","_requestTask","getFileController","download","sent","stop","apply","arguments","forceSecure","replace","_this2","_previousSave","saveFile","then","res","url","newSource","contentType","saveBase64","abort","__type","other","obj","bytes","chunks","length","Math","ceil","i","b1","b2","b3","has2","has3","join","DefaultController","source","headers","get","jsKey","getRESTController","ajax","response","_ContentType","request","downloadAjax","reject","resolve","xhr","open","responseType","onerror","e","onreadystatechange","readyState","DONE","Uint8Array","getResponseHeader","send","_setXHR","setFileController","_default","_keys","_typeof2","_ParseRole","_ParseUser","PUBLIC_KEY","ParseACL","arg1","permissionsById","setReadAccess","setWriteAccess","_userId","accessList","_permission","allowed","permissions","p","users","otherUsers","u","read","write","accessType","userId","id","getName","_setAccess","_getAccess","getReadAccess","getWriteAccess","role","ParseGeoPoint","arg2","_validate","_latitude","_longitude","latitude","longitude","point","d2r","PI","lat1rad","long1rad","lat2rad","long2rad","sinDeltaLatDiv2","sin","sinDeltaLongDiv2","a","cos","min","asin","sqrt","radiansTo","set","val","isNaN","navigator","geolocation","getCurrentPosition","location","coords","_possibleConstructorReturn2","_getPrototypeOf2","_inherits2","_ParseObject2","Installation","_ParseObject","attributes","registerSubclass","_interopRequireWildcard","_Object$defineProperty2","_map","_find","_create","_freeze","_getIterator2","_concat","_includes","_stringify","_forEach","_defineProperty3","_canBeSerialized","_decode","_encode","_escape2","_ParseACL","_parseDate","_ParseError","_ParseFile","_promiseUtils","_LocalDatastoreUtils","_ParseOp","_ParseQuery","_ParseRelation","SingleInstanceStateController","_unique","UniqueInstanceStateController","_unsavedChildren","uuidv4","DEFAULT_BATCH_SIZE","classMap","objectCount","singleInstance","getServerUrlPath","serverUrl","substr","setObjectStateController","ParseObject","className","initialize","toSet","_objCount","_attr","_localId","localId","_getId","stateController","getObjectStateController","getServerData","_getStateIdentifier","serverData","_getServerData","unset","_attr2","setServerData","getPendingOps","keysToClear","pending","_getPendingOps","latest","keys","objectCache","getObjectCache","dirty","_attr3","json","stringified","seen","toJSON","dirtyObjects","_getDirtyObjectAttributes","attr","isDotNotation","field","fieldName","split","SetOp","method","body","_getSaveJSON","path","objectId","initializeState","decoded","_attr4","_ensureParentAndKey","createdAt","updatedAt","commitServerChanges","existed","state","getState","serverId","oldState","removeState","status","changes","popPendingState","RelationOp","applyTo","UnsetOp","_migrateId","_setExisted","mergeFirstPendingState","seenEntry","attrs","_attr5","_attr6","pendingOps","hasOwnProperty","_attr7","_attr8","toString","newOps","readonly","k","constructor","readOnlyAttributes","Op","__op","opFromJSON","relation","targetClassName","currentAttributes","newValues","_attr9","ignoreValidation","validation","validate","error","last","_attr10","nextOp","mergeWith","setPendingOp","amount","IncrementOp","item","AddOp","items","AddUniqueOp","RemoveOp","clone","copy","duplicateState","_exists","query","t0","code","OBJECT_NOT_FOUND","ACL","OTHER_CAUSE","_key","test","INVALID_KEY_NAME","acl","keysToRevert","_len","Array","_key2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","done","_key3","push","err","return","_clearPendingOps","erasable","_attr11","_context2","fetchOptions","useMasterKey","sessionToken","include","_context3","getObjectController","fetch","arg3","success","saveOptions","installationId","unsaved","cascadeSave","save","destroyOptions","destroy","pinAllWithName","DEFAULT_PIN","unPinAllWithName","_isPinned","_callee2","localDatastore","objectKey","pin","_context4","getLocalDatastore","isEnabled","getKeyForObject","fromPinWithName","_fetchFromLocalDatastore","_callee3","pinned","_context5","_serializeObject","fromJSON","_finishFetch","estimateAttributes","clearAllState","list","queryOptions","handleIncludeOptions","fetchAll","fetchAllIfNeeded","_context6","batchSize","override","o","otherAttributes","_attr12","preserved","_preserveFieldsOnFetch","_clearServerData","protoProps","classProps","extend","adjustedClassName","parentProto","prototype","__super__","ParseObjectSubclass","enumerable","writable","configurable","prop","_prop","createWithoutData","objects","_handlePinAllWithName","_handleUnPinAllWithName","unPinWithName","PIN_PREFIX","target","forceFetch","objs","ids","results","el","INVALID_CLASS_NAME","MISSING_OBJECT_ID","isDataAvailable","containedIn","_limit","_ref","_callee4","idMap","_i","_obj","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","object","_context7","_updateObjectIfPinned","finish","RESTController","params","_ref2","_callee5","_context8","_destroy","_callee8","batches","deleteCompleted","errors","_context11","pop","batch","requests","_callee6","aggregate","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_iterator3","_step3","_context9","AGGREGATE_ERROR","_destroyObjectIfPinned","_callee7","_context10","mapIdForPin","returnStatus","filesSaved","objectError","continueWhile","rej","nextPending","batchReturned","batchReady","batchTasks","index","ready","pushPendingState","enqueueTask","responses","_status","_handleSaveResponse","serverError","_handleSaveError","when","_getSaveParams","INCORRECT_TYPE","message","_callee9","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_iterator4","_step4","_context12","_updateLocalIdForObject","targetCopy","_callee10","_context13","setObjectController","_defineProperty","_assertThisInitialized2","_wrapNativeSuper2","ParseError","_Error","INTERNAL_SERVER_ERROR","CONNECTION_FAILED","INVALID_QUERY","INVALID_POINTER","INVALID_JSON","COMMAND_UNAVAILABLE","NOT_INITIALIZED","INVALID_CHANNEL_NAME","PUSH_MISCONFIGURED","OBJECT_TOO_LARGE","OPERATION_FORBIDDEN","CACHE_MISS","INVALID_NESTED_KEY","INVALID_FILE_NAME","INVALID_ACL","TIMEOUT","INVALID_EMAIL_ADDRESS","MISSING_CONTENT_TYPE","MISSING_CONTENT_LENGTH","INVALID_CONTENT_LENGTH","FILE_TOO_LARGE","FILE_SAVE_ERROR","DUPLICATE_VALUE","INVALID_ROLE_NAME","EXCEEDED_QUOTA","SCRIPT_FAILED","VALIDATION_ERROR","INVALID_IMAGE_DATA","UNSAVED_FILE_ERROR","INVALID_PUSH_TIME_ERROR","FILE_DELETE_ERROR","REQUEST_LIMIT_EXCEEDED","INVALID_EVENT_NAME","USERNAME_MISSING","PASSWORD_MISSING","USERNAME_TAKEN","EMAIL_TAKEN","EMAIL_MISSING","EMAIL_NOT_FOUND","SESSION_MISSING","MUST_CREATE_USER_THROUGH_SIGNUP","ACCOUNT_ALREADY_LINKED","INVALID_SESSION_TOKEN","LINKED_ID_MISSING","INVALID_LINKED_SESSION","UNSUPPORTED_SERVICE","INVALID_SCHEMA_OPERATION","FILE_READ_ERROR","X_DOMAIN_REQUEST","_slicedToArray2","_EventEmitter","_LiveQueryClient","getLiveQueryClient","getLiveQueryController","getDefaultLiveQueryClient","LiveQuery","liveQueryClient","close","on","defaultLiveQueryClient","DefaultLiveQueryController","setDefaultLiveQueryClient","_getDefaultLiveQueryClient","_ref3","_ref4","currentUser","liveQueryServerURL","serverURL","protocol","host","applicationId","javascriptKey","masterKey","all","getUserController","currentUserAsync","getInstallationController","currentInstallationId","getSessionToken","emit","_clearCachedDefaultClient","setLiveQueryController","_CryptoController","_InstallationController","ParseOp","_RESTController","Parse","javaScriptKey","SERVER_RENDERING","console","log","_initialize","setAsyncStorage","storage","setLocalDatastoreController","Analytics","AnonymousUtils","Cloud","CoreManager","Config","FacebookUtils","File","GeoPoint","Polygon","LocalDatastore","Object","Set","Unset","Increment","Add","Remove","AddUnique","Relation","Push","Query","Role","Schema","Session","Storage","User","LiveQueryClient","_request","args","_ajax","_len2","_","disallowObjects","_getInstallationId","enableLocalDatastore","isLocalDatastoreEnabled","dumpLocalDatastore","_getAllContents","enableEncryptedUser","encryptedUser","isEncryptedUserEnabled","setCryptoController","setInstallationController","setRESTController","module","_Storage","ParseConfig","_escapedAttributes","html","escaped","getConfigController","current","masterKeyOnlyFlags","currentConfig","CURRENT_CONFIG_KEY","decodePayload","JSON","parse","configData","config","storagePath","generatePath","async","getItem","getItemAsync","_attributes","setItemAsync","encodedAttrs","masterKeyOnly","setConfigController"],"mappings":"0HAEA,IAAIA,EAAyB,EAAQ,QAEjCC,EAAyB,EAAQ,QAErCA,EAAuBC,EAAS,aAAc,CAC5CC,OAAO,IAGTD,EAAQE,aAAU,EAElB,IAAIC,EAAWL,EAAuB,EAAQ,SAE1CM,EAAeN,EAAuB,EAAQ,SAE9CO,EAAqBP,EAAuB,EAAQ,SAEpDQ,EAASR,EAAuB,EAAQ,SAExCS,EAAWT,EAAuB,EAAQ,SAE1CU,EAAWV,EAAuB,EAAQ,SAE1CW,EAAmBX,EAAuB,EAAQ,SAElDY,EAAgBZ,EAAuB,EAAQ,SAE/Ca,EAAmBb,EAAuB,EAAQ,SAElDc,EAAed,EAAuB,EAAQ,SAe9Ce,EAAM,KAEoB,qBAAnBC,iBACTD,EAAMC,gBAsBR,IAAIC,EAAgB,yEAEpB,SAASC,EAASC,GAKhB,GAAIA,EAAS,GACX,OAAOC,OAAOC,aAAa,GAAKF,GAGlC,GAAIA,EAAS,GACX,OAAOC,OAAOC,aAAmBF,EAAS,GAAf,IAG7B,GAAIA,EAAS,GACX,OAAOC,OAAOC,aAAmBF,EAAS,GAAf,IAG7B,GAAe,KAAXA,EACF,MAAO,IAGT,GAAe,KAAXA,EACF,MAAO,IAGT,MAAM,IAAIG,UAAU,+BAAiCH,EAAS,eAShE,IAAII,EAEJ,WA6BE,SAASA,EAAUC,EAEjBC,EAEAC,IAGA,EAAIf,EAAiBP,SAASuB,KAAMJ,IACpC,EAAIV,EAAiBT,SAASuB,KAAM,aAAS,IAC7C,EAAId,EAAiBT,SAASuB,KAAM,YAAQ,IAC5C,EAAId,EAAiBT,SAASuB,KAAM,eAAW,IAC/C,EAAId,EAAiBT,SAASuB,KAAM,qBAAiB,IACrD,EAAId,EAAiBT,SAASuB,KAAM,aAAS,IAC7C,EAAId,EAAiBT,SAASuB,KAAM,oBAAgB,GACpD,IAAIC,EAAgBF,GAAQ,GAG5B,GAFAC,KAAKE,MAAQL,OAEAM,IAATL,EACF,IAAI,EAAIf,EAASN,SAASqB,GACxBE,KAAKI,MAAQR,EAAUS,aAAaP,GACpCE,KAAKM,QAAU,CACbC,OAAQ,SACRC,OAAQR,KAAKI,MACbL,KAAME,QAEH,GAAoB,qBAATQ,MAAwBX,aAAgBW,KACxDT,KAAKM,QAAU,CACbC,OAAQ,OACRG,KAAMZ,EACNC,KAAME,QAEH,GAAIH,GAA4B,kBAAbA,EAAKa,UAAiCR,IAAbL,EAAKa,IACtDX,KAAKM,QAAU,CACbC,OAAQ,MACRI,IAAKb,EAAKa,IACVZ,KAAME,OAEH,KAAIH,GAA+B,kBAAhBA,EAAKU,OAsB7B,MAAM,IAAIb,UAAU,8CArBpB,IAAIa,EAASV,EAAKU,OACdI,GAAa,EAAI9B,EAASL,SAAS+B,GAAQK,KAAKL,EAAQ,KAE5D,IAAoB,IAAhBI,EAAmB,CACrB,IAAIE,EAAUxB,EAAcyB,MAAK,EAAIlC,EAAOJ,SAAS+B,GAAQK,KAAKL,EAAQ,EAAGI,EAAa,IAE1FZ,KAAKI,OAAQ,EAAIvB,EAAOJ,SAAS+B,GAAQK,KAAKL,EAAQI,EAAa,GACnEZ,KAAKM,QAAU,CACbC,OAAQ,SACRC,OAAQR,KAAKI,MACbL,KAAMe,EAAQ,SAGhBd,KAAKI,MAAQI,EACbR,KAAKM,QAAU,CACbC,OAAQ,SACRC,OAAQA,EACRT,KAAME,IA8PhB,OA7OA,EAAIhB,EAAcR,SAASmB,EAAW,CAAC,CACrCoB,IAAK,UACLxC,MAAO,WACL,IAAIyC,GAAW,EAAIrC,EAAmBH,SAEtCE,EAAaF,QAAQyC,MAAK,SAASC,IACjC,IAEIC,EAASC,EAAYC,EAFrBC,EAAQvB,KAGZ,OAAOrB,EAAaF,QAAQ+C,MAAK,SAAUC,GACzC,MAAO,EACL,OAAQA,EAASC,KAAOD,EAASE,MAC/B,KAAK,EACH,IAAK3B,KAAKI,MAAO,CACfqB,EAASE,KAAO,EAChB,MAGF,OAAOF,EAASG,OAAO,SAAU5B,KAAKI,OAExC,KAAK,EACH,GAAIJ,KAAK6B,KAAM,CACbJ,EAASE,KAAO,EAChB,MAGF,MAAM,IAAIG,MAAM,+CAElB,KAAK,EAQH,OAPAV,EAAU,CACRW,YAAa,SAAUC,GACrB,OAAOT,EAAMU,aAAeD,IAGhCX,EAAalC,EAAaV,QAAQyD,oBAClCT,EAASE,KAAO,EACTN,EAAWc,SAASnC,KAAK6B,KAAMT,GAExC,KAAK,EAGH,OAFAE,EAASG,EAASW,KAClBpC,KAAKI,MAAQkB,EAAOd,OACbiB,EAASG,OAAO,SAAU5B,KAAKI,OAExC,KAAK,GACL,IAAK,MACH,OAAOqB,EAASY,UAGrBlB,EAASnB,UAGd,OAAO,WACL,OAAOiB,EAASqB,MAAMtC,KAAMuC,YAlDzB,IA4DN,CACDvB,IAAK,OACLxC,MAAO,WAGL,OAAOwB,KAAKE,QASb,CACDc,IAAK,MACLxC,MAAO,SAAU4C,GAOf,GAFAA,EAAUA,GAAW,GAEhBpB,KAAK6B,KAIV,OAAIT,EAAQoB,YACHxC,KAAK6B,KAAKY,QAAQ,cAAe,YAEjCzC,KAAK6B,OAcf,CACDb,IAAK,OACLxC,MAAO,SAAU4C,GAGf,IAAIsB,EAAS1C,KAEboB,EAAUA,GAAW,GAErBA,EAAQW,YAAc,SAAUC,GAC9B,OAAOU,EAAOT,aAAeD,GAG/B,IAAIX,EAAalC,EAAaV,QAAQyD,oBAyCtC,GAvCKlC,KAAK2C,gBACoB,SAAxB3C,KAAKM,QAAQC,OACfP,KAAK2C,cAAgBtB,EAAWuB,SAAS5C,KAAKE,MAAOF,KAAKM,QAASc,GAASyB,MAAK,SAAUC,GAKzF,OAJAJ,EAAOxC,MAAQ4C,EAAIjD,KACnB6C,EAAOb,KAAOiB,EAAIC,IAClBL,EAAOtC,MAAQ,KACfsC,EAAOT,aAAe,KACfS,KAEwB,QAAxB1C,KAAKM,QAAQC,OACtBP,KAAK2C,cAAgBtB,EAAWc,SAASnC,KAAKM,QAAQK,IAAKS,GAASyB,MAAK,SAAUvB,GACjF,IAAMA,IAAUA,EAAOd,OACrB,MAAO,GAGT,IAAIwC,EAAY,CACdzC,OAAQ,SACRC,OAAQc,EAAOd,OACfT,KAAMuB,EAAO2B,aAIf,OAFAP,EAAOtC,MAAQkB,EAAOd,OACtBkC,EAAOT,aAAe,KACfZ,EAAW6B,WAAWR,EAAOxC,MAAO8C,EAAW5B,MACrDyB,MAAK,SAAUC,GAIhB,OAHAJ,EAAOxC,MAAQ4C,EAAIjD,KACnB6C,EAAOb,KAAOiB,EAAIC,IAClBL,EAAOT,aAAe,KACfS,KAGT1C,KAAK2C,cAAgBtB,EAAW6B,WAAWlD,KAAKE,MAAOF,KAAKM,QAASc,GAASyB,MAAK,SAAUC,GAI3F,OAHAJ,EAAOxC,MAAQ4C,EAAIjD,KACnB6C,EAAOb,KAAOiB,EAAIC,IAClBL,EAAOT,aAAe,KACfS,MAKT1C,KAAK2C,cACP,OAAO3C,KAAK2C,gBAOf,CACD3B,IAAK,SACLxC,MAAO,WACDwB,KAAKiC,cAAmD,oBAA5BjC,KAAKiC,aAAakB,OAChDnD,KAAKiC,aAAakB,QAGpBnD,KAAKiC,aAAe,OAErB,CACDjB,IAAK,SACLxC,MAAO,WAGL,MAAO,CACL4E,OAAQ,OACRvD,KAAMG,KAAKE,MACX6C,IAAK/C,KAAK6B,QAGb,CACDb,IAAK,SACLxC,MAAO,SAAU6E,GAKf,OAAIrD,OAASqD,GAKNA,aAAiBzD,GAAaI,KAAKH,SAAWwD,EAAMxD,QAAUG,KAAK+C,QAAUM,EAAMN,OAA+B,qBAAf/C,KAAK+C,SAE/G,CAAC,CACH/B,IAAK,WACLxC,MAAO,SAAU8E,GAGf,GAAmB,SAAfA,EAAIF,OACN,MAAM,IAAIzD,UAAU,8CAGtB,IAAIe,EAAO,IAAId,EAAU0D,EAAIzD,MAE7B,OADAa,EAAKmB,KAAOyB,EAAIP,IACTrC,IAER,CACDM,IAAK,eACLxC,MAAO,SAAU+E,GAKf,IAAIC,EAAS,GACbA,EAAOC,OAASC,KAAKC,KAAKJ,EAAME,OAAS,GAEzC,IAAK,IAAIG,EAAI,EAAGA,EAAIJ,EAAOC,OAAQG,IAAK,CACtC,IAAIC,EAAKN,EAAU,EAAJK,GACXE,EAAKP,EAAU,EAAJK,EAAQ,IAAM,EACzBG,EAAKR,EAAU,EAAJK,EAAQ,IAAM,EACzBI,EAAW,EAAJJ,EAAQ,EAAIL,EAAME,OACzBQ,EAAW,EAAJL,EAAQ,EAAIL,EAAME,OAC7BD,EAAOI,GAAK,CAACrE,EAASsE,GAAM,EAAI,IAAOtE,EAASsE,GAAM,EAAI,GAAOC,GAAM,EAAI,IAAOE,EAAOzE,EAASuE,GAAM,EAAI,GAAOC,GAAM,EAAI,GAAQ,IAAKE,EAAO1E,EAAc,GAALwE,GAAa,KAAKG,KAAK,IAGnL,OAAOV,EAAOU,KAAK,QAGhBtE,EAlVT,GAqVIuE,EAAoB,CACtBvB,SAAU,SAAU/C,EAElBuE,EAEAhD,GAGA,GAAsB,SAAlBgD,EAAO7D,OACT,MAAM,IAAIuB,MAAM,qDAIlB,IAAIuC,EAAU,CACZ,yBAA0BlF,EAAaV,QAAQ6F,IAAI,kBACnD,eAAgBF,EAAOrE,OAASqE,EAAO1D,KAAO0D,EAAO1D,KAAKX,KAAO,OAG/DwE,EAAQpF,EAAaV,QAAQ6F,IAAI,kBAEjCC,IACFF,EAAQ,0BAA4BE,GAGtC,IAAIxB,EAAM5D,EAAaV,QAAQ6F,IAAI,cAOnC,MAL4B,MAAxBvB,EAAIA,EAAIU,OAAS,KACnBV,GAAO,KAGTA,GAAO,SAAWlD,EACXV,EAAaV,QAAQ+F,oBAAoBC,KAAK,OAAQ1B,EAAKqB,EAAO1D,KAAM2D,EAASjD,GAASyB,MAAK,SAAUC,GAC9G,OAAOA,EAAI4B,aAGfxB,WAAY,SAAUrD,EAEpBuE,EAEAhD,GAGA,GAAsB,WAAlBgD,EAAO7D,OACT,MAAM,IAAIuB,MAAM,yDAGlB,IAAIhC,EAEF,CACAU,OAAQ4D,EAAO5D,QAOjB,OAJI4D,EAAOrE,OACTD,EAAK6E,aAAeP,EAAOrE,MAGtBZ,EAAaV,QAAQ+F,oBAAoBI,QAAQ,OAAQ,SAAW/E,EAAMC,EAAMsB,IAEzFe,SAAU,SAAUxB,EAAKS,GACvB,OAAIhC,EACKY,KAAK6E,aAAalE,EAAKS,GAEvB1C,EAASD,QAAQqG,OAAO,sEAGnCD,aAAc,SAAUlE,EAAKS,GAC3B,OAAO,IAAI1C,EAASD,SAAQ,SAAUsG,EAASD,GAC7C,IAAIE,EAAM,IAAI5F,EACd4F,EAAIC,KAAK,MAAOtE,GAAK,GACrBqE,EAAIE,aAAe,cAEnBF,EAAIG,QAAU,SAAUC,GACtBN,EAAOM,IAGTJ,EAAIK,mBAAqB,WACvB,GAAIL,EAAIM,aAAeN,EAAIO,KAA3B,CAIA,IAAKvF,KAAK0E,SACR,OAAOK,EAAQ,IAGjB,IAAIxB,EAAQ,IAAIiC,WAAWxF,KAAK0E,UAChCK,EAAQ,CACNvE,OAAQZ,EAAUS,aAAakD,GAC/BN,YAAa+B,EAAIS,kBAAkB,oBAIvCrE,EAAQW,YAAYiD,GACpBA,EAAIU,WAGRC,QAAS,SAAUX,GAGjB5F,EAAM4F,IAIV7F,EAAaV,QAAQmH,kBAAkBzB,GAEvC,IAAI0B,EAAWjG,EACfrB,EAAQE,QAAUoH,G,kCCxiBlB,IAAIxH,EAAyB,EAAQ,QAEjCC,EAAyB,EAAQ,QAErCA,EAAuBC,EAAS,aAAc,CAC5CC,OAAO,IAGTD,EAAQE,aAAU,EAElB,IAAIqH,EAAQzH,EAAuB,EAAQ,SAEvC0H,EAAW1H,EAAuB,EAAQ,SAE1CW,EAAmBX,EAAuB,EAAQ,SAElDY,EAAgBZ,EAAuB,EAAQ,SAE/Ca,EAAmBb,EAAuB,EAAQ,SAElD2H,EAAa3H,EAAuB,EAAQ,SAE5C4H,EAAa5H,EAAuB,EAAQ,SAa5C6H,EAAa,IAebC,EAEJ,WAIE,SAASA,EAASC,GAOhB,IAJA,EAAIpH,EAAiBP,SAASuB,KAAMmG,IACpC,EAAIjH,EAAiBT,SAASuB,KAAM,uBAAmB,GACvDA,KAAKqG,gBAAkB,GAEnBD,GAAwC,YAAhC,EAAIL,EAAStH,SAAS2H,GAChC,GAAIA,aAAgBH,EAAWxH,QAC7BuB,KAAKsG,cAAcF,GAAM,GACzBpG,KAAKuG,eAAeH,GAAM,QAE1B,IAAK,IAAII,KAAWJ,EAAM,CACxB,IAAIK,EAAaL,EAAKI,GAEtB,GAAuB,kBAAZA,EACT,MAAM,IAAI7G,UAAU,mDAKtB,IAAK,IAAI+G,KAFT1G,KAAKqG,gBAAgBG,GAAW,GAERC,EAAY,CAClC,IAAIE,EAAUF,EAAWC,GAEzB,GAAoB,SAAhBA,GAA0C,UAAhBA,EAC5B,MAAM,IAAI/G,UAAU,2DAGtB,GAAuB,mBAAZgH,EACT,MAAM,IAAIhH,UAAU,4DAGtBK,KAAKqG,gBAAgBG,GAASE,GAAeC,QAI9C,GAAoB,oBAATP,EAChB,MAAM,IAAIzG,UAAU,4DAmXxB,OA1WA,EAAIV,EAAcR,SAAS0H,EAAU,CAAC,CACpCnF,IAAK,SACLxC,MAAO,WAGL,IAAIoI,EAAc,GAElB,IAAK,IAAIC,KAAK7G,KAAKqG,gBACjBO,EAAYC,GAAK7G,KAAKqG,gBAAgBQ,GAGxC,OAAOD,IAQR,CACD5F,IAAK,SACLxC,MAAO,SAAU6E,GAKf,KAAMA,aAAiB8C,GACrB,OAAO,EAGT,IAAIW,GAAQ,EAAIhB,EAAMrH,SAASuB,KAAKqG,iBAChCU,GAAa,EAAIjB,EAAMrH,SAAS4E,EAAMgD,iBAE1C,GAAIS,EAAMrD,SAAWsD,EAAWtD,OAC9B,OAAO,EAGT,IAAK,IAAIuD,KAAKhH,KAAKqG,gBAAiB,CAClC,IAAKhD,EAAMgD,gBAAgBW,GACzB,OAAO,EAGT,GAAIhH,KAAKqG,gBAAgBW,GAAGC,OAAS5D,EAAMgD,gBAAgBW,GAAGC,KAC5D,OAAO,EAGT,GAAIjH,KAAKqG,gBAAgBW,GAAGE,QAAU7D,EAAMgD,gBAAgBW,GAAGE,MAC7D,OAAO,EAIX,OAAO,IAER,CACDlG,IAAK,aACLxC,MAAO,SAAU2I,EAEfC,EAEAT,GAGA,GAAIS,aAAkBnB,EAAWxH,QAC/B2I,EAASA,EAAOC,QACX,GAAID,aAAkBpB,EAAWvH,QAAS,CAC/C,IAAIoB,EAAOuH,EAAOE,UAElB,IAAKzH,EACH,MAAM,IAAIF,UAAU,yBAGtByH,EAAS,QAAUvH,EAGrB,GAAsB,kBAAXuH,EACT,MAAM,IAAIzH,UAAU,4BAGtB,GAAuB,mBAAZgH,EACT,MAAM,IAAIhH,UAAU,yCAGtB,IAAIiH,EAAc5G,KAAKqG,gBAAgBe,GAEvC,IAAKR,EAAa,CAChB,IAAKD,EAEH,OAEAC,EAAc,GACd5G,KAAKqG,gBAAgBe,GAAUR,EAI/BD,EACF3G,KAAKqG,gBAAgBe,GAAQD,IAAc,UAEpCP,EAAYO,GAE4B,KAA3C,EAAIrB,EAAMrH,SAASmI,GAAanD,eAC3BzD,KAAKqG,gBAAgBe,MAIjC,CACDpG,IAAK,aACLxC,MAAO,SAAU2I,EAEfC,GAKA,GAAIA,aAAkBnB,EAAWxH,SAG/B,GAFA2I,EAASA,EAAOC,IAEXD,EACH,MAAM,IAAItF,MAAM,wDAEb,GAAIsF,aAAkBpB,EAAWvH,QAAS,CAC/C,IAAIoB,EAAOuH,EAAOE,UAElB,IAAKzH,EACH,MAAM,IAAIF,UAAU,yBAGtByH,EAAS,QAAUvH,EAGrB,IAAI+G,EAAc5G,KAAKqG,gBAAgBe,GAEvC,QAAKR,KAIIA,EAAYO,KAQtB,CACDnG,IAAK,gBACLxC,MAAO,SAAU4I,EAEfT,GAGA3G,KAAKuH,WAAW,OAAQH,EAAQT,KAWjC,CACD3F,IAAK,gBACLxC,MAAO,SAAU4I,GAKf,OAAOpH,KAAKwH,WAAW,OAAQJ,KAQhC,CACDpG,IAAK,iBACLxC,MAAO,SAAU4I,EAEfT,GAGA3G,KAAKuH,WAAW,QAASH,EAAQT,KAWlC,CACD3F,IAAK,iBACLxC,MAAO,SAAU4I,GAKf,OAAOpH,KAAKwH,WAAW,QAASJ,KAOjC,CACDpG,IAAK,sBACLxC,MAAO,SAAUmI,GAGf3G,KAAKsG,cAAcJ,EAAYS,KAOhC,CACD3F,IAAK,sBACLxC,MAAO,WAGL,OAAOwB,KAAKyH,cAAcvB,KAO3B,CACDlF,IAAK,uBACLxC,MAAO,SAAUmI,GAGf3G,KAAKuG,eAAeL,EAAYS,KAOjC,CACD3F,IAAK,uBACLxC,MAAO,WAGL,OAAOwB,KAAK0H,eAAexB,KAY5B,CACDlF,IAAK,oBACLxC,MAAO,SAAUmJ,GAUf,GALIA,aAAgB3B,EAAWvH,UAE7BkJ,EAAOA,EAAKL,WAGM,kBAATK,EACT,MAAM,IAAIhI,UAAU,wCAGtB,OAAOK,KAAKyH,cAAc,QAAUE,KAYrC,CACD3G,IAAK,qBACLxC,MAAO,SAAUmJ,GAUf,GALIA,aAAgB3B,EAAWvH,UAE7BkJ,EAAOA,EAAKL,WAGM,kBAATK,EACT,MAAM,IAAIhI,UAAU,wCAGtB,OAAOK,KAAK0H,eAAe,QAAUC,KAWtC,CACD3G,IAAK,oBACLxC,MAAO,SAAUmJ,EAEfhB,GAQA,GALIgB,aAAgB3B,EAAWvH,UAE7BkJ,EAAOA,EAAKL,WAGM,kBAATK,EACT,MAAM,IAAIhI,UAAU,wCAGtBK,KAAKsG,cAAc,QAAUqB,EAAMhB,KAWpC,CACD3F,IAAK,qBACLxC,MAAO,SAAUmJ,EAEfhB,GAQA,GALIgB,aAAgB3B,EAAWvH,UAE7BkJ,EAAOA,EAAKL,WAGM,kBAATK,EACT,MAAM,IAAIhI,UAAU,wCAGtBK,KAAKuG,eAAe,QAAUoB,EAAMhB,OAGjCR,EA5ZT,GA+ZIN,EAAWM,EACf5H,EAAQE,QAAUoH,G,kCCpdlB,IAAIxH,EAAyB,EAAQ,QAEjCC,EAAyB,EAAQ,QAErCA,EAAuBC,EAAS,aAAc,CAC5CC,OAAO,IAGTD,EAAQE,aAAU,EAElB,IAAIsH,EAAW1H,EAAuB,EAAQ,SAE1CU,EAAWV,EAAuB,EAAQ,SAE1CW,EAAmBX,EAAuB,EAAQ,SAElDY,EAAgBZ,EAAuB,EAAQ,SAE/Ca,EAAmBb,EAAuB,EAAQ,SAsClDuJ,EAEJ,WAKE,SAASA,EAAcxB,EAIrByB,IAGA,EAAI7I,EAAiBP,SAASuB,KAAM4H,IACpC,EAAI1I,EAAiBT,SAASuB,KAAM,iBAAa,IACjD,EAAId,EAAiBT,SAASuB,KAAM,kBAAc,IAE9C,EAAIjB,EAASN,SAAS2H,IACxBwB,EAAcE,UAAU1B,EAAK,GAAIA,EAAK,IAEtCpG,KAAK+H,UAAY3B,EAAK,GACtBpG,KAAKgI,WAAa5B,EAAK,IACkB,YAAhC,EAAIL,EAAStH,SAAS2H,IAC/BwB,EAAcE,UAAU1B,EAAK6B,SAAU7B,EAAK8B,WAE5ClI,KAAK+H,UAAY3B,EAAK6B,SACtBjI,KAAKgI,WAAa5B,EAAK8B,gBACL/H,IAATiG,QAA+BjG,IAAT0H,GAC/BD,EAAcE,UAAU1B,EAAMyB,GAE9B7H,KAAK+H,UAAY3B,EACjBpG,KAAKgI,WAAaH,IAElB7H,KAAK+H,UAAY,EACjB/H,KAAKgI,WAAa,GA6KtB,OAlKA,EAAI/I,EAAcR,SAASmJ,EAAe,CAAC,CACzC5G,IAAK,SAMLxC,MAAO,WAKL,OAFAoJ,EAAcE,UAAU9H,KAAK+H,UAAW/H,KAAKgI,YAEtC,CACL5E,OAAQ,WACR6E,SAAUjI,KAAK+H,UACfG,UAAWlI,KAAKgI,cAGnB,CACDhH,IAAK,SACLxC,MAAO,SAAU6E,GAKf,OAAOA,aAAiBuE,GAAiB5H,KAAKiI,WAAa5E,EAAM4E,UAAYjI,KAAKkI,YAAc7E,EAAM6E,YAQvG,CACDlH,IAAK,YACLxC,MAAO,SAAU2J,GAKf,IAAIC,EAAM1E,KAAK2E,GAAK,IAChBC,EAAUtI,KAAKiI,SAAWG,EAC1BG,EAAWvI,KAAKkI,UAAYE,EAC5BI,EAAUL,EAAMF,SAAWG,EAC3BK,EAAWN,EAAMD,UAAYE,EAC7BM,EAAkBhF,KAAKiF,KAAKL,EAAUE,GAAW,GACjDI,EAAmBlF,KAAKiF,KAAKJ,EAAWE,GAAY,GAEpDI,EAAIH,EAAkBA,EAAkBhF,KAAKoF,IAAIR,GAAW5E,KAAKoF,IAAIN,GAAWI,EAAmBA,EAEvG,OADAC,EAAInF,KAAKqF,IAAI,EAAKF,GACX,EAAInF,KAAKsF,KAAKtF,KAAKuF,KAAKJ,MAQhC,CACD7H,IAAK,eACLxC,MAAO,SAAU2J,GAKf,OAA+B,KAAxBnI,KAAKkJ,UAAUf,KAQvB,CACDnH,IAAK,UACLxC,MAAO,SAAU2J,GAKf,OAA+B,OAAxBnI,KAAKkJ,UAAUf,KAMvB,CACDnH,IAAK,WACLsD,IAAK,WAGH,OAAOtE,KAAK+H,WAEdoB,IAAK,SAAUC,GAGbxB,EAAcE,UAAUsB,EAAKpJ,KAAKkI,WAElClI,KAAK+H,UAAYqB,IASlB,CACDpI,IAAK,YACLsD,IAAK,WAGH,OAAOtE,KAAKgI,YAEdmB,IAAK,SAAUC,GAGbxB,EAAcE,UAAU9H,KAAKiI,SAAUmB,GAEvCpJ,KAAKgI,WAAaoB,KAElB,CAAC,CACHpI,IAAK,YACLxC,MAAO,SAAUyJ,EAEfC,GAGA,GAAImB,MAAMpB,IAAaoB,MAAMnB,IAAkC,kBAAbD,GAA8C,kBAAdC,EAChF,MAAM,IAAIvI,UAAU,yDAGtB,GAAIsI,GAAY,GACd,MAAM,IAAItI,UAAU,oCAAsCsI,EAAW,aAGvE,GAAIA,EAAW,GACb,MAAM,IAAItI,UAAU,oCAAsCsI,EAAW,YAGvE,GAAIC,GAAa,IACf,MAAM,IAAIvI,UAAU,qCAAuCuI,EAAY,cAGzE,GAAIA,EAAY,IACd,MAAM,IAAIvI,UAAU,qCAAuCuI,EAAY,eAS1E,CACDlH,IAAK,UACLxC,MAAO,WACL,OAAO8K,UAAUC,YAAYC,oBAAmB,SAAUC,GACxD,OAAO,IAAI7B,EAAc6B,EAASC,OAAOzB,SAAUwB,EAASC,OAAOxB,kBAIlEN,EA9MT,GAiNI/B,EAAW+B,EACfrJ,EAAQE,QAAUoH,G,kCC5QlB,IAAIxH,EAAyB,EAAQ,QAEjCC,EAAyB,EAAQ,QAErCA,EAAuBC,EAAS,aAAc,CAC5CC,OAAO,IAGTD,EAAQE,aAAU,EAElB,IAAIsH,EAAW1H,EAAuB,EAAQ,SAE1CW,EAAmBX,EAAuB,EAAQ,SAElDsL,EAA8BtL,EAAuB,EAAQ,SAE7DuL,EAAmBvL,EAAuB,EAAQ,SAElDwL,EAAaxL,EAAuB,EAAQ,SAE5CyL,EAAgBzL,EAAuB,EAAQ,SAa/C0L,EAEJ,SAAUC,GAGR,SAASD,EAAaE,GAGpB,IAAI1I,EAKJ,IAHA,EAAIvC,EAAiBP,SAASuB,KAAM+J,GACpCxI,GAAQ,EAAIoI,EAA4BlL,SAASuB,MAAM,EAAI4J,EAAiBnL,SAASsL,GAAclJ,KAAKb,KAAM,kBAE1GiK,GAAoD,YAAtC,EAAIlE,EAAStH,SAASwL,KACjC1I,EAAM4H,IAAIc,GAAc,IAC3B,MAAM,IAAInI,MAAM,mCAIpB,OAAOP,EAGT,OAnBA,EAAIsI,EAAWpL,SAASsL,EAAcC,GAmB/BD,EApBT,CAqBED,EAAcrL,SAEhBF,EAAQE,QAAUsL,EAElBD,EAAcrL,QAAQyL,iBAAiB,gBAAiBH,I,kCC5DxD,IAAII,EAA0B,EAAQ,QAElC9L,EAAyB,EAAQ,QAEjC+L,EAA0B,EAAQ,QAEtCA,EAAwB7L,EAAS,aAAc,CAC7CC,OAAO,IAGTD,EAAQE,aAAU,EAElB,IAAI4L,EAAOhM,EAAuB,EAAQ,SAEtCiM,EAAQjM,EAAuB,EAAQ,SAEvCa,EAAmBb,EAAuB,EAAQ,SAElDkM,EAAUlM,EAAuB,EAAQ,SAEzCmM,EAAUnM,EAAuB,EAAQ,SAEzCK,EAAWL,EAAuB,EAAQ,SAE1CU,EAAWV,EAAuB,EAAQ,SAE1CoM,EAAgBpM,EAAuB,EAAQ,SAE/CM,EAAeN,EAAuB,EAAQ,SAE9CO,EAAqBP,EAAuB,EAAQ,SAEpDqM,EAAUrM,EAAuB,EAAQ,SAEzCsM,EAAYtM,EAAuB,EAAQ,SAE3CuM,EAAavM,EAAuB,EAAQ,SAE5CwM,EAAWxM,EAAuB,EAAQ,SAE1CyH,EAAQzH,EAAuB,EAAQ,SAEvC0H,EAAW1H,EAAuB,EAAQ,SAE1CW,EAAmBX,EAAuB,EAAQ,SAElDY,EAAgBZ,EAAuB,EAAQ,SAE/CyM,EAAmBzM,EAAuB,EAAQ,SAElDS,EAAWT,EAAuB,EAAQ,SAE1Cc,EAAed,EAAuB,EAAQ,SAE9C0M,EAAmB1M,EAAuB,EAAQ,SAElD2M,EAAU3M,EAAuB,EAAQ,SAEzC4M,EAAU5M,EAAuB,EAAQ,SAEzC6M,EAAW7M,EAAuB,EAAQ,SAE1C8M,EAAY9M,EAAuB,EAAQ,SAE3C+M,EAAa/M,EAAuB,EAAQ,SAE5CgN,EAAchN,EAAuB,EAAQ,SAE7CiN,EAAajN,EAAuB,EAAQ,SAE5CkN,EAAgB,EAAQ,QAExBC,EAAuB,EAAQ,QAE/BC,EAAW,EAAQ,QAEnBC,EAAcrN,EAAuB,EAAQ,SAE7CsN,EAAiBtN,EAAuB,EAAQ,SAEhDuN,EAAgCzB,EAAwB,EAAQ,SAEhE0B,EAAUxN,EAAuB,EAAQ,SAEzCyN,EAAgC3B,EAAwB,EAAQ,SAEhE4B,EAAmB1N,EAAuB,EAAQ,SAalD2N,EAAS,EAAQ,QAEjBC,EAAqB,GAGrBC,EAAW,GAEXC,EAAc,EAIdC,GAAkBjN,EAAaV,QAAQ6F,IAAI,WAQ/C,SAAS+H,IACP,IAAIC,EAAYnN,EAAaV,QAAQ6F,IAAI,cAED,MAApCgI,EAAUA,EAAU7I,OAAS,KAC/B6I,GAAa,KAGf,IAAIvJ,EAAMuJ,EAAU7J,QAAQ,cAAe,IAC3C,OAAOM,EAAIwJ,QAAO,EAAIzN,EAASL,SAASsE,GAAKlC,KAAKkC,EAAK,MAdrDqJ,EACFjN,EAAaV,QAAQ+N,yBAAyBZ,GAE9CzM,EAAaV,QAAQ+N,yBAAyBV,GAiChD,IAAIW,EAEJ,WAME,SAASA,EAAYC,EAEnBzC,EAEA7I,IAGA,EAAIpC,EAAiBP,SAASuB,KAAMyM,IACpC,EAAI3B,EAAiBrM,SAASuB,KAAM,UAAM,IAC1C,EAAI8K,EAAiBrM,SAASuB,KAAM,gBAAY,IAChD,EAAI8K,EAAiBrM,SAASuB,KAAM,iBAAa,IACjD,EAAI8K,EAAiBrM,SAASuB,KAAM,iBAAa,GAElB,oBAApBA,KAAK2M,YACd3M,KAAK2M,WAAWrK,MAAMtC,KAAMuC,WAG9B,IAAIqK,EAAQ,KAGZ,GAFA5M,KAAK6M,UAAYV,IAEQ,kBAAdO,EACT1M,KAAK0M,UAAYA,EAEbzC,GAAoD,YAAtC,EAAIlE,EAAStH,SAASwL,KACtC2C,EAAQ3C,QAEL,GAAIyC,GAAkD,YAArC,EAAI3G,EAAStH,SAASiO,GAAyB,CAIrE,IAAK,IAAII,KAHT9M,KAAK0M,UAAYA,EAAUA,UAC3BE,EAAQ,GAEUF,EACF,cAAVI,IACFF,EAAME,GAASJ,EAAUI,IAIzB7C,GAAoD,YAAtC,EAAIlE,EAAStH,SAASwL,KACtC7I,EAAU6I,GAId,GAAI2C,IAAU5M,KAAKmJ,IAAIyD,EAAOxL,GAC5B,MAAM,IAAIU,MAAM,wCAuhFpB,OA7gFA,EAAI7C,EAAcR,SAASgO,EAAa,CAAC,CACvCzL,IAAK,SAOLxC,MAAO,WAGL,GAAuB,kBAAZwB,KAAKqH,GACd,OAAOrH,KAAKqH,GAGd,GAA6B,kBAAlBrH,KAAK+M,SACd,OAAO/M,KAAK+M,SAGd,IAAIC,EAAU,QAAUhB,IAExB,OADAhM,KAAK+M,SAAWC,EACTA,IAMR,CACDhM,IAAK,sBACLxC,MAAO,WAGL,GAAI4N,EAAgB,CAClB,IAAI/E,EAAKrH,KAAKqH,GAMd,OAJKA,IACHA,EAAKrH,KAAKiN,UAGL,CACL5F,GAAIA,EACJqF,UAAW1M,KAAK0M,WAGlB,OAAO1M,OAGV,CACDgB,IAAK,iBACLxC,MAAO,WAGL,IAAI0O,EAAkB/N,EAAaV,QAAQ0O,2BAE3C,OAAOD,EAAgBE,cAAcpN,KAAKqN,yBAE3C,CACDrM,IAAK,mBACLxC,MAAO,WACL,IAAI8O,EAAatN,KAAKuN,iBAElBC,EAAQ,GAEZ,IAAK,IAAIC,KAAUH,EACjBE,EAAMC,QAAUtN,EAGlB,IAAI+M,EAAkB/N,EAAaV,QAAQ0O,2BAE3CD,EAAgBQ,cAAc1N,KAAKqN,sBAAuBG,KAE3D,CACDxM,IAAK,iBACLxC,MAAO,WAGL,IAAI0O,EAAkB/N,EAAaV,QAAQ0O,2BAE3C,OAAOD,EAAgBS,cAAc3N,KAAKqN,yBAO3C,CACDrM,IAAK,mBACLxC,MAAO,SAAUoP,GAGf,IAAIC,EAAU7N,KAAK8N,iBAEfC,EAASF,EAAQA,EAAQpK,OAAS,GAClCuK,EAAOJ,IAAe,EAAI9H,EAAMrH,SAASsP,IAC7C,EAAIlD,EAASpM,SAASuP,GAAMnN,KAAKmN,GAAM,SAAUhN,UACxC+M,EAAO/M,QAGjB,CACDA,IAAK,4BACLxC,MAAO,WAGL,IAAIyL,EAAajK,KAAKiK,WAElBiD,EAAkB/N,EAAaV,QAAQ0O,2BAEvCc,EAAcf,EAAgBgB,eAAelO,KAAKqN,uBAClDc,EAAQ,GAEZ,IAAK,IAAIC,KAAUnE,EAAY,CAC7B,IAAIb,EAAMa,EAAWmE,GAErB,GAAIhF,GAAsC,YAA/B,EAAIrD,EAAStH,SAAS2K,MAAuBA,aAAeqD,MAAkBrD,aAAekC,EAAW7M,YAAc2K,aAAeuC,EAAelN,SAG7J,IACE,IAAI4P,GAAO,EAAIpD,EAAQxM,SAAS2K,GAAK,GAAO,GACxCkF,GAAc,EAAI1D,EAAWnM,SAAS4P,GAEtCJ,EAAYG,KAAYE,IAC1BH,EAAMC,GAAUhF,GAElB,MAAOhE,GAGP+I,EAAMC,GAAUhF,GAKtB,OAAO+E,IAER,CACDnN,IAAK,cACLxC,MAAO,SAAU+P,GAKf,IAAIF,EAEFrO,KAAKwO,OAAOD,GAGd,OAFAF,EAAKjL,OAAS,SACdiL,EAAK3B,UAAY1M,KAAK0M,UACf2B,IAER,CACDrN,IAAK,eACLxC,MAAO,WAGL,IAAIqP,EAAU7N,KAAK8N,iBAEfW,EAAezO,KAAK0O,4BAEpBL,EAAO,GAEX,IAAK,IAAIM,KAAQF,EAAc,CAG7B,IAFA,IAAIG,GAAgB,EAEXhL,EAAI,EAAGA,EAAIiK,EAAQpK,OAAQG,GAAK,EACvC,IAAK,IAAIiL,KAAShB,EAAQjK,GAExB,IAAI,EAAI+G,EAAUlM,SAASoQ,GAAOhO,KAAKgO,EAAO,KAAM,CAClD,IAAIC,EAAYD,EAAME,MAAM,KAAK,GAEjC,GAAID,IAAcH,EAAM,CACtBC,GAAgB,EAChB,OAMHA,IACHP,EAAKM,GAAQ,IAAIlD,EAASuD,MAAMP,EAAaE,IAAOH,UAIxD,IAAKG,KAAQd,EAAQ,GACnBQ,EAAKM,GAAQd,EAAQ,GAAGc,GAAMH,SAGhC,OAAOH,IAER,CACDrN,IAAK,iBACLxC,MAAO,WAGL,IAAIyQ,EAASjP,KAAKqH,GAAK,MAAQ,OAE3B6H,EAAOlP,KAAKmP,eAEZC,EAAO,WAAapP,KAAK0M,UAQ7B,OANI1M,KAAKqH,GACP+H,GAAQ,IAAMpP,KAAKqH,GACS,UAAnBrH,KAAK0M,YACd0C,EAAO,SAGF,CACLH,OAAQA,EACRC,KAAMA,EACNE,KAAMA,KAGT,CACDpO,IAAK,eACLxC,MAAO,SAAU8O,IAGVtN,KAAKqH,IAAMiG,EAAW+B,WACzBrP,KAAKqH,GAAKiG,EAAW+B,UAGvB,IAAInC,EAAkB/N,EAAaV,QAAQ0O,2BAE3CD,EAAgBoC,gBAAgBtP,KAAKqN,uBACrC,IAAIkC,EAAU,GAEd,IAAK,IAAIC,KAAUlC,EACF,QAAXkC,EACFD,EAAQC,GAAU,IAAIrE,EAAU1M,QAAQ6O,EAAWkC,IAC/B,aAAXA,IACTD,EAAQC,IAAU,EAAIxE,EAAQvM,SAAS6O,EAAWkC,IAE9CD,EAAQC,aAAmB7D,EAAelN,SAC5C8Q,EAAQC,GAAQC,oBAAoBzP,KAAMwP,IAK5CD,EAAQG,WAA0C,kBAAtBH,EAAQG,YACtCH,EAAQG,WAAY,EAAItE,EAAW3M,SAAS8Q,EAAQG,YAGlDH,EAAQI,WAA0C,kBAAtBJ,EAAQI,YACtCJ,EAAQI,WAAY,EAAIvE,EAAW3M,SAAS8Q,EAAQI,aAGjDJ,EAAQI,WAAaJ,EAAQG,YAChCH,EAAQI,UAAYJ,EAAQG,WAG9BxC,EAAgB0C,oBAAoB5P,KAAKqN,sBAAuBkC,KAEjE,CACDvO,IAAK,cACLxC,MAAO,SAAUqR,GAGf,IAAI3C,EAAkB/N,EAAaV,QAAQ0O,2BAEvC2C,EAAQ5C,EAAgB6C,SAAS/P,KAAKqN,uBAEtCyC,IACFA,EAAMD,QAAUA,KAGnB,CACD7O,IAAK,aACLxC,MAAO,SAAUwR,GAGf,GAAIhQ,KAAK+M,UAAYiD,EACnB,GAAI5D,EAAgB,CAClB,IAAIc,EAAkB/N,EAAaV,QAAQ0O,2BAEvC8C,EAAW/C,EAAgBgD,YAAYlQ,KAAKqN,uBAChDrN,KAAKqH,GAAK2I,SACHhQ,KAAK+M,SAERkD,GACF/C,EAAgBoC,gBAAgBtP,KAAKqN,sBAAuB4C,QAG9DjQ,KAAKqH,GAAK2I,SACHhQ,KAAK+M,WAIjB,CACD/L,IAAK,sBACLxC,MAAO,SAAUkG,EAEfyL,GAGA,IAAIC,EAAU,GAEVlD,EAAkB/N,EAAaV,QAAQ0O,2BAEvCU,EAAUX,EAAgBmD,gBAAgBrQ,KAAKqN,uBAEnD,IAAK,IAAIsB,KAAQd,EACXA,EAAQc,aAAiBlD,EAAS6E,WACpCF,EAAQzB,GAAQd,EAAQc,GAAM4B,aAAQpQ,EAAWH,KAAM2O,GAC5CA,KAAQjK,IAEnB0L,EAAQzB,GAAQd,EAAQc,GAAM4B,aAAQpQ,IAI1C,IAAKwO,KAAQjK,EACG,cAATiK,GAAiC,cAATA,GAAmD,kBAAnBjK,EAASiK,GAElD,QAATA,EACTyB,EAAQzB,GAAQ,IAAIxD,EAAU1M,QAAQiG,EAASiK,IAC7B,aAATA,IACTyB,EAAQzB,IAAQ,EAAI3D,EAAQvM,SAASiG,EAASiK,IAE1CyB,EAAQzB,aAAiBlD,EAAS+E,UACpCJ,EAAQzB,QAAQxO,IAPlBiQ,EAAQzB,IAAQ,EAAIvD,EAAW3M,SAASiG,EAASiK,IAYjDyB,EAAQV,YAAcU,EAAQT,YAChCS,EAAQT,UAAYS,EAAQV,WAG9B1P,KAAKyQ,WAAW/L,EAAS2K,UAEV,MAAXc,GACFnQ,KAAK0Q,aAAY,GAGnBxD,EAAgB0C,oBAAoB5P,KAAKqN,sBAAuB+C,KAEjE,CACDpP,IAAK,mBACLxC,MAAO,WACL,IAAI0O,EAAkB/N,EAAaV,QAAQ0O,2BAE3CD,EAAgByD,uBAAuB3Q,KAAKqN,yBAI7C,CACDrM,IAAK,aACLxC,MAAO,cAON,CACDwC,IAAK,SACLxC,MAAO,SAAU+P,GAKf,IAAIqC,EAAY5Q,KAAKqH,GAAKrH,KAAK0M,UAAY,IAAM1M,KAAKqH,GAAKrH,KAC3DuO,EAAOA,GAAQ,CAACqC,GAChB,IAAIvC,EAAO,GACPwC,EAAQ7Q,KAAKiK,WAEjB,IAAK,IAAI6G,KAAUD,EACD,cAAXC,GAAqC,cAAXA,IAA2BD,EAAMC,GAAQtC,OAGtEH,EAAKyC,IAAU,EAAI7F,EAAQxM,SAASoS,EAAMC,IAAS,GAAO,EAAOvC,GAFjEF,EAAKyC,GAAUD,EAAMC,GAAQtC,SAMjC,IAAIX,EAAU7N,KAAK8N,iBAEnB,IAAK,IAAIiD,KAAUlD,EAAQ,GACzBQ,EAAK0C,GAAUlD,EAAQ,GAAGkD,GAAQvC,SAOpC,OAJIxO,KAAKqH,KACPgH,EAAKgB,SAAWrP,KAAKqH,IAGhBgH,IAQR,CACDrN,IAAK,SACLxC,MAAO,SAAU6E,GAKf,OAAIrD,OAASqD,GAINA,aAAiBoJ,GAAezM,KAAK0M,YAAcrJ,EAAMqJ,WAAa1M,KAAKqH,KAAOhE,EAAMgE,IAAyB,qBAAZrH,KAAKqH,KAUlH,CACDrG,IAAK,QACLxC,MAAO,SAAUmQ,GAKf,IAAK3O,KAAKqH,GACR,OAAO,EAGT,IAAI2J,EAAahR,KAAK8N,iBAElBW,EAAezO,KAAK0O,4BAExB,GAAIC,EAAM,CACR,GAAIF,EAAawC,eAAetC,GAC9B,OAAO,EAGT,IAAK,IAAI/K,EAAI,EAAGA,EAAIoN,EAAWvN,OAAQG,IACrC,GAAIoN,EAAWpN,GAAGqN,eAAetC,GAC/B,OAAO,EAIX,OAAO,EAGT,OAAiD,KAA7C,EAAI7I,EAAMrH,SAASuS,EAAW,IAAIvN,QAIU,KAA5C,EAAIqC,EAAMrH,SAASgQ,GAAchL,SAWtC,CACDzC,IAAK,YACLxC,MAAO,WAOL,IAJA,IAAIwS,EAAahR,KAAK8N,iBAElBE,EAAO,GAEFpK,EAAI,EAAGA,EAAIoN,EAAWvN,OAAQG,IACrC,IAAK,IAAIsN,KAAUF,EAAWpN,GAC5BoK,EAAKkD,IAAU,EAInB,IAAIzC,EAAezO,KAAK0O,4BAExB,IAAK,IAAIyC,KAAU1C,EACjBT,EAAKmD,IAAU,EAGjB,OAAO,EAAIrL,EAAMrH,SAASuP,KAO3B,CACDhN,IAAK,kBACLxC,MAAO,WAGL,IAAI8O,EAAatN,KAAKuN,iBAEtB,SAAS,EAAIzH,EAAMrH,SAAS6O,GAAY7J,SAOzC,CACDzC,IAAK,YACLxC,MAAO,WAGL,IAAKwB,KAAKqH,GACR,MAAM,IAAIvF,MAAM,qDAGlB,MAAO,CACLsB,OAAQ,UACRsJ,UAAW1M,KAAK0M,UAChB2C,SAAUrP,KAAKqH,MAQlB,CACDrG,IAAK,MACLxC,MAAO,SAAUmQ,GAKf,OAAO3O,KAAKiK,WAAW0E,KAQxB,CACD3N,IAAK,WACLxC,MAAO,SAAUmQ,GAKf,IAAInQ,EAAQwB,KAAKsE,IAAIqK,GAErB,GAAInQ,EAAO,CACT,KAAMA,aAAiBmN,EAAelN,SACpC,MAAM,IAAIqD,MAAM,2CAA6C6M,GAK/D,OAFAnQ,EAAMiR,oBAAoBzP,KAAM2O,GAEzBnQ,EAGT,OAAO,IAAImN,EAAelN,QAAQuB,KAAM2O,KAOzC,CACD3N,IAAK,SACLxC,MAAO,SAAUmQ,GAKf,IAAIvF,EAAMpJ,KAAKiK,WAAW0E,GAE1B,GAAW,MAAPvF,EACF,MAAO,GAGT,GAAmB,kBAARA,EAAkB,CAC3B,GAA4B,oBAAjBA,EAAIgI,SACb,MAAO,GAGThI,EAAMA,EAAIgI,WAGZ,OAAO,EAAIlG,EAASzM,SAAS2K,KAS9B,CACDpI,IAAK,MACLxC,MAAO,SAAUmQ,GAKf,IAAI1E,EAAajK,KAAKiK,WAEtB,QAAIA,EAAWgH,eAAetC,IACD,MAApB1E,EAAW0E,KAoCrB,CACD3N,IAAK,MACLxC,MAAO,SAAUwC,EAEfxC,EAEA4C,GAKA,IAAIgP,EAAU,GACViB,EAAS,GAEb,GAAIrQ,GAAsC,YAA/B,EAAI+E,EAAStH,SAASuC,GAC/BoP,EAAUpP,EACVI,EAAU5C,MACL,IAAmB,kBAARwC,EAGhB,OAAOhB,KAFPoQ,EAAQpP,GAAOxC,EAKjB4C,EAAUA,GAAW,GACrB,IAAIkQ,EAAW,GAMf,IAAK,IAAIC,IAJ0C,oBAAxCvR,KAAKwR,YAAYC,qBAC1BH,GAAW,EAAI5G,EAAQjM,SAAS6S,GAAUzQ,KAAKyQ,EAAUtR,KAAKwR,YAAYC,uBAG9DrB,EACZ,GAAU,cAANmB,GAA2B,cAANA,EAAzB,CAMA,IAAI,EAAIzS,EAASL,SAAS6S,GAAUzQ,KAAKyQ,EAAUC,IAAM,EACvD,MAAM,IAAIzP,MAAM,qCAAuCyP,GAGzD,GAAInQ,EAAQoM,MACV6D,EAAOE,GAAK,IAAI9F,EAAS+E,aACpB,GAAIJ,EAAQmB,aAAc9F,EAASiG,GACxCL,EAAOE,GAAKnB,EAAQmB,QACf,GAAInB,EAAQmB,IAA4C,YAAtC,EAAIxL,EAAStH,SAAS2R,EAAQmB,KAA+C,kBAApBnB,EAAQmB,GAAGI,KAC3FN,EAAOE,IAAK,EAAI9F,EAASmG,YAAYxB,EAAQmB,SACxC,GAAU,aAANA,GAA0B,OAANA,EACH,kBAAfnB,EAAQmB,KACjBvR,KAAKqH,GAAK+I,EAAQmB,SAEf,GAAU,QAANA,GAAqD,YAAtC,EAAIxL,EAAStH,SAAS2R,EAAQmB,KAAsBnB,EAAQmB,aAAcpG,EAAU1M,QAEvG,GAAI2R,EAAQmB,aAAc5F,EAAelN,QAAS,CACvD,IAAIoT,EAAW,IAAIlG,EAAelN,QAAQuB,KAAMuR,GAChDM,EAASC,gBAAkB1B,EAAQmB,GAAGO,gBACtCT,EAAOE,GAAK,IAAI9F,EAASuD,MAAM6C,QAE/BR,EAAOE,GAAK,IAAI9F,EAASuD,MAAMoB,EAAQmB,SANvCF,EAAOE,GAAK,IAAI9F,EAASuD,MAAM,IAAI7D,EAAU1M,QAAQ2R,EAAQmB,KAUjE,IAAIQ,EAAoB/R,KAAKiK,WAEzBqD,EAAatN,KAAKuN,iBAEtB,GAAmB,kBAARvM,IAAoB,EAAI2J,EAAUlM,SAASuC,GAAKH,KAAKG,EAAK,KAAM,CACzE,IAAI6N,EAAQ7N,EAAI+N,MAAM,KAAK,GAE3B,IAAKzB,EAAWuB,GACd,OAAO7O,KAKX,IAAIgS,EAAY,GAEhB,IAAK,IAAIC,KAAUZ,EACbA,EAAOY,aAAmBxG,EAAS6E,WACrC0B,EAAUC,GAAUZ,EAAOY,GAAQ1B,QAAQwB,EAAkBE,GAASjS,KAAMiS,GACjEZ,EAAOY,aAAmBxG,EAAS+E,UAC9CwB,EAAUC,GAAUZ,EAAOY,GAAQ1B,QAAQwB,EAAkBE,KAKjE,IAAK7Q,EAAQ8Q,iBAAkB,CAC7B,IAAIC,EAAanS,KAAKoS,SAASJ,GAE/B,GAAIG,EAKF,MAJ6B,oBAAlB/Q,EAAQiR,OACjBjR,EAAQiR,MAAMrS,KAAMmS,IAGf,EAKX,IAAInB,EAAahR,KAAK8N,iBAElBwE,EAAOtB,EAAWvN,OAAS,EAE3ByJ,EAAkB/N,EAAaV,QAAQ0O,2BAE3C,IAAK,IAAIoF,KAAWlB,EAAQ,CAC1B,IAAImB,EAASnB,EAAOkB,GAASE,UAAUzB,EAAWsB,GAAMC,IAExDrF,EAAgBwF,aAAa1S,KAAKqN,sBAAuBkF,EAASC,GAGpE,OAAOxS,OASR,CACDgB,IAAK,QACLxC,MAAO,SAAUmQ,EAEfvN,GAOA,OAFAA,EAAUA,GAAW,GACrBA,EAAQoM,OAAQ,EACTxN,KAAKmJ,IAAIwF,EAAM,KAAMvN,KAW7B,CACDJ,IAAK,YACLxC,MAAO,SAAUmQ,EAEfgE,GASA,GAJsB,qBAAXA,IACTA,EAAS,GAGW,kBAAXA,EACT,MAAM,IAAI7Q,MAAM,6CAGlB,OAAO9B,KAAKmJ,IAAIwF,EAAM,IAAIlD,EAASmH,YAAYD,MAUhD,CACD3R,IAAK,MACLxC,MAAO,SAAUmQ,EAEfkE,GAKA,OAAO7S,KAAKmJ,IAAIwF,EAAM,IAAIlD,EAASqH,MAAM,CAACD,OAU3C,CACD7R,IAAK,SACLxC,MAAO,SAAUmQ,EAEfoE,GAKA,OAAO/S,KAAKmJ,IAAIwF,EAAM,IAAIlD,EAASqH,MAAMC,MAY1C,CACD/R,IAAK,YACLxC,MAAO,SAAUmQ,EAEfkE,GAKA,OAAO7S,KAAKmJ,IAAIwF,EAAM,IAAIlD,EAASuH,YAAY,CAACH,OAYjD,CACD7R,IAAK,eACLxC,MAAO,SAAUmQ,EAEfoE,GAKA,OAAO/S,KAAKmJ,IAAIwF,EAAM,IAAIlD,EAASuH,YAAYD,MAWhD,CACD/R,IAAK,SACLxC,MAAO,SAAUmQ,EAEfkE,GAKA,OAAO7S,KAAKmJ,IAAIwF,EAAM,IAAIlD,EAASwH,SAAS,CAACJ,OAW9C,CACD7R,IAAK,YACLxC,MAAO,SAAUmQ,EAEfoE,GAKA,OAAO/S,KAAKmJ,IAAIwF,EAAM,IAAIlD,EAASwH,SAASF,MAY7C,CACD/R,IAAK,KACLxC,MAAO,SAAUmQ,GAOf,IAFA,IAAId,EAAU7N,KAAK8N,iBAEVlK,EAAIiK,EAAQpK,OAAQG,KAC3B,GAAIiK,EAAQjK,GAAG+K,GACb,OAAOd,EAAQjK,GAAG+K,KASvB,CACD3N,IAAK,QACLxC,MAAO,WAGL,IAAI0U,EAAQ,IAAIlT,KAAKwR,YAEhB0B,EAAMxG,YACTwG,EAAMxG,UAAY1M,KAAK0M,WAGzB,IAAIzC,EAAajK,KAAKiK,WAEtB,GAAmD,oBAAxCjK,KAAKwR,YAAYC,mBAAmC,CAC7D,IAAIH,EAAWtR,KAAKwR,YAAYC,sBAAwB,GAGpD0B,EAAO,GAEX,IAAK,IAAItK,KAAKoB,GACR,EAAInL,EAASL,SAAS6S,GAAUzQ,KAAKyQ,EAAUzI,GAAK,IACtDsK,EAAKtK,GAAKoB,EAAWpB,IAIzBoB,EAAakJ,EAOf,OAJID,EAAM/J,KACR+J,EAAM/J,IAAIc,GAGLiJ,IAOR,CACDlS,IAAK,cACLxC,MAAO,WAGL,IAAI0U,EAAQ,IAAIlT,KAAKwR,YAQrB,GANK0B,EAAMxG,YACTwG,EAAMxG,UAAY1M,KAAK0M,WAGzBwG,EAAM7L,GAAKrH,KAAKqH,GAEZ+E,EAEF,OAAO8G,EAGT,IAAIhG,EAAkB/N,EAAaV,QAAQ0O,2BAM3C,OAJID,GACFA,EAAgBkG,eAAepT,KAAKqN,sBAAuB6F,EAAM7F,uBAG5D6F,IAOR,CACDlS,IAAK,QACLxC,MAAO,WAGL,OAAQwB,KAAKqH,KASd,CACDrG,IAAK,UACLxC,MAAO,WAGL,IAAKwB,KAAKqH,GACR,OAAO,EAGT,IAAI6F,EAAkB/N,EAAaV,QAAQ0O,2BAEvC2C,EAAQ5C,EAAgB6C,SAAS/P,KAAKqN,uBAE1C,QAAIyC,GACKA,EAAMD,UAkBhB,CACD7O,IAAK,SACLxC,MAAO,WACL,IAAI6U,GAAU,EAAIzU,EAAmBH,SAErCE,EAAaF,QAAQyC,MAAK,SAASC,EAAQC,GAGzC,IAAIkS,EACJ,OAAO3U,EAAaF,QAAQ+C,MAAK,SAAUC,GACzC,MAAO,EACL,OAAQA,EAASC,KAAOD,EAASE,MAC/B,KAAK,EACH,GAAI3B,KAAKqH,GAAI,CACX5F,EAASE,KAAO,EAChB,MAGF,OAAOF,EAASG,OAAO,UAAU,GAEnC,KAAK,EAIH,OAHAH,EAASC,KAAO,EAChB4R,EAAQ,IAAI5H,EAAYjN,QAAQuB,KAAK0M,WACrCjL,EAASE,KAAO,EACT2R,EAAMhP,IAAItE,KAAKqH,GAAIjG,GAE5B,KAAK,EACH,OAAOK,EAASG,OAAO,UAAU,GAEnC,KAAK,EAIH,GAHAH,EAASC,KAAO,EAChBD,EAAS8R,GAAK9R,EAAS,SAAS,GAE1BA,EAAS8R,GAAGC,OAASnI,EAAY5M,QAAQgV,iBAAmB,CAChEhS,EAASE,KAAO,GAChB,MAGF,OAAOF,EAASG,OAAO,UAAU,GAEnC,KAAK,GACH,MAAMH,EAAS8R,GAEjB,KAAK,GACL,IAAK,MACH,OAAO9R,EAASY,UAGrBlB,EAASnB,KAAM,CAAC,CAAC,EAAG,SAGzB,OAAO,WACL,OAAOqT,EAAQ/Q,MAAMtC,KAAMuC,YAlDxB,IA0DN,CACDvB,IAAK,UACLxC,MAAO,WAGL,OAAQwB,KAAKoS,SAASpS,KAAKiK,cAa5B,CACDjJ,IAAK,WACLxC,MAAO,SAAUqS,GAKf,GAAIA,EAAMI,eAAe,UAAYJ,EAAM6C,eAAevI,EAAU1M,SAClE,OAAO,IAAI4M,EAAY5M,QAAQ4M,EAAY5M,QAAQkV,YAAa,4BAGlE,IAAK,IAAIC,KAAQ/C,EACf,IAAK,2BAA2BgD,KAAKD,GACnC,OAAO,IAAIvI,EAAY5M,QAAQ4M,EAAY5M,QAAQqV,kBAIvD,OAAO,IAQR,CACD9S,IAAK,SACLxC,MAAO,WAGL,IAAIuV,EAAM/T,KAAKsE,IAAI,OAEnB,OAAIyP,aAAe5I,EAAU1M,QACpBsV,EAGF,OAUR,CACD/S,IAAK,SACLxC,MAAO,SAAUuV,EAEf3S,GAKA,OAAOpB,KAAKmJ,IAAI,MAAO4K,EAAK3S,KAO7B,CACDJ,IAAK,SACLxC,MAAO,WAKL,IAFA,IAAIwV,EAEKC,EAAO1R,UAAUkB,OAAQuK,EAAO,IAAIkG,MAAMD,GAAOE,EAAQ,EAAGA,EAAQF,EAAME,IACjFnG,EAAKmG,GAAS5R,UAAU4R,GAG1B,GAAInG,EAAKvK,OAAQ,CACfuQ,EAAe,GACf,IAAII,GAA4B,EAC5BC,GAAoB,EACpBC,OAAiBnU,EAErB,IACE,IAAK,IAAkDoU,EAA9CC,GAAY,EAAI/J,EAAchM,SAASuP,KAAgBoG,GAA6BG,EAAQC,EAAU7S,QAAQ8S,MAAOL,GAA4B,EAAM,CAC9J,IAAIM,EAAQH,EAAM/V,MAElB,GAAqB,kBAAVkW,EAGT,MAAM,IAAI5S,MAAM,0EAFhBkS,EAAaW,KAAKD,IAKtB,MAAOE,GACPP,GAAoB,EACpBC,EAAiBM,EACjB,QACA,IACOR,GAAiD,MAApBI,EAAUK,QAC1CL,EAAUK,SAEZ,QACA,GAAIR,EACF,MAAMC,IAMdtU,KAAK8U,iBAAiBd,KAOvB,CACDhT,IAAK,QACLxC,MAAO,WAGL,IAAIyL,EAAajK,KAAKiK,WAClB8K,EAAW,GACXzD,EAAW,CAAC,YAAa,aAM7B,IAAK,IAAI0D,IAJ0C,oBAAxChV,KAAKwR,YAAYC,qBAC1BH,GAAW,EAAI5G,EAAQjM,SAAS6S,GAAUzQ,KAAKyQ,EAAUtR,KAAKwR,YAAYC,uBAGxDxH,GACd,EAAInL,EAASL,SAAS6S,GAAUzQ,KAAKyQ,EAAU0D,GAAW,IAC5DD,EAASC,IAAW,GAIxB,OAAOhV,KAAKmJ,IAAI4L,EAAU,CACxBvH,OAAO,MAoBV,CACDxM,IAAK,QACLxC,MAAO,SAAU4C,GAKfA,EAAUA,GAAW,GACrB,IAcQ6T,EAdJC,EAAe,IAEf9T,EAAQ6P,eAAe,kBACzBiE,EAAaC,aAAe/T,EAAQ+T,cAGlC/T,EAAQ6P,eAAe,kBACzBiE,EAAaE,aAAehU,EAAQgU,cAGlChU,EAAQ6P,eAAe,cACzBiE,EAAaG,QAAU,IAEnB,EAAItW,EAASN,SAAS2C,EAAQiU,UAGhC,EAAIxK,EAASpM,SAASwW,EAAY7T,EAAQiU,SAASxU,KAAKoU,GAAW,SAAUjU,GAEzE,IAAIsU,GADF,EAAIvW,EAASN,SAASuC,GAGxBkU,EAAaG,SAAU,EAAI3K,EAAQjM,SAAS6W,EAAYJ,EAAaG,SAASxU,KAAKyU,EAAWtU,GAE9FkU,EAAaG,QAAQV,KAAK3T,MAI9BkU,EAAaG,QAAQV,KAAKvT,EAAQiU,UAItC,IAAIhU,EAAalC,EAAaV,QAAQ8W,sBAEtC,OAAOlU,EAAWmU,MAAMxV,MAAM,EAAMkV,KAqBrC,CACDlU,IAAK,mBACLxC,MAAO,SAAUwP,EAEf5M,GAOA,OAFAA,EAAUA,GAAW,GACrBA,EAAQiU,QAAUrH,EACXhO,KAAKwV,MAAMpU,KA8DnB,CACDJ,IAAK,OACLxC,MAAO,SAAU4H,EAEfyB,EAEA4N,GAKA,IAEI5E,EACAzP,EAHAG,EAAQvB,KAiCZ,GA5BoC,YAAhC,EAAI+F,EAAStH,SAAS2H,IAAsC,qBAATA,GACrDyK,EAAQzK,EAE4B,YAAhC,EAAIL,EAAStH,SAASoJ,KACxBzG,EAAUyG,KAGZgJ,EAAQ,GACRA,EAAMzK,GAAQyB,EACdzG,EAAUqU,IAKPrU,GAAWyP,IACdzP,EAAU,GAEmB,oBAAlByP,EAAM6E,UACftU,EAAQsU,QAAU7E,EAAM6E,eACjB7E,EAAM6E,SAGY,oBAAhB7E,EAAMwB,QACfjR,EAAQiR,MAAQxB,EAAMwB,aACfxB,EAAMwB,QAIbxB,EAAO,CACT,IAAIsB,EAAanS,KAAKoS,SAASvB,GAE/B,GAAIsB,EAKF,OAJI/Q,GAAoC,oBAAlBA,EAAQiR,OAC5BjR,EAAQiR,MAAMrS,KAAMmS,GAGfzT,EAASD,QAAQqG,OAAOqN,GAGjCnS,KAAKmJ,IAAI0H,EAAOzP,GAGlBA,EAAUA,GAAW,GACrB,IAAIuU,EAAc,GAEdvU,EAAQ6P,eAAe,kBACzB0E,EAAYR,eAAiB/T,EAAQ+T,cAGnC/T,EAAQ6P,eAAe,iBAAmD,kBAAzB7P,EAAQgU,eAC3DO,EAAYP,aAAehU,EAAQgU,cAGjChU,EAAQ6P,eAAe,mBAAuD,kBAA3B7P,EAAQwU,iBAC7DD,EAAYC,eAAiBxU,EAAQwU,gBAGvC,IAAIvU,EAAalC,EAAaV,QAAQ8W,sBAElCM,GAAkC,IAAxBzU,EAAQ0U,aAAwB,EAAI/J,EAAiBtN,SAASuB,MAAQ,KACpF,OAAOqB,EAAW0U,KAAKF,EAASF,GAAa9S,MAAK,WAChD,OAAOxB,EAAW0U,KAAKxU,EAAOoU,QAiBjC,CACD3U,IAAK,UACLxC,MAAO,SAAU4C,GAKfA,EAAUA,GAAW,GACrB,IAAI4U,EAAiB,GAUrB,OARI5U,EAAQ6P,eAAe,kBACzB+E,EAAeb,aAAe/T,EAAQ+T,cAGpC/T,EAAQ6P,eAAe,kBACzB+E,EAAeZ,aAAehU,EAAQgU,cAGnCpV,KAAKqH,GAIHlI,EAAaV,QAAQ8W,sBAAsBU,QAAQjW,KAAMgW,GAHvDtX,EAASD,QAAQsG,YAsB3B,CACD/D,IAAK,MACLxC,MAAO,WAGL,OAAOiO,EAAYyJ,eAAe1K,EAAqB2K,YAAa,CAACnW,SAatE,CACDgB,IAAK,QACLxC,MAAO,WAGL,OAAOiO,EAAY2J,iBAAiB5K,EAAqB2K,YAAa,CAACnW,SAYxE,CACDgB,IAAK,WACLxC,MAAO,WACL,IAAI6X,GAAY,EAAIzX,EAAmBH,SAEvCE,EAAaF,QAAQyC,MAAK,SAASoV,IACjC,IAAIC,EAAgBC,EAAWC,EAC/B,OAAO9X,EAAaF,QAAQ+C,MAAK,SAAUkV,GACzC,MAAO,EACL,OAAQA,EAAUhV,KAAOgV,EAAU/U,MACjC,KAAK,EAGH,GAFA4U,EAAiBpX,EAAaV,QAAQkY,oBAElCJ,EAAeK,UAAW,CAC5BF,EAAU/U,KAAO,EACjB,MAGF,OAAO+U,EAAU9U,OAAO,SAAUlD,EAASD,QAAQqG,OAAO,sDAE5D,KAAK,EAGH,OAFA0R,EAAYD,EAAeM,gBAAgB7W,MAC3C0W,EAAU/U,KAAO,EACV4U,EAAeO,gBAAgBN,GAExC,KAAK,EAEH,OADAC,EAAMC,EAAUtU,KACTsU,EAAU9U,OAAO,SAAU6U,EAAIhT,OAAS,GAEjD,KAAK,EACL,IAAK,MACH,OAAOiT,EAAUrU,UAGtBiU,EAAUtW,UAGf,OAAO,WACL,OAAOqW,EAAU/T,MAAMtC,KAAMuC,YApC1B,IAwDN,CACDvB,IAAK,cACLxC,MAAO,SAAUqB,GAKf,OAAO4M,EAAYyJ,eAAerW,EAAM,CAACG,SAa1C,CACDgB,IAAK,gBACLxC,MAAO,SAAUqB,GAKf,OAAO4M,EAAY2J,iBAAiBvW,EAAM,CAACG,SAe5C,CACDgB,IAAK,0BACLxC,MAAO,WACL,IAAIuY,GAA2B,EAAInY,EAAmBH,SAEtDE,EAAaF,QAAQyC,MAAK,SAAS8V,IACjC,IAAIT,EAAgBC,EAAWS,EAAQ3V,EACvC,OAAO3C,EAAaF,QAAQ+C,MAAK,SAAU0V,GACzC,MAAO,EACL,OAAQA,EAAUxV,KAAOwV,EAAUvV,MACjC,KAAK,EAGH,GAFA4U,EAAiBpX,EAAaV,QAAQkY,oBAElCJ,EAAeK,UAAW,CAC5BM,EAAUvV,KAAO,EACjB,MAGF,MAAM,IAAIG,MAAM,qDAElB,KAAK,EAGH,OAFA0U,EAAYD,EAAeM,gBAAgB7W,MAC3CkX,EAAUvV,KAAO,EACV4U,EAAeY,iBAAiBX,GAEzC,KAAK,EAGH,GAFAS,EAASC,EAAU9U,KAEf6U,EAAQ,CACVC,EAAUvV,KAAO,EACjB,MAGF,MAAM,IAAIG,MAAM,uCAElB,KAAK,EAKH,OAJAR,EAASmL,EAAY2K,SAASH,GAE9BjX,KAAKqX,aAAa/V,EAAOkN,UAElB0I,EAAUtV,OAAO,SAAU5B,MAEpC,KAAK,GACL,IAAK,MACH,OAAOkX,EAAU7U,UAGtB2U,EAAUhX,UAGf,OAAO,WACL,OAAO+W,EAAyBzU,MAAMtC,KAAMuC,YAjDzC,IAsDN,CACDvB,IAAK,aAGLsD,IAAK,WAGH,IAAI4I,EAAkB/N,EAAaV,QAAQ0O,2BAE3C,OAAO,EAAI3C,EAAQ/L,SAASyO,EAAgBoK,mBAAmBtX,KAAKqN,0BAQrE,CACDrM,IAAK,YACLsD,IAAK,WAGH,OAAOtE,KAAKuN,iBAAiBmC,YAQ9B,CACD1O,IAAK,YACLsD,IAAK,WAGH,OAAOtE,KAAKuN,iBAAiBoC,aAE7B,CAAC,CACH3O,IAAK,iBACLxC,MAAO,WACL,IAAI0O,EAAkB/N,EAAaV,QAAQ0O,2BAE3CD,EAAgBqK,kBA4BjB,CACDvW,IAAK,WACLxC,MAAO,SAAUgZ,GAGf,IAAIpW,EAEFmB,UAAUkB,OAAS,QAAsBtD,IAAjBoC,UAAU,GAAmBA,UAAU,GAAK,GAClEkV,EAAe,GAcnB,OAZIrW,EAAQ6P,eAAe,kBACzBwG,EAAatC,aAAe/T,EAAQ+T,cAGlC/T,EAAQ6P,eAAe,kBACzBwG,EAAarC,aAAehU,EAAQgU,cAGlChU,EAAQ6P,eAAe,aACzBwG,EAAapC,QAAU5I,EAAYiL,qBAAqBtW,IAGnDjC,EAAaV,QAAQ8W,sBAAsBC,MAAMgC,GAAM,EAAMC,KA+BrE,CACDzW,IAAK,sBACLxC,MAAO,SAAUgZ,EAEfxJ,EAEA5M,GAKA,OAFAA,EAAUA,GAAW,GACrBA,EAAQiU,QAAUrH,EACXvB,EAAYkL,SAASH,EAAMpW,KAgCnC,CACDJ,IAAK,8BACLxC,MAAO,SAAUgZ,EAEfxJ,EAEA5M,GAKA,OAFAA,EAAUA,GAAW,GACrBA,EAAQiU,QAAUrH,EACXvB,EAAYmL,iBAAiBJ,EAAMpW,KAoB3C,CACDJ,IAAK,mBACLxC,MAAO,SAAUgZ,EAEfpW,GACAA,EAAUA,GAAW,GACrB,IAAIqW,EAAe,GAcnB,OAZIrW,EAAQ6P,eAAe,kBACzBwG,EAAatC,aAAe/T,EAAQ+T,cAGlC/T,EAAQ6P,eAAe,kBACzBwG,EAAarC,aAAehU,EAAQgU,cAGlChU,EAAQ6P,eAAe,aACzBwG,EAAapC,QAAU5I,EAAYiL,qBAAqBtW,IAGnDjC,EAAaV,QAAQ8W,sBAAsBC,MAAMgC,GAAM,EAAOC,KAEtE,CACDzW,IAAK,uBACLxC,MAAO,SAAU4C,GACf,IAGMyW,EAHFxC,EAAU,IAEV,EAAItW,EAASN,SAAS2C,EAAQiU,UAGhC,EAAIxK,EAASpM,SAASoZ,EAAYzW,EAAQiU,SAASxU,KAAKgX,GAAW,SAAU7W,IACvE,EAAIjC,EAASN,SAASuC,GACxBqU,GAAU,EAAI3K,EAAQjM,SAAS4W,GAASxU,KAAKwU,EAASrU,GAEtDqU,EAAQV,KAAK3T,MAIjBqU,EAAQV,KAAKvT,EAAQiU,SAGvB,OAAOA,IAwDR,CACDrU,IAAK,aACLxC,MAAO,SAAUgZ,GAGf,IAAIpW,EAAUmB,UAAUkB,OAAS,QAAsBtD,IAAjBoC,UAAU,GAAmBA,UAAU,GAAK,GAC9EyT,EAAiB,GAcrB,OAZI5U,EAAQ6P,eAAe,kBACzB+E,EAAeb,aAAe/T,EAAQ+T,cAGpC/T,EAAQ6P,eAAe,kBACzB+E,EAAeZ,aAAehU,EAAQgU,cAGpChU,EAAQ6P,eAAe,cAA6C,kBAAtB7P,EAAQ0W,YACxD9B,EAAe8B,UAAY1W,EAAQ0W,WAG9B3Y,EAAaV,QAAQ8W,sBAAsBU,QAAQuB,EAAMxB,KA2BjE,CACDhV,IAAK,UACLxC,MAAO,SAAUgZ,GAGf,IAAIpW,EAEFmB,UAAUkB,OAAS,QAAsBtD,IAAjBoC,UAAU,GAAmBA,UAAU,GAAK,GAClEoT,EAAc,GAclB,OAZIvU,EAAQ6P,eAAe,kBACzB0E,EAAYR,aAAe/T,EAAQ+T,cAGjC/T,EAAQ6P,eAAe,kBACzB0E,EAAYP,aAAehU,EAAQgU,cAGjChU,EAAQ6P,eAAe,cAA6C,kBAAtB7P,EAAQ0W,YACxDnC,EAAYmC,UAAY1W,EAAQ0W,WAG3B3Y,EAAaV,QAAQ8W,sBAAsBQ,KAAKyB,EAAM7B,KAiB9D,CACD3U,IAAK,oBACLxC,MAAO,SAAU6I,GAGf,IAAI/D,EAAM,IAAItD,KAEd,OADAsD,EAAI+D,GAAKA,EACF/D,IAWR,CACDtC,IAAK,WACLxC,MAAO,SAAU6P,EAEf0J,GAGA,IAAK1J,EAAK3B,UACR,MAAM,IAAI5K,MAAM,+CAGlB,IAAI0P,EAActF,EAASmC,EAAK3B,WAC5BsL,EAAIxG,EAAc,IAAIA,EAAgB,IAAI/E,EAAY4B,EAAK3B,WAC3DuL,EAAkB,GAEtB,IAAK,IAAIC,KAAW7J,EACF,cAAZ6J,GAAuC,WAAZA,IAC7BD,EAAgBC,GAAW7J,EAAK6J,IAIpC,GAAIH,EAAU,CAERE,EAAgB5I,WAClB2I,EAAE3Q,GAAK4Q,EAAgB5I,UAGzB,IAAI8I,EAAY,KAEwB,oBAA7BH,EAAEI,yBACXD,EAAYH,EAAEI,0BAGhBJ,EAAEK,mBAEEF,GACFH,EAAEX,aAAac,GAUnB,OANAH,EAAEX,aAAaY,GAEX5J,EAAKgB,UACP2I,EAAEtH,aAAY,GAGTsH,IAWR,CACDhX,IAAK,mBACLxC,MAAO,SAAUkO,EAEf8E,GAGA,GAAyB,kBAAd9E,EACT,MAAM,IAAI/M,UAAU,kDAGtB,GAA2B,qBAAhB6R,EACT,MAAM,IAAI7R,UAAU,2CAGtB,GAA2B,oBAAhB6R,EACT,MAAM,IAAI7R,UAAU,wGAGtBuM,EAASQ,GAAa8E,EAEjBA,EAAY9E,YACf8E,EAAY9E,UAAYA,KAyC3B,CACD1L,IAAK,SACLxC,MAAO,SAAUkO,EAEf4L,EAEAC,GAGA,GAAyB,kBAAd7L,EAAwB,CACjC,GAAIA,GAA4C,kBAAxBA,EAAUA,UAChC,OAAOD,EAAY+L,OAAO9L,EAAUA,UAAWA,EAAW4L,GAE1D,MAAM,IAAIxW,MAAM,iEAIpB,IAAI2W,EAAoB/L,EAEE,SAAtB+L,GAAgCtZ,EAAaV,QAAQ6F,IAAI,0BAC3DmU,EAAoB,SAGtB,IAAIC,EAAcjM,EAAYkM,UAE1B3Y,KAAKiR,eAAe,cAAgBjR,KAAK4Y,UAC3CF,EAAc1Y,KAAK2Y,UACVzM,EAASuM,KAClBC,EAAcxM,EAASuM,GAAmBE,WAG5C,IAAIE,EAAsB,SAAU5O,EAAY7I,GAQ9C,GAPApB,KAAK0M,UAAY+L,EACjBzY,KAAK6M,UAAYV,IAEc,oBAApBnM,KAAK2M,YACd3M,KAAK2M,WAAWrK,MAAMtC,KAAMuC,WAG1B0H,GAAoD,YAAtC,EAAIlE,EAAStH,SAASwL,KACjCjK,KAAKmJ,IAAIc,GAAc,GAAI7I,GAC9B,MAAM,IAAIU,MAAM,yCAgBtB,GAXA+W,EAAoBnM,UAAY+L,EAChCI,EAAoBD,UAAYF,EAChCG,EAAoBF,WAAY,EAAIpO,EAAQ9L,SAASia,EAAa,CAChElH,YAAa,CACXhT,MAAOqa,EACPC,YAAY,EACZC,UAAU,EACVC,cAAc,KAIdV,EACF,IAAK,IAAIW,KAAQX,EACF,cAATW,IACF,EAAI/Z,EAAiBT,SAASoa,EAAoBF,UAAWM,EAAM,CACjEza,MAAO8Z,EAAWW,GAClBH,YAAY,EACZC,UAAU,EACVC,cAAc,IAMtB,GAAIT,EACF,IAAK,IAAIW,KAASX,EACF,cAAVW,IACF,EAAIha,EAAiBT,SAASoa,EAAqBK,EAAO,CACxD1a,MAAO+Z,EAAWW,GAClBJ,YAAY,EACZC,UAAU,EACVC,cAAc,IAgBtB,OAVAH,EAAoBL,OAAS,SAAU3Y,EAAMyY,EAAYC,GACvD,MAAoB,kBAAT1Y,EACF4M,EAAY+L,OAAO3X,KAAKgY,EAAqBhZ,EAAMyY,EAAYC,GAGjE9L,EAAY+L,OAAO3X,KAAKgY,EAAqBJ,EAAmB5Y,EAAMyY,IAG/EO,EAAoBM,kBAAoB1M,EAAY0M,kBACpDjN,EAASuM,GAAqBI,EACvBA,IAUR,CACD7X,IAAK,uBACLxC,MAAO,WACL4N,GAAiB,EAEjBjN,EAAaV,QAAQ+N,yBAAyBZ,KAU/C,CACD5K,IAAK,wBACLxC,MAAO,WACL4N,GAAiB,EAEjBjN,EAAaV,QAAQ+N,yBAAyBV,KAqB/C,CACD9K,IAAK,SACLxC,MAAO,SAAU4a,GAKf,IAAI7C,EAAiBpX,EAAaV,QAAQkY,oBAE1C,OAAKJ,EAAeK,UAIbnK,EAAYyJ,eAAe1K,EAAqB2K,YAAaiD,GAH3D1a,EAASD,QAAQqG,OAAO,uDAwBlC,CACD9D,IAAK,iBACLxC,MAAO,SAAUqB,EAEfuZ,GAKA,IAAI7C,EAAiBpX,EAAaV,QAAQkY,oBAE1C,OAAKJ,EAAeK,UAIbL,EAAe8C,sBAAsBxZ,EAAMuZ,GAHzC1a,EAASD,QAAQqG,OAAO,uDAkBlC,CACD9D,IAAK,WACLxC,MAAO,SAAU4a,GAKf,IAAI7C,EAAiBpX,EAAaV,QAAQkY,oBAE1C,OAAKJ,EAAeK,UAIbnK,EAAY2J,iBAAiB5K,EAAqB2K,YAAaiD,GAH7D1a,EAASD,QAAQqG,OAAO,uDAkBlC,CACD9D,IAAK,mBACLxC,MAAO,SAAUqB,EAEfuZ,GAKA,IAAI7C,EAAiBpX,EAAaV,QAAQkY,oBAE1C,OAAKJ,EAAeK,UAIbL,EAAe+C,wBAAwBzZ,EAAMuZ,GAH3C1a,EAASD,QAAQqG,OAAO,uDAgBlC,CACD9D,IAAK,kBACLxC,MAAO,WAGL,IAAI+X,EAAiBpX,EAAaV,QAAQkY,oBAE1C,OAAKJ,EAAeK,UAIbL,EAAegD,cAAc/N,EAAqB2K,aAHhDzX,EAASD,QAAQqG,OAAO,uDAkBlC,CACD9D,IAAK,0BACLxC,MAAO,SAAUqB,GAKf,IAAI0W,EAAiBpX,EAAaV,QAAQkY,oBAE1C,OAAKJ,EAAeK,UAIbL,EAAegD,cAAc/N,EAAqBgO,WAAa3Z,GAH7DnB,EAASD,QAAQqG,OAAO,yDAM9B2H,EAvkFT,GA0kFItI,EAAoB,CACtBqR,MAAO,SAAUiE,EAEfC,EAEAtY,GAKA,IAAImV,EAAiBpX,EAAaV,QAAQkY,oBAE1C,IAAI,EAAI5X,EAASN,SAASgb,GAAS,CACjC,GAAIA,EAAOhW,OAAS,EAClB,OAAO/E,EAASD,QAAQsG,QAAQ,IAGlC,IAAI4U,EAAO,GACPC,EAAM,GACNlN,EAAY,KACZmN,EAAU,GACVxH,EAAQ,KA0BZ,IAzBA,EAAIxH,EAASpM,SAASgb,GAAQ5Y,KAAK4Y,GAAQ,SAAUK,GAC/CzH,IAIC3F,IACHA,EAAYoN,EAAGpN,WAGbA,IAAcoN,EAAGpN,YACnB2F,EAAQ,IAAIhH,EAAY5M,QAAQ4M,EAAY5M,QAAQsb,mBAAoB,4CAGrED,EAAGzS,KACNgL,EAAQ,IAAIhH,EAAY5M,QAAQ4M,EAAY5M,QAAQub,kBAAmB,iCAGrEN,GAAeI,EAAGG,oBACpBL,EAAIjF,KAAKmF,EAAGzS,IACZsS,EAAKhF,KAAKmF,IAGZD,EAAQlF,KAAKmF,OAGXzH,EACF,OAAO3T,EAASD,QAAQqG,OAAOuN,GAGjC,IAAIiB,EAAQ,IAAI5H,EAAYjN,QAAQiO,GAQpC,OAPA4G,EAAM4G,YAAY,WAAYN,GAE1BxY,GAAWA,EAAQiU,SACrB/B,EAAM+B,QAAQjU,EAAQiU,SAGxB/B,EAAM6G,OAASP,EAAInW,QACZ,EAAI6G,EAAM7L,SAAS6U,GAAOzS,KAAKyS,EAAOlS,GAASyB,KAEtD,WACE,IAAIuX,GAAO,EAAIxb,EAAmBH,SAElCE,EAAaF,QAAQyC,MAAK,SAASmZ,EAASjB,GAC1C,IAAIkB,EAAO1W,EAAGN,EAAKiX,EAAIC,EAAMnT,EAAIoT,EAA4BC,EAAoBC,EAAiBC,EAAYC,EAAQC,EAEtH,OAAOnc,EAAaF,QAAQ+C,MAAK,SAAUuZ,GACzC,MAAO,EACL,OAAQA,EAAUrZ,KAAOqZ,EAAUpZ,MACjC,KAAK,EACH2Y,EAAQ,IACR,EAAIzP,EAASpM,SAAS2a,GAASvY,KAAKuY,GAAS,SAAUpB,GACrDsC,EAAMtC,EAAE3Q,IAAM2Q,KAEhBpU,EAAI,EAEN,KAAK,EACH,KAAMA,EAAI+V,EAAKlW,QAAS,CACtBsX,EAAUpZ,KAAO,GACjB,MAKF,GAFA2B,EAAMqW,EAAK/V,GAEJN,GAAQA,EAAI+D,IAAOiT,EAAMhX,EAAI+D,IAAM,CACxC0T,EAAUpZ,KAAO,EACjB,MAGF,IAAK+X,EAAY,CACfqB,EAAUpZ,KAAO,EACjB,MAGF,OAAOoZ,EAAUnZ,OAAO,SAAUlD,EAASD,QAAQqG,OAAO,IAAIuG,EAAY5M,QAAQ4M,EAAY5M,QAAQgV,iBAAkB,2CAE1H,KAAK,EACH7P,IACAmX,EAAUpZ,KAAO,EACjB,MAEF,KAAK,GACH,IAAKyK,EAEH,IAAKmO,EAAK,EAAGA,EAAKV,EAAQpW,OAAQ8W,IAChCC,EAAOX,EAAQU,GAEXC,GAAQA,EAAKnT,IAAMiT,EAAME,EAAKnT,MAChCA,EAAKmT,EAAKnT,GAEVmT,EAAKnD,aAAaiD,EAAMjT,GAAImH,UAE5BqL,EAAQU,GAAMD,EAAMjT,IAK1BoT,GAA6B,EAC7BC,GAAqB,EACrBC,OAAkBxa,EAClB4a,EAAUrZ,KAAO,GACjBkZ,GAAa,EAAInQ,EAAchM,SAASob,GAE1C,KAAK,GACH,GAAIY,GAA8BI,EAASD,EAAWjZ,QAAQ8S,KAAM,CAClEsG,EAAUpZ,KAAO,GACjB,MAKF,OAFAmZ,EAASD,EAAOrc,MAChBuc,EAAUpZ,KAAO,GACV4U,EAAeyE,sBAAsBF,GAE9C,KAAK,GACHL,GAA6B,EAC7BM,EAAUpZ,KAAO,GACjB,MAEF,KAAK,GACHoZ,EAAUpZ,KAAO,GACjB,MAEF,KAAK,GACHoZ,EAAUrZ,KAAO,GACjBqZ,EAAUxH,GAAKwH,EAAU,SAAS,IAClCL,GAAqB,EACrBC,EAAkBI,EAAUxH,GAE9B,KAAK,GACHwH,EAAUrZ,KAAO,GACjBqZ,EAAUrZ,KAAO,GAEZ+Y,GAAmD,MAArBG,EAAW/F,QAC5C+F,EAAW/F,SAGf,KAAK,GAGH,GAFAkG,EAAUrZ,KAAO,IAEZgZ,EAAoB,CACvBK,EAAUpZ,KAAO,GACjB,MAGF,MAAMgZ,EAER,KAAK,GACH,OAAOI,EAAUE,OAAO,IAE1B,KAAK,GACH,OAAOF,EAAUE,OAAO,IAE1B,KAAK,GACH,OAAOF,EAAUnZ,OAAO,SAAUlD,EAASD,QAAQsG,QAAQ8U,IAE7D,KAAK,GACL,IAAK,MACH,OAAOkB,EAAU1Y,UAGtBgY,EAAU,KAAM,CAAC,CAAC,GAAI,GAAI,GAAI,IAAK,CAAC,GAAG,CAAE,GAAI,UAGlD,OAAO,WACL,OAAOD,EAAK9X,MAAMtC,KAAMuC,YA5H5B,IAgIA,IAAI2Y,EAAiB/b,EAAaV,QAAQ+F,oBAEtC2W,EAAS,GAMb,OAJI/Z,GAAWA,EAAQiU,UACrB8F,EAAO9F,QAAUjU,EAAQiU,QAAQnR,QAG5BgX,EAAetW,QAAQ,MAAO,WAAa6U,EAAO/M,UAAY,IAAM+M,EAAOxM,SAAUkO,EAAQ/Z,GAASyB,KAE7G,WACE,IAAIuY,GAAQ,EAAIxc,EAAmBH,SAEnCE,EAAaF,QAAQyC,MAAK,SAASma,EAAS3W,GAC1C,OAAO/F,EAAaF,QAAQ+C,MAAK,SAAU8Z,GACzC,MAAO,EACL,OAAQA,EAAU5Z,KAAO4Z,EAAU3Z,MACjC,KAAK,EAUH,OATI8X,aAAkBhN,IACpBgN,EAAO3E,mBAEP2E,EAAOpB,mBAEPoB,EAAOpC,aAAa3S,IAGtB4W,EAAU3Z,KAAO,EACV4U,EAAeyE,sBAAsBvB,GAE9C,KAAK,EACH,OAAO6B,EAAU1Z,OAAO,SAAU6X,GAEpC,KAAK,EACL,IAAK,MACH,OAAO6B,EAAUjZ,UAGtBgZ,OAGL,OAAO,WACL,OAAOD,EAAM9Y,MAAMtC,KAAMuC,YA/B7B,KAoCJ0T,QAAS,WACP,IAAIsF,GAAW,EAAI3c,EAAmBH,SAEtCE,EAAaF,QAAQyC,MAAK,SAASsa,EAAS/B,EAE1CrY,GAGA,IAAI0W,EAAWvB,EAAgB2E,EAAgBO,EAASC,EAAiBC,EACzE,OAAOhd,EAAaF,QAAQ+C,MAAK,SAAUoa,GACzC,MAAO,EACL,OAAQA,EAAWla,KAAOka,EAAWja,MACnC,KAAK,EAKH,GAJAmW,EAAY1W,GAAWA,EAAQ0W,UAAY1W,EAAQ0W,UAAY7L,EAC/DsK,EAAiBpX,EAAaV,QAAQkY,oBACtCuE,EAAiB/b,EAAaV,QAAQ+F,sBAEjC,EAAIzF,EAASN,SAASgb,GAAS,CAClCmC,EAAWja,KAAO,GAClB,MAGF,KAAM8X,EAAOhW,OAAS,GAAI,CACxBmY,EAAWja,KAAO,EAClB,MAGF,OAAOia,EAAWha,OAAO,SAAUlD,EAASD,QAAQsG,QAAQ,KAE9D,KAAK,EA0CH,OAzCA0W,EAAU,CAAC,KACX,EAAI5Q,EAASpM,SAASgb,GAAQ5Y,KAAK4Y,GAAQ,SAAUnW,GAC9CA,EAAI+D,KAIToU,EAAQA,EAAQhY,OAAS,GAAGkR,KAAKrR,GAE7BmY,EAAQA,EAAQhY,OAAS,GAAGA,QAAUqU,GACxC2D,EAAQ9G,KAAK,QAI0B,IAAvC8G,EAAQA,EAAQhY,OAAS,GAAGA,QAE9BgY,EAAQI,MAGVH,EAAkBhd,EAASD,QAAQsG,UACnC4W,EAAS,IACT,EAAI9Q,EAASpM,SAASgd,GAAS5a,KAAK4a,GAAS,SAAUK,GACrDJ,EAAkBA,EAAgB7Y,MAAK,WACrC,OAAOqY,EAAetW,QAAQ,OAAQ,QAAS,CAC7CmX,UAAU,EAAI1R,EAAK5L,SAASqd,GAAOjb,KAAKib,GAAO,SAAUxY,GACvD,MAAO,CACL2L,OAAQ,SACRG,KAAM/C,IAAqB,WAAa/I,EAAIoJ,UAAY,IAAMpJ,EAAI2J,SAClEiC,KAAM,QAGT9N,GAASyB,MAAK,SAAUgX,GACzB,IAAK,IAAIjW,EAAI,EAAGA,EAAIiW,EAAQpW,OAAQG,IAClC,GAAIiW,EAAQjW,IAAMiW,EAAQjW,GAAGqN,eAAe,SAAU,CACpD,IAAI2D,EAAM,IAAIvJ,EAAY5M,QAAQob,EAAQjW,GAAGyO,MAAMmB,KAAMqG,EAAQjW,GAAGyO,MAAMA,OAC1EuC,EAAIkG,OAASgB,EAAMlY,GACnB+X,EAAOhH,KAAKC,aAMfgH,EAAWha,OAAO,SAAU8Z,EAAgB7Y,MAEnD,EAAIjE,EAAmBH,SAEvBE,EAAaF,QAAQyC,MAAK,SAAS8a,IACjC,IAAIC,EAAWC,EAA4BC,EAAoBC,EAAiBC,EAAYC,EAAQxB,EAEpG,OAAOnc,EAAaF,QAAQ+C,MAAK,SAAU+a,GACzC,MAAO,EACL,OAAQA,EAAU7a,KAAO6a,EAAU5a,MACjC,KAAK,EACH,IAAKga,EAAOlY,OAAQ,CAClB8Y,EAAU5a,KAAO,EACjB,MAKF,OAFAsa,EAAY,IAAI5Q,EAAY5M,QAAQ4M,EAAY5M,QAAQ+d,iBACxDP,EAAUN,OAASA,EACZY,EAAU3a,OAAO,SAAUlD,EAASD,QAAQqG,OAAOmX,IAE5D,KAAK,EACHC,GAA6B,EAC7BC,GAAqB,EACrBC,OAAkBjc,EAClBoc,EAAU7a,KAAO,EACjB2a,GAAa,EAAI5R,EAAchM,SAASgb,GAE1C,KAAK,EACH,GAAIyC,GAA8BI,EAASD,EAAW1a,QAAQ8S,KAAM,CAClE8H,EAAU5a,KAAO,GACjB,MAKF,OAFAmZ,EAASwB,EAAO9d,MAChB+d,EAAU5a,KAAO,GACV4U,EAAekG,uBAAuB3B,GAE/C,KAAK,GACHoB,GAA6B,EAC7BK,EAAU5a,KAAO,EACjB,MAEF,KAAK,GACH4a,EAAU5a,KAAO,GACjB,MAEF,KAAK,GACH4a,EAAU7a,KAAO,GACjB6a,EAAUhJ,GAAKgJ,EAAU,SAAS,GAClCJ,GAAqB,EACrBC,EAAkBG,EAAUhJ,GAE9B,KAAK,GACHgJ,EAAU7a,KAAO,GACjB6a,EAAU7a,KAAO,GAEZwa,GAAmD,MAArBG,EAAWxH,QAC5CwH,EAAWxH,SAGf,KAAK,GAGH,GAFA0H,EAAU7a,KAAO,IAEZya,EAAoB,CACvBI,EAAU5a,KAAO,GACjB,MAGF,MAAMya,EAER,KAAK,GACH,OAAOG,EAAUtB,OAAO,IAE1B,KAAK,GACH,OAAOsB,EAAUtB,OAAO,IAE1B,KAAK,GACH,OAAOsB,EAAU3a,OAAO,SAAUlD,EAASD,QAAQsG,QAAQ0U,IAE7D,KAAK,GACL,IAAK,MACH,OAAO8C,EAAUla,UAGtB2Z,EAAU,KAAM,CAAC,CAAC,EAAG,GAAI,GAAI,IAAK,CAAC,GAAG,CAAE,GAAI,YAGnD,KAAK,GACH,KAAMvC,aAAkBhN,GAAc,CACpCmP,EAAWja,KAAO,GAClB,MAGF,OAAOia,EAAWha,OAAO,SAAUsZ,EAAetW,QAAQ,SAAU,WAAa6U,EAAO/M,UAAY,IAAM+M,EAAOxM,SAAU,GAAI7L,GAASyB,MAExI,EAAIjE,EAAmBH,SAEvBE,EAAaF,QAAQyC,MAAK,SAASwb,IACjC,OAAO/d,EAAaF,QAAQ+C,MAAK,SAAUmb,GACzC,MAAO,EACL,OAAQA,EAAWjb,KAAOib,EAAWhb,MACnC,KAAK,EAEH,OADAgb,EAAWhb,KAAO,EACX4U,EAAekG,uBAAuBhD,GAE/C,KAAK,EACH,OAAOkD,EAAW/a,OAAO,SAAUlD,EAASD,QAAQsG,QAAQ0U,IAE9D,KAAK,EACL,IAAK,MACH,OAAOkD,EAAWta,UAGvBqa,SAGP,KAAK,GAEH,OADAd,EAAWja,KAAO,GACX4U,EAAekG,uBAAuBhD,GAE/C,KAAK,GACH,OAAOmC,EAAWha,OAAO,SAAUlD,EAASD,QAAQsG,QAAQ0U,IAE9D,KAAK,GACL,IAAK,MACH,OAAOmC,EAAWvZ,UAGvBmZ,OAGL,OAAO,WACL,OAAOD,EAASjZ,MAAMtC,KAAMuC,YA3MvB,GA8MTwT,KAAM,SAAU0D,EAEdrY,GAGA,IAAI0W,EAAY1W,GAAWA,EAAQ0W,UAAY1W,EAAQ0W,UAAY7L,EAE/DsK,EAAiBpX,EAAaV,QAAQkY,oBAEtCiG,EAAc,GAEd1B,EAAiB/b,EAAaV,QAAQ+F,oBAEtC0I,EAAkB/N,EAAaV,QAAQ0O,2BAK3C,GAHA/L,EAAUA,GAAW,GACrBA,EAAQyb,aAAezb,EAAQyb,eAAgB,GAE3C,EAAI9d,EAASN,SAASgb,GAAS,CACjC,GAAIA,EAAOhW,OAAS,EAClB,OAAO/E,EAASD,QAAQsG,QAAQ,IAKlC,IAFA,IAAI8Q,GAAU,EAAInL,EAAQjM,SAASgb,GAAQ5Y,KAAK4Y,GAEvC7V,EAAI,EAAGA,EAAI6V,EAAOhW,OAAQG,IAC7B6V,EAAO7V,aAAc6I,IACvBoJ,GAAU,EAAInL,EAAQjM,SAASoX,GAAShV,KAAKgV,GAAS,EAAI9J,EAAiBtN,SAASgb,EAAO7V,IAAI,KAInGiS,GAAU,EAAIhK,EAAQpN,SAASoX,GAE/B,IAAIiH,EAAape,EAASD,QAAQsG,UAE9B8I,EAEF,GAUF,OATA,EAAIhD,EAASpM,SAASoX,GAAShV,KAAKgV,GAAS,SAAUiE,GACjDA,aAAcxO,EAAW7M,QAC3Bqe,EAAaA,EAAWja,MAAK,WAC3B,OAAOiX,EAAG/D,UAEH+D,aAAcrN,GACvBoB,EAAQ8G,KAAKmF,MAGVgD,EAAWja,MAAK,WACrB,IAAIka,EAAc,KAClB,OAAO,EAAIxR,EAAcyR,gBAAe,WACtC,OAAOnP,EAAQpK,OAAS,KACvB,WACD,IAiBIX,EAAKma,EAjBLnB,EAAQ,GACRoB,EAAc,GAUlB,IATA,EAAIrS,EAASpM,SAASoP,GAAShN,KAAKgN,GAAS,SAAUiM,GACjDgC,EAAMrY,OAASqU,IAAa,EAAI/M,EAAiBtM,SAASqb,GAC5DgC,EAAMnH,KAAKmF,GAEXoD,EAAYvI,KAAKmF,MAGrBjM,EAAUqP,EAENpB,EAAMrY,OAAS,EACjB,OAAO/E,EAASD,QAAQqG,OAAO,IAAIuG,EAAY5M,QAAQ4M,EAAY5M,QAAQkV,YAAa,wCAM1F,IAAIwJ,EAAgB,IAAIze,EAASD,SAAQ,SAAUsG,EAASD,GAC1DhC,EAAMiC,EACNkY,EAAMnY,KAERqY,EAAcpY,QAAUjC,EACxBqa,EAAcrY,OAASmY,EACvB,IAAIG,EAAa,GACbC,EAAa,GA+CjB,OA9CA,EAAIxS,EAASpM,SAASqd,GAAOjb,KAAKib,GAAO,SAAUxY,EAAKga,GACtD,IAAIxa,EAAKma,EACLM,EAAQ,IAAI7e,EAASD,SAAQ,SAAUsG,EAASD,GAClDhC,EAAMiC,EACNkY,EAAMnY,KAERyY,EAAMxY,QAAUjC,EAChBya,EAAMzY,OAASmY,EACfG,EAAWzI,KAAK4I,GAChBrQ,EAAgBsQ,iBAAiBla,EAAI+J,uBACrCgQ,EAAW1I,KAAKzH,EAAgBuQ,YAAYna,EAAI+J,uBAAuB,WAErE,OADAkQ,EAAMxY,UACCoY,EAActa,MAAK,SAAU6a,GAClC,GAAIA,EAAUJ,GAAOrM,eAAe,WAAY,CAC9C,IAAI5B,EAAWqO,EAAUJ,GAAO5H,QAAQrG,SACpCc,EAASuN,EAAUJ,GAAOK,eACvBD,EAAUJ,GAAOK,QACxBf,EAAYvN,GAAY/L,EAAIyJ,SAE5BzJ,EAAIsa,oBAAoBF,EAAUJ,GAAO5H,QAASvF,OAC7C,CACL,IAAK4M,GAAeW,EAAUJ,GAAOrM,eAAe,SAAU,CAC5D,IAAI4M,EAAcH,EAAUJ,GAAOjL,MACnC0K,EAAc,IAAI1R,EAAY5M,QAAQof,EAAYrK,KAAMqK,EAAYxL,OAEpExE,EAAU,GAGZvK,EAAIwa,+BAKZ,EAAIvS,EAAcwS,MAAMX,GAAYva,MAAK,WAEvC,OAAOqY,EAAetW,QAAQ,OAAQ,QAAS,CAC7CmX,UAAU,EAAI1R,EAAK5L,SAASqd,GAAOjb,KAAKib,GAAO,SAAUxY,GACvD,IAAI6X,EAAS7X,EAAI0a,iBAGjB,OADA7C,EAAO/L,KAAO/C,IAAqB8O,EAAO/L,KACnC+L,MAER/Z,MACFyB,KAAKsa,EAAcpY,SAAS,SAAUsN,GACvC8K,EAAcrY,OAAO,IAAIuG,EAAY5M,QAAQ4M,EAAY5M,QAAQwf,eAAgB5L,EAAM6L,cAElF,EAAI3S,EAAcwS,MAAMV,MAC9Bxa,MAEH,EAAIjE,EAAmBH,SAEvBE,EAAaF,QAAQyC,MAAK,SAASid,IACjC,IAAIC,EAA4BC,EAAoBC,EAAiBC,EAAYC,EAAQ1D,EAEzF,OAAOnc,EAAaF,QAAQ+C,MAAK,SAAUid,GACzC,MAAO,EACL,OAAQA,EAAW/c,KAAO+c,EAAW9c,MACnC,KAAK,EACH,IAAKob,EAAa,CAChB0B,EAAW9c,KAAO,EAClB,MAGF,OAAO8c,EAAW7c,OAAO,SAAUlD,EAASD,QAAQqG,OAAOiY,IAE7D,KAAK,EACHqB,GAA6B,EAC7BC,GAAqB,EACrBC,OAAkBne,EAClBse,EAAW/c,KAAO,EAClB6c,GAAa,EAAI9T,EAAchM,SAASgb,GAE1C,KAAK,EACH,GAAI2E,GAA8BI,EAASD,EAAW5c,QAAQ8S,KAAM,CAClEgK,EAAW9c,KAAO,GAClB,MAKF,OAFAmZ,EAAS0D,EAAOhgB,MAChBigB,EAAW9c,KAAO,GACX4U,EAAemI,wBAAwB9B,EAAY9B,EAAOzT,IAAKyT,GAExE,KAAK,GAEH,OADA2D,EAAW9c,KAAO,GACX4U,EAAeyE,sBAAsBF,GAE9C,KAAK,GACHsD,GAA6B,EAC7BK,EAAW9c,KAAO,EAClB,MAEF,KAAK,GACH8c,EAAW9c,KAAO,GAClB,MAEF,KAAK,GACH8c,EAAW/c,KAAO,GAClB+c,EAAWlL,GAAKkL,EAAW,SAAS,GACpCJ,GAAqB,EACrBC,EAAkBG,EAAWlL,GAE/B,KAAK,GACHkL,EAAW/c,KAAO,GAClB+c,EAAW/c,KAAO,GAEb0c,GAAmD,MAArBG,EAAW1J,QAC5C0J,EAAW1J,SAGf,KAAK,GAGH,GAFA4J,EAAW/c,KAAO,IAEb2c,EAAoB,CACvBI,EAAW9c,KAAO,GAClB,MAGF,MAAM2c,EAER,KAAK,GACH,OAAOG,EAAWxD,OAAO,IAE3B,KAAK,GACH,OAAOwD,EAAWxD,OAAO,IAE3B,KAAK,GACH,OAAOwD,EAAW7c,OAAO,SAAUlD,EAASD,QAAQsG,QAAQ0U,IAE9D,KAAK,GACL,IAAK,MACH,OAAOgF,EAAWpc,UAGvB8b,EAAU,KAAM,CAAC,CAAC,EAAG,GAAI,GAAI,IAAK,CAAC,GAAG,CAAE,GAAI,cAG9C,GAAI1E,aAAkBhN,EAAa,CAExC,IAAIO,EAAUyM,EAAO1M,SACjB4R,EAAalF,EAEbzX,EAAO,WACT,IAAImZ,EAASwD,EAAWX,iBAExB,OAAO9C,EAAetW,QAAQuW,EAAOlM,OAAQkM,EAAO/L,KAAM+L,EAAOjM,KAAM9N,GAASyB,MAAK,SAAU6B,GAC7F,IAAIyL,EAASzL,EAASiZ,eACfjZ,EAASiZ,QAEhBgB,EAAWf,oBAAoBlZ,EAAUyL,MACxC,SAAUkC,GAGX,OAFAsM,EAAWb,mBAEJpf,EAASD,QAAQqG,OAAOuN,OAKnC,OADAnF,EAAgBsQ,iBAAiB/D,EAAOpM,uBACjCH,EAAgBuQ,YAAYhE,EAAOpM,sBAAuBrL,GAAMa,MAEvE,EAAIjE,EAAmBH,SAEvBE,EAAaF,QAAQyC,MAAK,SAAS0d,IACjC,OAAOjgB,EAAaF,QAAQ+C,MAAK,SAAUqd,GACzC,MAAO,EACL,OAAQA,EAAWnd,KAAOmd,EAAWld,MACnC,KAAK,EAEH,OADAkd,EAAWld,KAAO,EACX4U,EAAemI,wBAAwB1R,EAASyM,GAEzD,KAAK,EAEH,OADAoF,EAAWld,KAAO,EACX4U,EAAeyE,sBAAsBvB,GAE9C,KAAK,EACH,OAAOoF,EAAWjd,OAAO,SAAU6X,GAErC,KAAK,EACL,IAAK,MACH,OAAOoF,EAAWxc,UAGvBuc,QACA,SAAUvM,GACb,OAAO3T,EAASD,QAAQqG,OAAOuN,MAInC,OAAO3T,EAASD,QAAQsG,YAI5B5F,EAAaV,QAAQqgB,oBAAoB3a,GAEzC,IAAI0B,EAAW4G,EACflO,EAAQE,QAAUoH,G,kCCz6GlB,IAAIxH,EAAyB,EAAQ,QAEjC+L,EAA0B,EAAQ,QAEtCA,EAAwB7L,EAAS,aAAc,CAC7CC,OAAO,IAGTD,EAAQE,aAAU,EAElB,IAAIsgB,EAAkB1gB,EAAuB,EAAQ,SAEjDW,EAAmBX,EAAuB,EAAQ,SAElDY,EAAgBZ,EAAuB,EAAQ,SAE/CsL,EAA8BtL,EAAuB,EAAQ,SAE7DuL,EAAmBvL,EAAuB,EAAQ,SAElD2gB,EAA0B3gB,EAAuB,EAAQ,SAEzDwL,EAAaxL,EAAuB,EAAQ,SAE5C4gB,EAAoB5gB,EAAuB,EAAQ,SAgBnD6gB,EAEJ,SAAUC,GAOR,SAASD,EAAW1L,EAAM0K,GACxB,IAAI3c,EASJ,OAPA,EAAIvC,EAAiBP,SAASuB,KAAMkf,GACpC3d,GAAQ,EAAIoI,EAA4BlL,SAASuB,MAAM,EAAI4J,EAAiBnL,SAASygB,GAAYre,KAAKb,KAAMke,IAC5G3c,EAAMiS,KAAOA,GACb,EAAIuL,EAAgBtgB,UAAS,EAAIugB,EAAwBvgB,SAAS8C,GAAQ,UAAW,CACnFuX,YAAY,EACZta,MAAO0f,IAEF3c,EAST,OAzBA,EAAIsI,EAAWpL,SAASygB,EAAYC,IAmBpC,EAAIlgB,EAAcR,SAASygB,EAAY,CAAC,CACtCle,IAAK,WACLxC,MAAO,WACL,MAAO,eAAiBwB,KAAKwT,KAAO,IAAMxT,KAAKke,YAG5CgB,EA1BT,EA2BE,EAAID,EAAkBxgB,SAASqD,QASjCod,EAAWvL,aAAe,EAU1BuL,EAAWE,sBAAwB,EAQnCF,EAAWG,kBAAoB,IAQ/BH,EAAWzL,iBAAmB,IAS9ByL,EAAWI,cAAgB,IAU3BJ,EAAWnF,mBAAqB,IAQhCmF,EAAWlF,kBAAoB,IAS/BkF,EAAWpL,iBAAmB,IAS9BoL,EAAWK,gBAAkB,IAU7BL,EAAWM,aAAe,IAS1BN,EAAWO,oBAAsB,IAQjCP,EAAWQ,gBAAkB,IAQ7BR,EAAWjB,eAAiB,IAU5BiB,EAAWS,qBAAuB,IAQlCT,EAAWU,mBAAqB,IAQhCV,EAAWW,iBAAmB,IAQ9BX,EAAWY,oBAAsB,IAQjCZ,EAAWa,WAAa,IASxBb,EAAWc,mBAAqB,IAUhCd,EAAWe,kBAAoB,IAQ/Bf,EAAWgB,YAAc,IASzBhB,EAAWiB,QAAU,IAQrBjB,EAAWkB,sBAAwB,IAQnClB,EAAWmB,qBAAuB,IAQlCnB,EAAWoB,uBAAyB,IAQpCpB,EAAWqB,uBAAyB,IAQpCrB,EAAWsB,eAAiB,IAQ5BtB,EAAWuB,gBAAkB,IAS7BvB,EAAWwB,gBAAkB,IAQ7BxB,EAAWyB,kBAAoB,IAS/BzB,EAAW0B,eAAiB,IAQ5B1B,EAAW2B,cAAgB,IAQ3B3B,EAAW4B,iBAAmB,IAQ9B5B,EAAW6B,mBAAqB,IAQhC7B,EAAW8B,mBAAqB,IAQhC9B,EAAW+B,wBAA0B,IAQrC/B,EAAWgC,kBAAoB,IAS/BhC,EAAWiC,uBAAyB,IAQpCjC,EAAWkC,mBAAqB,IAQhClC,EAAWmC,iBAAmB,IAQ9BnC,EAAWoC,iBAAmB,IAQ9BpC,EAAWqC,eAAiB,IAQ5BrC,EAAWsC,YAAc,IAQzBtC,EAAWuC,cAAgB,IAQ3BvC,EAAWwC,gBAAkB,IAS7BxC,EAAWyC,gBAAkB,IAQ7BzC,EAAW0C,gCAAkC,IAS7C1C,EAAW2C,uBAAyB,IAQpC3C,EAAW4C,sBAAwB,IASnC5C,EAAW6C,kBAAoB,IAS/B7C,EAAW8C,uBAAyB,IASpC9C,EAAW+C,oBAAsB,IAQjC/C,EAAWgD,yBAA2B,IAUtChD,EAAW1C,gBAAkB,IAQ7B0C,EAAWiD,gBAAkB,IAW7BjD,EAAWkD,iBAAmB,IAC9B,IAAIvc,EAAWqZ,EACf3gB,EAAQE,QAAUoH,G,kCCriBlB,IAAIxH,EAAyB,EAAQ,QAEjCC,EAAyB,EAAQ,QAErCA,EAAuBC,EAAS,aAAc,CAC5CC,OAAO,IAGTD,EAAQE,aAAU,EAElB,IAAIK,EAAWT,EAAuB,EAAQ,SAE1CK,EAAWL,EAAuB,EAAQ,SAE1CgkB,EAAkBhkB,EAAuB,EAAQ,SAEjDM,EAAeN,EAAuB,EAAQ,SAE9CO,EAAqBP,EAAuB,EAAQ,SAEpDikB,EAAgBjkB,EAAuB,EAAQ,SAE/CkkB,EAAmBlkB,EAAuB,EAAQ,SAElDc,EAAed,EAAuB,EAAQ,SAalD,SAASmkB,IAGP,OAAOrjB,EAAaV,QAAQgkB,yBAAyBC,4BAiCvD,IAAIC,EAAY,IAAIL,EAAc7jB,QAMlCkkB,EAAU1d,MAEV,EAAIrG,EAAmBH,SAEvBE,EAAaF,QAAQyC,MAAK,SAASC,IACjC,IAAIyhB,EACJ,OAAOjkB,EAAaF,QAAQ+C,MAAK,SAAUC,GACzC,MAAO,EACL,OAAQA,EAASC,KAAOD,EAASE,MAC/B,KAAK,EAEH,OADAF,EAASE,KAAO,EACT6gB,IAET,KAAK,EAEH,OADAI,EAAkBnhB,EAASW,KACpBX,EAASG,OAAO,SAAUghB,EAAgB3d,QAEnD,KAAK,EACL,IAAK,MACH,OAAOxD,EAASY,UAGrBlB,OAULwhB,EAAUE,OAEV,EAAIjkB,EAAmBH,SAEvBE,EAAaF,QAAQyC,MAAK,SAASoV,IACjC,IAAIsM,EACJ,OAAOjkB,EAAaF,QAAQ+C,MAAK,SAAUyT,GACzC,MAAO,EACL,OAAQA,EAAUvT,KAAOuT,EAAUtT,MACjC,KAAK,EAEH,OADAsT,EAAUtT,KAAO,EACV6gB,IAET,KAAK,EAEH,OADAI,EAAkB3N,EAAU7S,KACrB6S,EAAUrT,OAAO,SAAUghB,EAAgBC,SAEpD,KAAK,EACL,IAAK,MACH,OAAO5N,EAAU5S,UAGtBiU,OAGLqM,EAAUG,GAAG,SAAS,eACtB,IAEIC,EAFAld,EAAW8c,EACfpkB,EAAQE,QAAUoH,EAElB,IAAImd,EAA6B,CAC/BC,0BAA2B,SAAUL,GAGnCG,EAAyBH,GAE3BF,0BAA2B,WACzB,IAAIQ,GAA6B,EAAItkB,EAAmBH,SAExDE,EAAaF,QAAQyC,MAAK,SAAS8V,IACjC,IAAImM,EAAOC,EAAOC,EAAazN,EAAgBR,EAAckO,EAAoBC,EAAWC,EAAUC,EAAMC,EAAeC,EAAeC,EAE1I,OAAOjlB,EAAaF,QAAQ+C,MAAK,SAAU8T,GACzC,MAAO,EACL,OAAQA,EAAU5T,KAAO4T,EAAU3T,MACjC,KAAK,EACH,IAAKohB,EAAwB,CAC3BzN,EAAU3T,KAAO,EACjB,MAGF,OAAO2T,EAAU1T,OAAO,SAAUmhB,GAEpC,KAAK,EAEH,OADAzN,EAAU3T,KAAO,EACVjD,EAASD,QAAQolB,IAAI,CAAC1kB,EAAaV,QAAQqlB,oBAAoBC,mBAAoB5kB,EAAaV,QAAQulB,4BAA4BC,0BAE7I,KAAK,EAQH,GAPAd,EAAQ7N,EAAUlT,KAClBghB,GAAQ,EAAIf,EAAgB5jB,SAAS0kB,EAAO,GAC5CE,EAAcD,EAAM,GACpBxN,EAAiBwN,EAAM,GACvBhO,EAAeiO,EAAcA,EAAYa,uBAAoB/jB,EAC7DmjB,EAAqBnkB,EAAaV,QAAQ6F,IAAI,yBAExCgf,GAAmG,KAA7E,EAAIxkB,EAASL,SAAS6kB,GAAoBziB,KAAKyiB,EAAoB,MAAc,CAC3GhO,EAAU3T,KAAO,GACjB,MAGF,MAAM,IAAIG,MAAM,oFAElB,KAAK,GA+BH,OA7BKwhB,IACHC,EAAYpkB,EAAaV,QAAQ6F,IAAI,cACrCkf,EAAyE,KAA9D,EAAI1kB,EAASL,SAAS8kB,GAAW1iB,KAAK0iB,EAAW,SAAiB,SAAW,QACxFE,EAAOF,EAAU9gB,QAAQ,eAAgB,IACzC6gB,EAAqBE,EAAWC,EAEhCtkB,EAAaV,QAAQ0K,IAAI,uBAAwBma,IAGnDI,EAAgBvkB,EAAaV,QAAQ6F,IAAI,kBACzCqf,EAAgBxkB,EAAaV,QAAQ6F,IAAI,kBACzCsf,EAAYzkB,EAAaV,QAAQ6F,IAAI,cACrCye,EAAyB,IAAIR,EAAiB9jB,QAAQ,CACpDilB,cAAeA,EACfH,UAAWD,EACXK,cAAeA,EACfC,UAAWA,EACXxO,aAAcA,EACdQ,eAAgBA,IAElBmN,EAAuBD,GAAG,SAAS,SAAUzQ,GAC3CsQ,EAAUwB,KAAK,QAAS9R,MAE1B0Q,EAAuBD,GAAG,QAAQ,WAChCH,EAAUwB,KAAK,WAEjBpB,EAAuBD,GAAG,SAAS,WACjCH,EAAUwB,KAAK,YAEV7O,EAAU1T,OAAO,SAAUmhB,GAEpC,KAAK,GACL,IAAK,MACH,OAAOzN,EAAUjT,UAGtB2U,OAGL,OAAO,WACL,OAAOkM,EAA2B5gB,MAAMtC,KAAMuC,YA9EvB,GAiF3B6hB,0BAA2B,WACzBrB,EAAyB,OAI7B5jB,EAAaV,QAAQ4lB,uBAAuBrB,I,kCCxO5C,IAAI7Y,EAA0B,EAAQ,QAElC9L,EAAyB,EAAQ,QAEjCK,EAAWL,EAAuB,EAAQ,SAE1C0gB,EAAkB1gB,EAAuB,EAAQ,SAEjD2M,EAAU3M,EAAuB,EAAQ,SAEzC4M,EAAU5M,EAAuB,EAAQ,SAEzCc,EAAed,EAAuB,EAAQ,SAE9CimB,EAAoBjmB,EAAuB,EAAQ,SAEnDkmB,EAA0BlmB,EAAuB,EAAQ,SAEzDmmB,EAAUra,EAAwB,EAAQ,SAE1Csa,EAAkBpmB,EAAuB,EAAQ,SAmBjDqmB,EAAQ,CASV/X,WAAY,SAAU+W,EAEpBiB,GAG+BxlB,EAAaV,QAAQ6F,IAAI,aAAe,6CAAYsgB,kBAEjFC,QAAQC,IAAI,iIAIdJ,EAAMK,YAAYrB,EAAeiB,IAEnCI,YAAa,SAAUrB,EAErBiB,EAEAf,GAGAzkB,EAAaV,QAAQ0K,IAAI,iBAAkBua,GAE3CvkB,EAAaV,QAAQ0K,IAAI,iBAAkBwb,GAE3CxlB,EAAaV,QAAQ0K,IAAI,aAAcya,GAEvCzkB,EAAaV,QAAQ0K,IAAI,kBAAkB,IAU7C6b,gBAAiB,SAAUC,GAGzB9lB,EAAaV,QAAQumB,gBAAgBC,IASvCC,4BAA6B,SAAU7jB,GAGrClC,EAAaV,QAAQymB,4BAA4B7jB,MAWrD,EAAI0d,EAAgBtgB,SAASimB,EAAO,gBAAiB,CACnDpgB,IAAK,WACH,OAAOnF,EAAaV,QAAQ6F,IAAI,mBAElC6E,IAAK,SAAU3K,GACbW,EAAaV,QAAQ0K,IAAI,iBAAkB3K,OAS/C,EAAIugB,EAAgBtgB,SAASimB,EAAO,gBAAiB,CACnDpgB,IAAK,WACH,OAAOnF,EAAaV,QAAQ6F,IAAI,mBAElC6E,IAAK,SAAU3K,GACbW,EAAaV,QAAQ0K,IAAI,iBAAkB3K,OAS/C,EAAIugB,EAAgBtgB,SAASimB,EAAO,YAAa,CAC/CpgB,IAAK,WACH,OAAOnF,EAAaV,QAAQ6F,IAAI,eAElC6E,IAAK,SAAU3K,GACbW,EAAaV,QAAQ0K,IAAI,aAAc3K,OAS3C,EAAIugB,EAAgBtgB,SAASimB,EAAO,YAAa,CAC/CpgB,IAAK,WACH,OAAOnF,EAAaV,QAAQ6F,IAAI,eAElC6E,IAAK,SAAU3K,GACbW,EAAaV,QAAQ0K,IAAI,aAAc3K,OAS3C,EAAIugB,EAAgBtgB,SAASimB,EAAO,kBAAmB,CACrDpgB,IAAK,WACH,OAAOnF,EAAaV,QAAQ6F,IAAI,sBAElC6E,IAAK,SAAU3K,GACbW,EAAaV,QAAQ0K,IAAI,oBAAqB3K,OASlD,EAAIugB,EAAgBtgB,SAASimB,EAAO,iBAAkB,CACpDpgB,IAAK,WACH,OAAOnF,EAAaV,QAAQ6F,IAAI,qBAElC6E,IAAK,SAAU3K,GACbW,EAAaV,QAAQ0K,IAAI,mBAAoB3K,OASjD,EAAIugB,EAAgBtgB,SAASimB,EAAO,qBAAsB,CACxDpgB,IAAK,WACH,OAAOnF,EAAaV,QAAQ6F,IAAI,yBAElC6E,IAAK,SAAU3K,GACbW,EAAaV,QAAQ0K,IAAI,uBAAwB3K,OASrD,EAAIugB,EAAgBtgB,SAASimB,EAAO,gBAAiB,CACnDpgB,IAAK,WACH,OAAOnF,EAAaV,QAAQ6F,IAAI,mBAElC6E,IAAK,SAAU3K,GACbW,EAAaV,QAAQ0K,IAAI,iBAAkB3K,OAS/C,EAAIugB,EAAgBtgB,SAASimB,EAAO,SAAU,CAC5CpgB,IAAK,WACH,OAAOnF,EAAaV,QAAQ6F,IAAI,kBAElC6E,IAAK,SAAU3K,GACbW,EAAaV,QAAQ0K,IAAI,gBAAiB3K,MAK9CkmB,EAAMhR,IAAM,EAAQ,QAAcjV,QAClCimB,EAAMS,UAAY,EAAQ,QAC1BT,EAAMU,eAAiB,EAAQ,QAAoB3mB,QACnDimB,EAAMW,MAAQ,EAAQ,QACtBX,EAAMY,YAAc,EAAQ,QAC5BZ,EAAMa,OAAS,EAAQ,QAAiB9mB,QACxCimB,EAAM5iB,MAAQ,EAAQ,QAAgBrD,QACtCimB,EAAMc,cAAgB,EAAQ,QAAmB/mB,QACjDimB,EAAMe,KAAO,EAAQ,QAAehnB,QACpCimB,EAAMgB,SAAW,EAAQ,QAAmBjnB,QAC5CimB,EAAMiB,QAAU,EAAQ,QAAkBlnB,QAC1CimB,EAAM3a,aAAe,EAAQ,QAAuBtL,QACpDimB,EAAMkB,eAAiB,EAAQ,QAC/BlB,EAAMmB,OAAS,EAAQ,QAAiBpnB,QACxCimB,EAAMhT,GAAK,CACToU,IAAKtB,EAAQxV,MACb+W,MAAOvB,EAAQhU,QACfwV,UAAWxB,EAAQ5R,YACnBqT,IAAKzB,EAAQ1R,MACboT,OAAQ1B,EAAQvR,SAChBkT,UAAW3B,EAAQxR,YACnBoT,SAAU5B,EAAQlU,YAEpBoU,EAAM2B,KAAO,EAAQ,QACrB3B,EAAM4B,MAAQ,EAAQ,QAAgB7nB,QACtCimB,EAAM0B,SAAW,EAAQ,QAAmB3nB,QAC5CimB,EAAM6B,KAAO,EAAQ,QAAe9nB,QACpCimB,EAAM8B,OAAS,EAAQ,QAAiB/nB,QACxCimB,EAAM+B,QAAU,EAAQ,QAAkBhoB,QAC1CimB,EAAMgC,QAAU,EAAQ,QACxBhC,EAAMiC,KAAO,EAAQ,QAAeloB,QACpCimB,EAAM/B,UAAY,EAAQ,QAAoBlkB,QAC9CimB,EAAMkC,gBAAkB,EAAQ,QAAqBnoB,QAErDimB,EAAMmC,SAAW,WACf,IAAK,IAAI5S,EAAO1R,UAAUkB,OAAQqjB,EAAO,IAAI5S,MAAMD,GAAOL,EAAO,EAAGA,EAAOK,EAAML,IAC/EkT,EAAKlT,GAAQrR,UAAUqR,GAGzB,OAAOzU,EAAaV,QAAQ+F,oBAAoBI,QAAQtC,MAAM,KAAMwkB,IAGtEpC,EAAMqC,MAAQ,WACZ,IAAK,IAAIC,EAAQzkB,UAAUkB,OAAQqjB,EAAO,IAAI5S,MAAM8S,GAAQ7S,EAAQ,EAAGA,EAAQ6S,EAAO7S,IACpF2S,EAAK3S,GAAS5R,UAAU4R,GAG1B,OAAOhV,EAAaV,QAAQ+F,oBAAoBC,KAAKnC,MAAM,KAAMwkB,IAInEpC,EAAM1Z,QAAU,SAAUic,EAAGzoB,GAC3B,OAAO,EAAIwM,EAAQvM,SAASD,IAG9BkmB,EAAMzZ,QAAU,SAAUzM,EAAOyoB,EAAGC,GAClC,OAAO,EAAIjc,EAAQxM,SAASD,EAAO0oB,IAGrCxC,EAAMyC,mBAAqB,WACzB,OAAOhoB,EAAaV,QAAQulB,4BAA4BC,yBAU1DS,EAAM0C,qBAAuB,WAC3B1C,EAAMkB,eAAehP,WAAY,GASnC8N,EAAM2C,wBAA0B,WAC9B,OAAO3C,EAAMkB,eAAehP,WAa9B8N,EAAM4C,mBAAqB,WACzB,OAAK5C,EAAMkB,eAAehP,UAKjB8N,EAAMkB,eAAe2B,mBAJ5B1C,QAAQC,IAAI,qDAELpmB,EAASD,QAAQsG,QAAQ,MAapC2f,EAAM8C,oBAAsB,WAC1B9C,EAAM+C,eAAgB,GASxB/C,EAAMgD,uBAAyB,WAC7B,OAAOhD,EAAM+C,eAGftoB,EAAaV,QAAQkpB,oBAAoBrD,EAAkB7lB,SAE3DU,EAAaV,QAAQmpB,0BAA0BrD,EAAwB9lB,SAEvEU,EAAaV,QAAQopB,kBAAkBpD,EAAgBhmB,SAGvDimB,EAAMA,MAAQA,EACdoD,EAAOvpB,QAAUmmB,G,kCC7WjB,IAAIrmB,EAAyB,EAAQ,QAEjCC,EAAyB,EAAQ,QAErCA,EAAuBC,EAAS,aAAc,CAC5CC,OAAO,IAGTD,EAAQE,aAAU,EAElB,IAAImM,EAAavM,EAAuB,EAAQ,SAE5C0H,EAAW1H,EAAuB,EAAQ,SAE1CK,EAAWL,EAAuB,EAAQ,SAE1CW,EAAmBX,EAAuB,EAAQ,SAElDY,EAAgBZ,EAAuB,EAAQ,SAE/Ca,EAAmBb,EAAuB,EAAQ,SAElDc,EAAed,EAAuB,EAAQ,SAE9C2M,EAAU3M,EAAuB,EAAQ,SAEzC4M,EAAU5M,EAAuB,EAAQ,SAEzC6M,EAAW7M,EAAuB,EAAQ,SAE1CgN,EAAchN,EAAuB,EAAQ,SAE7C0pB,EAAW1pB,EAAuB,EAAQ,SAoB1C2pB,EAEJ,WACE,SAASA,KACP,EAAIhpB,EAAiBP,SAASuB,KAAMgoB,IACpC,EAAI9oB,EAAiBT,SAASuB,KAAM,kBAAc,IAClD,EAAId,EAAiBT,SAASuB,KAAM,0BAAsB,GAC1DA,KAAKiK,WAAa,GAClBjK,KAAKioB,mBAAqB,GAoH5B,OA5GA,EAAIhpB,EAAcR,SAASupB,EAAa,CAAC,CACvChnB,IAAK,MACLxC,MAAO,SAAUmQ,GAKf,OAAO3O,KAAKiK,WAAW0E,KAOxB,CACD3N,IAAK,SACLxC,MAAO,SAAUmQ,GAKf,IAAIuZ,EAAOloB,KAAKioB,mBAAmBtZ,GAEnC,GAAIuZ,EACF,OAAOA,EAGT,IAAI9e,EAAMpJ,KAAKiK,WAAW0E,GACtBwZ,EAAU,GAOd,OALW,MAAP/e,IACF+e,GAAU,EAAIjd,EAASzM,SAAS2K,EAAIgI,aAGtCpR,KAAKioB,mBAAmBtZ,GAAQwZ,EACzBA,KAWP,CAAC,CACHnnB,IAAK,UACLxC,MAAO,WACL,IAAI6C,EAAalC,EAAaV,QAAQ2pB,sBAEtC,OAAO/mB,EAAWgnB,YAcnB,CACDrnB,IAAK,MACLxC,MAAO,WACL,IAAI4C,EAEFmB,UAAUkB,OAAS,QAAsBtD,IAAjBoC,UAAU,GAAmBA,UAAU,GAAK,GAElElB,EAAalC,EAAaV,QAAQ2pB,sBAEtC,OAAO/mB,EAAWiD,IAAIlD,KAevB,CACDJ,IAAK,OACLxC,MAAO,SAAUqS,EAEfyX,GAGA,IAAIjnB,EAAalC,EAAaV,QAAQ2pB,sBAGtC,OAAO/mB,EAAW0U,KAAKlF,EAAOyX,GAAoBzlB,MAAK,WACrD,OAAOxB,EAAWiD,IAAI,CACpB6Q,cAAc,OAEf,SAAU9C,GACX,OAAO3T,EAASD,QAAQqG,OAAOuN,UAI9B2V,EA1HT,GA6HIO,EAAgB,KAChBC,EAAqB,gBAEzB,SAASC,EAAc3oB,GACrB,IACE,IAAIuO,EAAOqa,KAAKC,MAAM7oB,GAEtB,GAAIuO,GAAwC,YAAhC,EAAItI,EAAStH,SAAS4P,GAChC,OAAO,EAAIrD,EAAQvM,SAAS4P,GAE9B,MAAOjJ,GACP,OAAO,MAIX,IAAIjB,EAAoB,CACtBkkB,QAAS,WACP,GAAIE,EACF,OAAOA,EAGT,IAIIK,EAJAC,EAAS,IAAIb,EAEbc,EAAcf,EAAStpB,QAAQsqB,aAAaP,GAIhD,IAAKT,EAAStpB,QAAQuqB,QAAS,CAG7B,GAFAJ,EAAab,EAAStpB,QAAQwqB,QAAQH,GAElCF,EAAY,CACd,IAAI3e,EAAawe,EAAcG,GAE3B3e,IACF4e,EAAO5e,WAAaA,EACpBse,EAAgBM,GAIpB,OAAOA,EAIT,OAAOd,EAAStpB,QAAQyqB,aAAaJ,GAAajmB,MAAK,SAAU+lB,GAC/D,GAAIA,EAAY,CACd,IAAIO,EAAcV,EAAcG,GAE5BO,IACFN,EAAO5e,WAAakf,EACpBZ,EAAgBM,GAIpB,OAAOA,MAGXvkB,IAAK,WACH,IAAIlD,EAEFmB,UAAUkB,OAAS,QAAsBtD,IAAjBoC,UAAU,GAAmBA,UAAU,GAAK,GAElE2Y,EAAiB/b,EAAaV,QAAQ+F,oBAE1C,OAAO0W,EAAetW,QAAQ,MAAO,SAAU,GAAIxD,GAASyB,MAAK,SAAU6B,GACzE,IAAKA,IAAaA,EAASyW,OAAQ,CACjC,IAAI9I,EAAQ,IAAIhH,EAAY5M,QAAQ4M,EAAY5M,QAAQ+gB,aAAc,iCACtE,OAAO9gB,EAASD,QAAQqG,OAAOuN,GAGjC,IAAIwW,EAAS,IAAIb,EAGjB,IAAK,IAAIrZ,KAFTka,EAAO5e,WAAa,GAEHvF,EAASyW,OACxB0N,EAAO5e,WAAW0E,IAAQ,EAAI3D,EAAQvM,SAASiG,EAASyW,OAAOxM,IAIjE,OADA4Z,EAAgBM,EACTd,EAAStpB,QAAQ2qB,aAAarB,EAAStpB,QAAQsqB,aAAaP,IAAqB,EAAI5d,EAAWnM,SAASiG,EAASyW,SAAStY,MAAK,WACrI,OAAOgmB,SAIb9S,KAAM,SAAUlF,EAEdyX,GAGA,IAAIpN,EAAiB/b,EAAaV,QAAQ+F,oBAEtC6kB,EAAe,GAEnB,IAAK,IAAIzV,KAAQ/C,EACfwY,EAAazV,IAAQ,EAAI3I,EAAQxM,SAASoS,EAAM+C,IAGlD,OAAOsH,EAAetW,QAAQ,MAAO,SAAU,CAC7CuW,OAAQkO,EACRC,cAAehB,GACd,CACDnT,cAAc,IACbtS,MAAK,SAAU6B,GAChB,GAAIA,GAAYA,EAASpD,OACvB,OAAO5C,EAASD,QAAQsG,UAExB,IAAIsN,EAAQ,IAAIhH,EAAY5M,QAAQ4M,EAAY5M,QAAQ2gB,sBAAuB,kCAC/E,OAAO1gB,EAASD,QAAQqG,OAAOuN,QAMvClT,EAAaV,QAAQ8qB,oBAAoBplB,GAEzC,IAAI0B,EAAWmiB,EACfzpB,EAAQE,QAAUoH","file":"js/chunk-vendors~249f5d73.6632e5ad.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs3/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\n\nvar _slice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\"));\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nvar _isArray = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n/* global XMLHttpRequest, Blob */\n\n\nvar XHR = null;\n\nif (typeof XMLHttpRequest !== 'undefined') {\n  XHR = XMLHttpRequest;\n}\n\n/*:: type Base64 = { base64: string };*/\n\n/*:: type Uri = { uri: string };*/\n\n/*:: type FileData = Array<number> | Base64 | Blob | Uri;*/\n\n/*:: export type FileSource = {\n  format: 'file';\n  file: Blob;\n  type: string\n} | {\n  format: 'base64';\n  base64: string;\n  type: string\n} | {\n  format: 'uri';\n  uri: string;\n  type: string\n};*/\nvar dataUriRegexp = /^data:([a-zA-Z]+\\/[-a-zA-Z0-9+.]+)(;charset=[a-zA-Z0-9\\-\\/]*)?;base64,/;\n\nfunction b64Digit(number\n/*: number*/\n)\n/*: string*/\n{\n  if (number < 26) {\n    return String.fromCharCode(65 + number);\n  }\n\n  if (number < 52) {\n    return String.fromCharCode(97 + (number - 26));\n  }\n\n  if (number < 62) {\n    return String.fromCharCode(48 + (number - 52));\n  }\n\n  if (number === 62) {\n    return '+';\n  }\n\n  if (number === 63) {\n    return '/';\n  }\n\n  throw new TypeError('Tried to encode large digit ' + number + ' in base64.');\n}\n/**\n * A Parse.File is a local representation of a file that is saved to the Parse\n * cloud.\n * @alias Parse.File\n */\n\n\nvar ParseFile =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param name {String} The file's name. This will be prefixed by a unique\n   *     value once the file has finished saving. The file name must begin with\n   *     an alphanumeric character, and consist of alphanumeric characters,\n   *     periods, spaces, underscores, or dashes.\n   * @param data {Array} The data for the file, as either:\n   *     1. an Array of byte value Numbers, or\n   *     2. an Object like { base64: \"...\" } with a base64-encoded String.\n   *     3. an Object like { uri: \"...\" } with a uri String.\n   *     4. a File object selected with a file upload control. (3) only works\n   *        in Firefox 3.6+, Safari 6.0.2+, Chrome 7+, and IE 10+.\n   *        For example:\n   * <pre>\n   * var fileUploadControl = $(\"#profilePhotoFileUpload\")[0];\n   * if (fileUploadControl.files.length > 0) {\n   *   var file = fileUploadControl.files[0];\n   *   var name = \"photo.jpg\";\n   *   var parseFile = new Parse.File(name, file);\n   *   parseFile.save().then(function() {\n   *     // The file has been saved to Parse.\n   *   }, function(error) {\n   *     // The file either could not be read, or could not be saved to Parse.\n   *   });\n   * }</pre>\n   * @param type {String} Optional Content-Type header to use for the file. If\n   *     this is omitted, the content type will be inferred from the name's\n   *     extension.\n   */\n  function ParseFile(name\n  /*: string*/\n  , data\n  /*:: ?: FileData*/\n  , type\n  /*:: ?: string*/\n  ) {\n    (0, _classCallCheck2.default)(this, ParseFile);\n    (0, _defineProperty2.default)(this, \"_name\", void 0);\n    (0, _defineProperty2.default)(this, \"_url\", void 0);\n    (0, _defineProperty2.default)(this, \"_source\", void 0);\n    (0, _defineProperty2.default)(this, \"_previousSave\", void 0);\n    (0, _defineProperty2.default)(this, \"_data\", void 0);\n    (0, _defineProperty2.default)(this, \"_requestTask\", void 0);\n    var specifiedType = type || '';\n    this._name = name;\n\n    if (data !== undefined) {\n      if ((0, _isArray.default)(data)) {\n        this._data = ParseFile.encodeBase64(data);\n        this._source = {\n          format: 'base64',\n          base64: this._data,\n          type: specifiedType\n        };\n      } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n        this._source = {\n          format: 'file',\n          file: data,\n          type: specifiedType\n        };\n      } else if (data && typeof data.uri === 'string' && data.uri !== undefined) {\n        this._source = {\n          format: 'uri',\n          uri: data.uri,\n          type: specifiedType\n        };\n      } else if (data && typeof data.base64 === 'string') {\n        var base64 = data.base64;\n        var commaIndex = (0, _indexOf.default)(base64).call(base64, ',');\n\n        if (commaIndex !== -1) {\n          var matches = dataUriRegexp.exec((0, _slice.default)(base64).call(base64, 0, commaIndex + 1)); // if data URI with type and charset, there will be 4 matches.\n\n          this._data = (0, _slice.default)(base64).call(base64, commaIndex + 1);\n          this._source = {\n            format: 'base64',\n            base64: this._data,\n            type: matches[1]\n          };\n        } else {\n          this._data = base64;\n          this._source = {\n            format: 'base64',\n            base64: base64,\n            type: specifiedType\n          };\n        }\n      } else {\n        throw new TypeError('Cannot create a Parse.File with that data.');\n      }\n    }\n  }\n  /**\n   * Return the data for the file, downloading it if not already present.\n   * Data is present if initialized with Byte Array, Base64 or Saved with Uri.\n   * Data is cleared if saved with File object selected with a file upload control\n   *\n   * @return {Promise} Promise that is resolve with base64 data\n   */\n\n\n  (0, _createClass2.default)(ParseFile, [{\n    key: \"getData\",\n    value: function () {\n      var _getData = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee() {\n        var _this = this;\n\n        var options, controller, result;\n        return _regenerator.default.wrap(function (_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!this._data) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this._data);\n\n              case 2:\n                if (this._url) {\n                  _context.next = 4;\n                  break;\n                }\n\n                throw new Error('Cannot retrieve data for unsaved ParseFile.');\n\n              case 4:\n                options = {\n                  requestTask: function (task) {\n                    return _this._requestTask = task;\n                  }\n                };\n                controller = _CoreManager.default.getFileController();\n                _context.next = 8;\n                return controller.download(this._url, options);\n\n              case 8:\n                result = _context.sent;\n                this._data = result.base64;\n                return _context.abrupt(\"return\", this._data);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function () {\n        return _getData.apply(this, arguments);\n      };\n    }()\n    /**\n     * Gets the name of the file. Before save is called, this is the filename\n     * given by the user. After save is called, that name gets prefixed with a\n     * unique identifier.\n     * @return {String}\n     */\n\n  }, {\n    key: \"name\",\n    value: function ()\n    /*: string*/\n    {\n      return this._name;\n    }\n    /**\n     * Gets the url of the file. It is only available after you save the file or\n     * after you get the file from a Parse.Object.\n     * @param {Object} options An object to specify url options\n     * @return {String}\n     */\n\n  }, {\n    key: \"url\",\n    value: function (options\n    /*:: ?: { forceSecure?: boolean }*/\n    )\n    /*: ?string*/\n    {\n      options = options || {};\n\n      if (!this._url) {\n        return;\n      }\n\n      if (options.forceSecure) {\n        return this._url.replace(/^http:\\/\\//i, 'https://');\n      } else {\n        return this._url;\n      }\n    }\n    /**\n     * Saves the file to the Parse cloud.\n     * @param {Object} options\n     *  * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>progress: In Browser only, callback for upload progress\n     * </ul>\n     * @return {Promise} Promise that is resolved when the save finishes.\n     */\n\n  }, {\n    key: \"save\",\n    value: function (options\n    /*:: ?: FullOptions*/\n    ) {\n      var _this2 = this;\n\n      options = options || {};\n\n      options.requestTask = function (task) {\n        return _this2._requestTask = task;\n      };\n\n      var controller = _CoreManager.default.getFileController();\n\n      if (!this._previousSave) {\n        if (this._source.format === 'file') {\n          this._previousSave = controller.saveFile(this._name, this._source, options).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._data = null;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        } else if (this._source.format === 'uri') {\n          this._previousSave = controller.download(this._source.uri, options).then(function (result) {\n            if (!(result && result.base64)) {\n              return {};\n            }\n\n            var newSource = {\n              format: 'base64',\n              base64: result.base64,\n              type: result.contentType\n            };\n            _this2._data = result.base64;\n            _this2._requestTask = null;\n            return controller.saveBase64(_this2._name, newSource, options);\n          }).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        } else {\n          this._previousSave = controller.saveBase64(this._name, this._source, options).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        }\n      }\n\n      if (this._previousSave) {\n        return this._previousSave;\n      }\n    }\n    /**\n     * Aborts the request if it has already been sent.\n     */\n\n  }, {\n    key: \"cancel\",\n    value: function () {\n      if (this._requestTask && typeof this._requestTask.abort === 'function') {\n        this._requestTask.abort();\n      }\n\n      this._requestTask = null;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function ()\n    /*: { name: ?string, url: ?string }*/\n    {\n      return {\n        __type: 'File',\n        name: this._name,\n        url: this._url\n      };\n    }\n  }, {\n    key: \"equals\",\n    value: function (other\n    /*: mixed*/\n    )\n    /*: boolean*/\n    {\n      if (this === other) {\n        return true;\n      } // Unsaved Files are never equal, since they will be saved to different URLs\n\n\n      return other instanceof ParseFile && this.name() === other.name() && this.url() === other.url() && typeof this.url() !== 'undefined';\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function (obj)\n    /*: ParseFile*/\n    {\n      if (obj.__type !== 'File') {\n        throw new TypeError('JSON object does not represent a ParseFile');\n      }\n\n      var file = new ParseFile(obj.name);\n      file._url = obj.url;\n      return file;\n    }\n  }, {\n    key: \"encodeBase64\",\n    value: function (bytes\n    /*: Array<number>*/\n    )\n    /*: string*/\n    {\n      var chunks = [];\n      chunks.length = Math.ceil(bytes.length / 3);\n\n      for (var i = 0; i < chunks.length; i++) {\n        var b1 = bytes[i * 3];\n        var b2 = bytes[i * 3 + 1] || 0;\n        var b3 = bytes[i * 3 + 2] || 0;\n        var has2 = i * 3 + 1 < bytes.length;\n        var has3 = i * 3 + 2 < bytes.length;\n        chunks[i] = [b64Digit(b1 >> 2 & 0x3F), b64Digit(b1 << 4 & 0x30 | b2 >> 4 & 0x0F), has2 ? b64Digit(b2 << 2 & 0x3C | b3 >> 6 & 0x03) : '=', has3 ? b64Digit(b3 & 0x3F) : '='].join('');\n      }\n\n      return chunks.join('');\n    }\n  }]);\n  return ParseFile;\n}();\n\nvar DefaultController = {\n  saveFile: function (name\n  /*: string*/\n  , source\n  /*: FileSource*/\n  , options\n  /*:: ?: FullOptions*/\n  ) {\n    if (source.format !== 'file') {\n      throw new Error('saveFile can only be used with File-type sources.');\n    } // To directly upload a File, we use a REST-style AJAX request\n\n\n    var headers = {\n      'X-Parse-Application-ID': _CoreManager.default.get('APPLICATION_ID'),\n      'Content-Type': source.type || (source.file ? source.file.type : null)\n    };\n\n    var jsKey = _CoreManager.default.get('JAVASCRIPT_KEY');\n\n    if (jsKey) {\n      headers['X-Parse-JavaScript-Key'] = jsKey;\n    }\n\n    var url = _CoreManager.default.get('SERVER_URL');\n\n    if (url[url.length - 1] !== '/') {\n      url += '/';\n    }\n\n    url += 'files/' + name;\n    return _CoreManager.default.getRESTController().ajax('POST', url, source.file, headers, options).then(function (res) {\n      return res.response;\n    });\n  },\n  saveBase64: function (name\n  /*: string*/\n  , source\n  /*: FileSource*/\n  , options\n  /*:: ?: FullOptions*/\n  ) {\n    if (source.format !== 'base64') {\n      throw new Error('saveBase64 can only be used with Base64-type sources.');\n    }\n\n    var data\n    /*: { base64: any; _ContentType?: any }*/\n    = {\n      base64: source.base64\n    };\n\n    if (source.type) {\n      data._ContentType = source.type;\n    }\n\n    return _CoreManager.default.getRESTController().request('POST', 'files/' + name, data, options);\n  },\n  download: function (uri, options) {\n    if (XHR) {\n      return this.downloadAjax(uri, options);\n    } else {\n      return _promise.default.reject('Cannot make a request: No definition of XMLHttpRequest was found.');\n    }\n  },\n  downloadAjax: function (uri, options) {\n    return new _promise.default(function (resolve, reject) {\n      var xhr = new XHR();\n      xhr.open('GET', uri, true);\n      xhr.responseType = 'arraybuffer';\n\n      xhr.onerror = function (e) {\n        reject(e);\n      };\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState !== xhr.DONE) {\n          return;\n        }\n\n        if (!this.response) {\n          return resolve({});\n        }\n\n        var bytes = new Uint8Array(this.response);\n        resolve({\n          base64: ParseFile.encodeBase64(bytes),\n          contentType: xhr.getResponseHeader('content-type')\n        });\n      };\n\n      options.requestTask(xhr);\n      xhr.send();\n    });\n  },\n  _setXHR: function (xhr\n  /*: any*/\n  ) {\n    XHR = xhr;\n  }\n};\n\n_CoreManager.default.setFileController(DefaultController);\n\nvar _default = ParseFile;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\n\nvar _ParseRole = _interopRequireDefault(require(\"./ParseRole\"));\n\nvar _ParseUser = _interopRequireDefault(require(\"./ParseUser\"));\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n\nvar PUBLIC_KEY = '*';\n/**\n * Creates a new ACL.\n * If no argument is given, the ACL has no permissions for anyone.\n * If the argument is a Parse.User, the ACL will have read and write\n *   permission for only that user.\n * If the argument is any other JSON object, that object will be interpretted\n *   as a serialized ACL created with toJSON().\n *\n * <p>An ACL, or Access Control List can be added to any\n * <code>Parse.Object</code> to restrict access to only a subset of users\n * of your application.</p>\n * @alias Parse.ACL\n */\n\nvar ParseACL =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {(Parse.User|Object)} user The user to initialize the ACL for\n   */\n  function ParseACL(arg1\n  /*: ParseUser | ByIdMap*/\n  ) {\n    (0, _classCallCheck2.default)(this, ParseACL);\n    (0, _defineProperty2.default)(this, \"permissionsById\", void 0);\n    this.permissionsById = {};\n\n    if (arg1 && (0, _typeof2.default)(arg1) === 'object') {\n      if (arg1 instanceof _ParseUser.default) {\n        this.setReadAccess(arg1, true);\n        this.setWriteAccess(arg1, true);\n      } else {\n        for (var _userId in arg1) {\n          var accessList = arg1[_userId];\n\n          if (typeof _userId !== 'string') {\n            throw new TypeError('Tried to create an ACL with an invalid user id.');\n          }\n\n          this.permissionsById[_userId] = {};\n\n          for (var _permission in accessList) {\n            var allowed = accessList[_permission];\n\n            if (_permission !== 'read' && _permission !== 'write') {\n              throw new TypeError('Tried to create an ACL with an invalid permission type.');\n            }\n\n            if (typeof allowed !== 'boolean') {\n              throw new TypeError('Tried to create an ACL with an invalid permission value.');\n            }\n\n            this.permissionsById[_userId][_permission] = allowed;\n          }\n        }\n      }\n    } else if (typeof arg1 === 'function') {\n      throw new TypeError('ParseACL constructed with a function. Did you forget ()?');\n    }\n  }\n  /**\n   * Returns a JSON-encoded version of the ACL.\n   * @return {Object}\n   */\n\n\n  (0, _createClass2.default)(ParseACL, [{\n    key: \"toJSON\",\n    value: function ()\n    /*: ByIdMap*/\n    {\n      var permissions = {};\n\n      for (var p in this.permissionsById) {\n        permissions[p] = this.permissionsById[p];\n      }\n\n      return permissions;\n    }\n    /**\n     * Returns whether this ACL is equal to another object\n     * @param other The other object to compare to\n     * @return {Boolean}\n     */\n\n  }, {\n    key: \"equals\",\n    value: function (other\n    /*: ParseACL*/\n    )\n    /*: boolean*/\n    {\n      if (!(other instanceof ParseACL)) {\n        return false;\n      }\n\n      var users = (0, _keys.default)(this.permissionsById);\n      var otherUsers = (0, _keys.default)(other.permissionsById);\n\n      if (users.length !== otherUsers.length) {\n        return false;\n      }\n\n      for (var u in this.permissionsById) {\n        if (!other.permissionsById[u]) {\n          return false;\n        }\n\n        if (this.permissionsById[u].read !== other.permissionsById[u].read) {\n          return false;\n        }\n\n        if (this.permissionsById[u].write !== other.permissionsById[u].write) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"_setAccess\",\n    value: function (accessType\n    /*: string*/\n    , userId\n    /*: ParseUser | ParseRole | string*/\n    , allowed\n    /*: boolean*/\n    ) {\n      if (userId instanceof _ParseUser.default) {\n        userId = userId.id;\n      } else if (userId instanceof _ParseRole.default) {\n        var name = userId.getName();\n\n        if (!name) {\n          throw new TypeError('Role must have a name');\n        }\n\n        userId = 'role:' + name;\n      }\n\n      if (typeof userId !== 'string') {\n        throw new TypeError('userId must be a string.');\n      }\n\n      if (typeof allowed !== 'boolean') {\n        throw new TypeError('allowed must be either true or false.');\n      }\n\n      var permissions = this.permissionsById[userId];\n\n      if (!permissions) {\n        if (!allowed) {\n          // The user already doesn't have this permission, so no action is needed\n          return;\n        } else {\n          permissions = {};\n          this.permissionsById[userId] = permissions;\n        }\n      }\n\n      if (allowed) {\n        this.permissionsById[userId][accessType] = true;\n      } else {\n        delete permissions[accessType];\n\n        if ((0, _keys.default)(permissions).length === 0) {\n          delete this.permissionsById[userId];\n        }\n      }\n    }\n  }, {\n    key: \"_getAccess\",\n    value: function (accessType\n    /*: string*/\n    , userId\n    /*: ParseUser | ParseRole | string*/\n    )\n    /*: boolean*/\n    {\n      if (userId instanceof _ParseUser.default) {\n        userId = userId.id;\n\n        if (!userId) {\n          throw new Error('Cannot get access for a ParseUser without an ID');\n        }\n      } else if (userId instanceof _ParseRole.default) {\n        var name = userId.getName();\n\n        if (!name) {\n          throw new TypeError('Role must have a name');\n        }\n\n        userId = 'role:' + name;\n      }\n\n      var permissions = this.permissionsById[userId];\n\n      if (!permissions) {\n        return false;\n      }\n\n      return !!permissions[accessType];\n    }\n    /**\n     * Sets whether the given user is allowed to read this object.\n     * @param userId An instance of Parse.User or its objectId.\n     * @param {Boolean} allowed Whether that user should have read access.\n     */\n\n  }, {\n    key: \"setReadAccess\",\n    value: function (userId\n    /*: ParseUser | ParseRole | string*/\n    , allowed\n    /*: boolean*/\n    ) {\n      this._setAccess('read', userId, allowed);\n    }\n    /**\n     * Get whether the given user id is *explicitly* allowed to read this object.\n     * Even if this returns false, the user may still be able to access it if\n     * getPublicReadAccess returns true or a role that the user belongs to has\n     * write access.\n     * @param userId An instance of Parse.User or its objectId, or a Parse.Role.\n     * @return {Boolean}\n     */\n\n  }, {\n    key: \"getReadAccess\",\n    value: function (userId\n    /*: ParseUser | ParseRole | string*/\n    )\n    /*: boolean*/\n    {\n      return this._getAccess('read', userId);\n    }\n    /**\n     * Sets whether the given user id is allowed to write this object.\n     * @param userId An instance of Parse.User or its objectId, or a Parse.Role..\n     * @param {Boolean} allowed Whether that user should have write access.\n     */\n\n  }, {\n    key: \"setWriteAccess\",\n    value: function (userId\n    /*: ParseUser | ParseRole | string*/\n    , allowed\n    /*: boolean*/\n    ) {\n      this._setAccess('write', userId, allowed);\n    }\n    /**\n     * Gets whether the given user id is *explicitly* allowed to write this object.\n     * Even if this returns false, the user may still be able to write it if\n     * getPublicWriteAccess returns true or a role that the user belongs to has\n     * write access.\n     * @param userId An instance of Parse.User or its objectId, or a Parse.Role.\n     * @return {Boolean}\n     */\n\n  }, {\n    key: \"getWriteAccess\",\n    value: function (userId\n    /*: ParseUser | ParseRole | string*/\n    )\n    /*: boolean*/\n    {\n      return this._getAccess('write', userId);\n    }\n    /**\n     * Sets whether the public is allowed to read this object.\n     * @param {Boolean} allowed\n     */\n\n  }, {\n    key: \"setPublicReadAccess\",\n    value: function (allowed\n    /*: boolean*/\n    ) {\n      this.setReadAccess(PUBLIC_KEY, allowed);\n    }\n    /**\n     * Gets whether the public is allowed to read this object.\n     * @return {Boolean}\n     */\n\n  }, {\n    key: \"getPublicReadAccess\",\n    value: function ()\n    /*: boolean*/\n    {\n      return this.getReadAccess(PUBLIC_KEY);\n    }\n    /**\n     * Sets whether the public is allowed to write this object.\n     * @param {Boolean} allowed\n     */\n\n  }, {\n    key: \"setPublicWriteAccess\",\n    value: function (allowed\n    /*: boolean*/\n    ) {\n      this.setWriteAccess(PUBLIC_KEY, allowed);\n    }\n    /**\n     * Gets whether the public is allowed to write this object.\n     * @return {Boolean}\n     */\n\n  }, {\n    key: \"getPublicWriteAccess\",\n    value: function ()\n    /*: boolean*/\n    {\n      return this.getWriteAccess(PUBLIC_KEY);\n    }\n    /**\n     * Gets whether users belonging to the given role are allowed\n     * to read this object. Even if this returns false, the role may\n     * still be able to write it if a parent role has read access.\n     *\n     * @param role The name of the role, or a Parse.Role object.\n     * @return {Boolean} true if the role has read access. false otherwise.\n     * @throws {TypeError} If role is neither a Parse.Role nor a String.\n     */\n\n  }, {\n    key: \"getRoleReadAccess\",\n    value: function (role\n    /*: ParseRole | string*/\n    )\n    /*: boolean*/\n    {\n      if (role instanceof _ParseRole.default) {\n        // Normalize to the String name\n        role = role.getName();\n      }\n\n      if (typeof role !== 'string') {\n        throw new TypeError('role must be a ParseRole or a String');\n      }\n\n      return this.getReadAccess('role:' + role);\n    }\n    /**\n     * Gets whether users belonging to the given role are allowed\n     * to write this object. Even if this returns false, the role may\n     * still be able to write it if a parent role has write access.\n     *\n     * @param role The name of the role, or a Parse.Role object.\n     * @return {Boolean} true if the role has write access. false otherwise.\n     * @throws {TypeError} If role is neither a Parse.Role nor a String.\n     */\n\n  }, {\n    key: \"getRoleWriteAccess\",\n    value: function (role\n    /*: ParseRole | string*/\n    )\n    /*: boolean*/\n    {\n      if (role instanceof _ParseRole.default) {\n        // Normalize to the String name\n        role = role.getName();\n      }\n\n      if (typeof role !== 'string') {\n        throw new TypeError('role must be a ParseRole or a String');\n      }\n\n      return this.getWriteAccess('role:' + role);\n    }\n    /**\n     * Sets whether users belonging to the given role are allowed\n     * to read this object.\n     *\n     * @param role The name of the role, or a Parse.Role object.\n     * @param {Boolean} allowed Whether the given role can read this object.\n     * @throws {TypeError} If role is neither a Parse.Role nor a String.\n     */\n\n  }, {\n    key: \"setRoleReadAccess\",\n    value: function (role\n    /*: ParseRole | string*/\n    , allowed\n    /*: boolean*/\n    ) {\n      if (role instanceof _ParseRole.default) {\n        // Normalize to the String name\n        role = role.getName();\n      }\n\n      if (typeof role !== 'string') {\n        throw new TypeError('role must be a ParseRole or a String');\n      }\n\n      this.setReadAccess('role:' + role, allowed);\n    }\n    /**\n     * Sets whether users belonging to the given role are allowed\n     * to write this object.\n     *\n     * @param role The name of the role, or a Parse.Role object.\n     * @param {Boolean} allowed Whether the given role can write this object.\n     * @throws {TypeError} If role is neither a Parse.Role nor a String.\n     */\n\n  }, {\n    key: \"setRoleWriteAccess\",\n    value: function (role\n    /*: ParseRole | string*/\n    , allowed\n    /*: boolean*/\n    ) {\n      if (role instanceof _ParseRole.default) {\n        // Normalize to the String name\n        role = role.getName();\n      }\n\n      if (typeof role !== 'string') {\n        throw new TypeError('role must be a ParseRole or a String');\n      }\n\n      this.setWriteAccess('role:' + role, allowed);\n    }\n  }]);\n  return ParseACL;\n}();\n\nvar _default = ParseACL;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _isArray = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n/**\n * Creates a new GeoPoint with any of the following forms:<br>\n *   <pre>\n *   new GeoPoint(otherGeoPoint)\n *   new GeoPoint(30, 30)\n *   new GeoPoint([30, 30])\n *   new GeoPoint({latitude: 30, longitude: 30})\n *   new GeoPoint()  // defaults to (0, 0)\n *   </pre>\n * <p>Represents a latitude / longitude point that may be associated\n * with a key in a ParseObject or used as a reference point for geo queries.\n * This allows proximity-based queries on the key.</p>\n *\n * <p>Only one key in a class may contain a GeoPoint.</p>\n *\n * <p>Example:<pre>\n *   var point = new Parse.GeoPoint(30.0, -20.0);\n *   var object = new Parse.Object(\"PlaceObject\");\n *   object.set(\"location\", point);\n *   object.save();</pre></p>\n * @alias Parse.GeoPoint\n */\n\n/* global navigator */\n\n\nvar ParseGeoPoint =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {(Number[]|Object|Number)} options Either a list of coordinate pairs, an object with `latitude`, `longitude`, or the latitude or the point.\n   * @param {Number} longitude The longitude of the GeoPoint\n   */\n  function ParseGeoPoint(arg1\n  /*: Array<number> |\n      { latitude: number; longitude: number } |\n      number*/\n  , arg2\n  /*:: ?: number*/\n  ) {\n    (0, _classCallCheck2.default)(this, ParseGeoPoint);\n    (0, _defineProperty2.default)(this, \"_latitude\", void 0);\n    (0, _defineProperty2.default)(this, \"_longitude\", void 0);\n\n    if ((0, _isArray.default)(arg1)) {\n      ParseGeoPoint._validate(arg1[0], arg1[1]);\n\n      this._latitude = arg1[0];\n      this._longitude = arg1[1];\n    } else if ((0, _typeof2.default)(arg1) === 'object') {\n      ParseGeoPoint._validate(arg1.latitude, arg1.longitude);\n\n      this._latitude = arg1.latitude;\n      this._longitude = arg1.longitude;\n    } else if (arg1 !== undefined && arg2 !== undefined) {\n      ParseGeoPoint._validate(arg1, arg2);\n\n      this._latitude = arg1;\n      this._longitude = arg2;\n    } else {\n      this._latitude = 0;\n      this._longitude = 0;\n    }\n  }\n  /**\n   * North-south portion of the coordinate, in range [-90, 90].\n   * Throws an exception if set out of range in a modern browser.\n   * @property latitude\n   * @type Number\n   */\n\n\n  (0, _createClass2.default)(ParseGeoPoint, [{\n    key: \"toJSON\",\n\n    /**\n     * Returns a JSON representation of the GeoPoint, suitable for Parse.\n      * @return {Object}\n     */\n    value: function ()\n    /*: { __type: string; latitude: number; longitude: number }*/\n    {\n      ParseGeoPoint._validate(this._latitude, this._longitude);\n\n      return {\n        __type: 'GeoPoint',\n        latitude: this._latitude,\n        longitude: this._longitude\n      };\n    }\n  }, {\n    key: \"equals\",\n    value: function (other\n    /*: mixed*/\n    )\n    /*: boolean*/\n    {\n      return other instanceof ParseGeoPoint && this.latitude === other.latitude && this.longitude === other.longitude;\n    }\n    /**\n     * Returns the distance from this GeoPoint to another in radians.\n      * @param {Parse.GeoPoint} point the other Parse.GeoPoint.\n     * @return {Number}\n     */\n\n  }, {\n    key: \"radiansTo\",\n    value: function (point\n    /*: ParseGeoPoint*/\n    )\n    /*: number*/\n    {\n      var d2r = Math.PI / 180.0;\n      var lat1rad = this.latitude * d2r;\n      var long1rad = this.longitude * d2r;\n      var lat2rad = point.latitude * d2r;\n      var long2rad = point.longitude * d2r;\n      var sinDeltaLatDiv2 = Math.sin((lat1rad - lat2rad) / 2);\n      var sinDeltaLongDiv2 = Math.sin((long1rad - long2rad) / 2); // Square of half the straight line chord distance between both points.\n\n      var a = sinDeltaLatDiv2 * sinDeltaLatDiv2 + Math.cos(lat1rad) * Math.cos(lat2rad) * sinDeltaLongDiv2 * sinDeltaLongDiv2;\n      a = Math.min(1.0, a);\n      return 2 * Math.asin(Math.sqrt(a));\n    }\n    /**\n     * Returns the distance from this GeoPoint to another in kilometers.\n      * @param {Parse.GeoPoint} point the other Parse.GeoPoint.\n     * @return {Number}\n     */\n\n  }, {\n    key: \"kilometersTo\",\n    value: function (point\n    /*: ParseGeoPoint*/\n    )\n    /*: number*/\n    {\n      return this.radiansTo(point) * 6371.0;\n    }\n    /**\n     * Returns the distance from this GeoPoint to another in miles.\n      * @param {Parse.GeoPoint} point the other Parse.GeoPoint.\n     * @return {Number}\n     */\n\n  }, {\n    key: \"milesTo\",\n    value: function (point\n    /*: ParseGeoPoint*/\n    )\n    /*: number*/\n    {\n      return this.radiansTo(point) * 3958.8;\n    }\n    /*\n     * Throws an exception if the given lat-long is out of bounds.\n     */\n\n  }, {\n    key: \"latitude\",\n    get: function ()\n    /*: number*/\n    {\n      return this._latitude;\n    },\n    set: function (val\n    /*: number*/\n    ) {\n      ParseGeoPoint._validate(val, this.longitude);\n\n      this._latitude = val;\n    }\n    /**\n     * East-west portion of the coordinate, in range [-180, 180].\n     * Throws if set out of range in a modern browser.\n     * @property longitude\n     * @type Number\n     */\n\n  }, {\n    key: \"longitude\",\n    get: function ()\n    /*: number*/\n    {\n      return this._longitude;\n    },\n    set: function (val\n    /*: number*/\n    ) {\n      ParseGeoPoint._validate(this.latitude, val);\n\n      this._longitude = val;\n    }\n  }], [{\n    key: \"_validate\",\n    value: function (latitude\n    /*: number*/\n    , longitude\n    /*: number*/\n    ) {\n      if (isNaN(latitude) || isNaN(longitude) || typeof latitude !== 'number' || typeof longitude !== 'number') {\n        throw new TypeError('GeoPoint latitude and longitude must be valid numbers');\n      }\n\n      if (latitude < -90.0) {\n        throw new TypeError('GeoPoint latitude out of bounds: ' + latitude + ' < -90.0.');\n      }\n\n      if (latitude > 90.0) {\n        throw new TypeError('GeoPoint latitude out of bounds: ' + latitude + ' > 90.0.');\n      }\n\n      if (longitude < -180.0) {\n        throw new TypeError('GeoPoint longitude out of bounds: ' + longitude + ' < -180.0.');\n      }\n\n      if (longitude > 180.0) {\n        throw new TypeError('GeoPoint longitude out of bounds: ' + longitude + ' > 180.0.');\n      }\n    }\n    /**\n     * Creates a GeoPoint with the user's current location, if available.\n     * Calls options.success with a new GeoPoint instance or calls options.error.\n     * @static\n     */\n\n  }, {\n    key: \"current\",\n    value: function () {\n      return navigator.geolocation.getCurrentPosition(function (location) {\n        return new ParseGeoPoint(location.coords.latitude, location.coords.longitude);\n      });\n    }\n  }]);\n  return ParseGeoPoint;\n}();\n\nvar _default = ParseGeoPoint;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/inherits\"));\n\nvar _ParseObject2 = _interopRequireDefault(require(\"./ParseObject\"));\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n\nvar Installation =\n/*#__PURE__*/\nfunction (_ParseObject) {\n  (0, _inherits2.default)(Installation, _ParseObject);\n\n  function Installation(attributes\n  /*: ?AttributeMap*/\n  ) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Installation);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Installation).call(this, '_Installation'));\n\n    if (attributes && (0, _typeof2.default)(attributes) === 'object') {\n      if (!_this.set(attributes || {})) {\n        throw new Error('Can\\'t create an invalid Session');\n      }\n    }\n\n    return _this;\n  }\n\n  return Installation;\n}(_ParseObject2.default);\n\nexports.default = Installation;\n\n_ParseObject2.default.registerSubclass('_Installation', Installation);","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime-corejs3/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty2 = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\n_Object$defineProperty2(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _map = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/map\"));\n\nvar _find = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/find\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\"));\n\nvar _create = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/create\"));\n\nvar _freeze = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/freeze\"));\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _isArray = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\"));\n\nvar _getIterator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js/get-iterator\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs3/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\n\nvar _concat = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/concat\"));\n\nvar _includes = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/includes\"));\n\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/json/stringify\"));\n\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\n\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\n\nvar _defineProperty3 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _canBeSerialized = _interopRequireDefault(require(\"./canBeSerialized\"));\n\nvar _decode = _interopRequireDefault(require(\"./decode\"));\n\nvar _encode = _interopRequireDefault(require(\"./encode\"));\n\nvar _escape2 = _interopRequireDefault(require(\"./escape\"));\n\nvar _ParseACL = _interopRequireDefault(require(\"./ParseACL\"));\n\nvar _parseDate = _interopRequireDefault(require(\"./parseDate\"));\n\nvar _ParseError = _interopRequireDefault(require(\"./ParseError\"));\n\nvar _ParseFile = _interopRequireDefault(require(\"./ParseFile\"));\n\nvar _promiseUtils = require(\"./promiseUtils\");\n\nvar _LocalDatastoreUtils = require(\"./LocalDatastoreUtils\");\n\nvar _ParseOp = require(\"./ParseOp\");\n\nvar _ParseQuery = _interopRequireDefault(require(\"./ParseQuery\"));\n\nvar _ParseRelation = _interopRequireDefault(require(\"./ParseRelation\"));\n\nvar SingleInstanceStateController = _interopRequireWildcard(require(\"./SingleInstanceStateController\"));\n\nvar _unique = _interopRequireDefault(require(\"./unique\"));\n\nvar UniqueInstanceStateController = _interopRequireWildcard(require(\"./UniqueInstanceStateController\"));\n\nvar _unsavedChildren = _interopRequireDefault(require(\"./unsavedChildren\"));\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n\nvar uuidv4 = require('uuid/v4');\n\nvar DEFAULT_BATCH_SIZE = 20; // Mapping of class names to constructors, so we can populate objects from the\n// server with appropriate subclasses of ParseObject\n\nvar classMap = {}; // Global counter for generating unique Ids for non-single-instance objects\n\nvar objectCount = 0; // On web clients, objects are single-instance: any two objects with the same Id\n// will have the same attributes. However, this may be dangerous default\n// behavior in a server scenario\n\nvar singleInstance = !_CoreManager.default.get('IS_NODE');\n\nif (singleInstance) {\n  _CoreManager.default.setObjectStateController(SingleInstanceStateController);\n} else {\n  _CoreManager.default.setObjectStateController(UniqueInstanceStateController);\n}\n\nfunction getServerUrlPath() {\n  var serverUrl = _CoreManager.default.get('SERVER_URL');\n\n  if (serverUrl[serverUrl.length - 1] !== '/') {\n    serverUrl += '/';\n  }\n\n  var url = serverUrl.replace(/https?:\\/\\//, '');\n  return url.substr((0, _indexOf.default)(url).call(url, '/'));\n}\n/**\n * Creates a new model with defined attributes.\n  *\n  * <p>You won't normally call this method directly.  It is recommended that\n  * you use a subclass of <code>Parse.Object</code> instead, created by calling\n  * <code>extend</code>.</p>\n  *\n  * <p>However, if you don't want to use a subclass, or aren't sure which\n  * subclass is appropriate, you can use this form:<pre>\n  *     var object = new Parse.Object(\"ClassName\");\n  * </pre>\n  * That is basically equivalent to:<pre>\n  *     var MyClass = Parse.Object.extend(\"ClassName\");\n  *     var object = new MyClass();\n  * </pre></p>\n  *\n * @alias Parse.Object\n */\n\n\nvar ParseObject =\n/*#__PURE__*/\nfunction () {\n  /**\n   * @param {String} className The class name for the object\n   * @param {Object} attributes The initial set of data to store in the object.\n   * @param {Object} options The options for this object instance.\n   */\n  function ParseObject(className\n  /*: ?string | { className: string, [attr: string]: mixed }*/\n  , attributes\n  /*:: ?: { [attr: string]: mixed }*/\n  , options\n  /*:: ?: { ignoreValidation: boolean }*/\n  ) {\n    (0, _classCallCheck2.default)(this, ParseObject);\n    (0, _defineProperty3.default)(this, \"id\", void 0);\n    (0, _defineProperty3.default)(this, \"_localId\", void 0);\n    (0, _defineProperty3.default)(this, \"_objCount\", void 0);\n    (0, _defineProperty3.default)(this, \"className\", void 0); // Enable legacy initializers\n\n    if (typeof this.initialize === 'function') {\n      this.initialize.apply(this, arguments);\n    }\n\n    var toSet = null;\n    this._objCount = objectCount++;\n\n    if (typeof className === 'string') {\n      this.className = className;\n\n      if (attributes && (0, _typeof2.default)(attributes) === 'object') {\n        toSet = attributes;\n      }\n    } else if (className && (0, _typeof2.default)(className) === 'object') {\n      this.className = className.className;\n      toSet = {};\n\n      for (var _attr in className) {\n        if (_attr !== 'className') {\n          toSet[_attr] = className[_attr];\n        }\n      }\n\n      if (attributes && (0, _typeof2.default)(attributes) === 'object') {\n        options = attributes;\n      }\n    }\n\n    if (toSet && !this.set(toSet, options)) {\n      throw new Error('Can\\'t create an invalid Parse Object');\n    }\n  }\n  /**\n   * The ID of this object, unique within its class.\n   * @property id\n   * @type String\n   */\n\n\n  (0, _createClass2.default)(ParseObject, [{\n    key: \"_getId\",\n\n    /** Private methods **/\n\n    /**\n     * Returns a local or server Id used uniquely identify this object\n     */\n    value: function ()\n    /*: string*/\n    {\n      if (typeof this.id === 'string') {\n        return this.id;\n      }\n\n      if (typeof this._localId === 'string') {\n        return this._localId;\n      }\n\n      var localId = 'local' + uuidv4();\n      this._localId = localId;\n      return localId;\n    }\n    /**\n     * Returns a unique identifier used to pull data from the State Controller.\n     */\n\n  }, {\n    key: \"_getStateIdentifier\",\n    value: function ()\n    /*: ParseObject | {id: string, className: string}*/\n    {\n      if (singleInstance) {\n        var id = this.id;\n\n        if (!id) {\n          id = this._getId();\n        }\n\n        return {\n          id: id,\n          className: this.className\n        };\n      } else {\n        return this;\n      }\n    }\n  }, {\n    key: \"_getServerData\",\n    value: function ()\n    /*: AttributeMap*/\n    {\n      var stateController = _CoreManager.default.getObjectStateController();\n\n      return stateController.getServerData(this._getStateIdentifier());\n    }\n  }, {\n    key: \"_clearServerData\",\n    value: function () {\n      var serverData = this._getServerData();\n\n      var unset = {};\n\n      for (var _attr2 in serverData) {\n        unset[_attr2] = undefined;\n      }\n\n      var stateController = _CoreManager.default.getObjectStateController();\n\n      stateController.setServerData(this._getStateIdentifier(), unset);\n    }\n  }, {\n    key: \"_getPendingOps\",\n    value: function ()\n    /*: Array<OpsMap>*/\n    {\n      var stateController = _CoreManager.default.getObjectStateController();\n\n      return stateController.getPendingOps(this._getStateIdentifier());\n    }\n    /**\n     * @param {Array<string>} [keysToClear] - if specified, only ops matching\n     * these fields will be cleared\n     */\n\n  }, {\n    key: \"_clearPendingOps\",\n    value: function (keysToClear\n    /*:: ?: Array<string>*/\n    ) {\n      var pending = this._getPendingOps();\n\n      var latest = pending[pending.length - 1];\n      var keys = keysToClear || (0, _keys.default)(latest);\n      (0, _forEach.default)(keys).call(keys, function (key) {\n        delete latest[key];\n      });\n    }\n  }, {\n    key: \"_getDirtyObjectAttributes\",\n    value: function ()\n    /*: AttributeMap*/\n    {\n      var attributes = this.attributes;\n\n      var stateController = _CoreManager.default.getObjectStateController();\n\n      var objectCache = stateController.getObjectCache(this._getStateIdentifier());\n      var dirty = {};\n\n      for (var _attr3 in attributes) {\n        var val = attributes[_attr3];\n\n        if (val && (0, _typeof2.default)(val) === 'object' && !(val instanceof ParseObject) && !(val instanceof _ParseFile.default) && !(val instanceof _ParseRelation.default)) {\n          // Due to the way browsers construct maps, the key order will not change\n          // unless the object is changed\n          try {\n            var json = (0, _encode.default)(val, false, true);\n            var stringified = (0, _stringify.default)(json);\n\n            if (objectCache[_attr3] !== stringified) {\n              dirty[_attr3] = val;\n            }\n          } catch (e) {\n            // Error occurred, possibly by a nested unsaved pointer in a mutable container\n            // No matter how it happened, it indicates a change in the attribute\n            dirty[_attr3] = val;\n          }\n        }\n      }\n\n      return dirty;\n    }\n  }, {\n    key: \"_toFullJSON\",\n    value: function (seen\n    /*:: ?: Array<any>*/\n    )\n    /*: AttributeMap*/\n    {\n      var json\n      /*: { [key: string]: mixed }*/\n      = this.toJSON(seen);\n      json.__type = 'Object';\n      json.className = this.className;\n      return json;\n    }\n  }, {\n    key: \"_getSaveJSON\",\n    value: function ()\n    /*: AttributeMap*/\n    {\n      var pending = this._getPendingOps();\n\n      var dirtyObjects = this._getDirtyObjectAttributes();\n\n      var json = {};\n\n      for (var attr in dirtyObjects) {\n        var isDotNotation = false;\n\n        for (var i = 0; i < pending.length; i += 1) {\n          for (var field in pending[i]) {\n            // Dot notation operations are handled later\n            if ((0, _includes.default)(field).call(field, '.')) {\n              var fieldName = field.split('.')[0];\n\n              if (fieldName === attr) {\n                isDotNotation = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (!isDotNotation) {\n          json[attr] = new _ParseOp.SetOp(dirtyObjects[attr]).toJSON();\n        }\n      }\n\n      for (attr in pending[0]) {\n        json[attr] = pending[0][attr].toJSON();\n      }\n\n      return json;\n    }\n  }, {\n    key: \"_getSaveParams\",\n    value: function ()\n    /*: SaveParams*/\n    {\n      var method = this.id ? 'PUT' : 'POST';\n\n      var body = this._getSaveJSON();\n\n      var path = 'classes/' + this.className;\n\n      if (this.id) {\n        path += '/' + this.id;\n      } else if (this.className === '_User') {\n        path = 'users';\n      }\n\n      return {\n        method: method,\n        body: body,\n        path: path\n      };\n    }\n  }, {\n    key: \"_finishFetch\",\n    value: function (serverData\n    /*: AttributeMap*/\n    ) {\n      if (!this.id && serverData.objectId) {\n        this.id = serverData.objectId;\n      }\n\n      var stateController = _CoreManager.default.getObjectStateController();\n\n      stateController.initializeState(this._getStateIdentifier());\n      var decoded = {};\n\n      for (var _attr4 in serverData) {\n        if (_attr4 === 'ACL') {\n          decoded[_attr4] = new _ParseACL.default(serverData[_attr4]);\n        } else if (_attr4 !== 'objectId') {\n          decoded[_attr4] = (0, _decode.default)(serverData[_attr4]);\n\n          if (decoded[_attr4] instanceof _ParseRelation.default) {\n            decoded[_attr4]._ensureParentAndKey(this, _attr4);\n          }\n        }\n      }\n\n      if (decoded.createdAt && typeof decoded.createdAt === 'string') {\n        decoded.createdAt = (0, _parseDate.default)(decoded.createdAt);\n      }\n\n      if (decoded.updatedAt && typeof decoded.updatedAt === 'string') {\n        decoded.updatedAt = (0, _parseDate.default)(decoded.updatedAt);\n      }\n\n      if (!decoded.updatedAt && decoded.createdAt) {\n        decoded.updatedAt = decoded.createdAt;\n      }\n\n      stateController.commitServerChanges(this._getStateIdentifier(), decoded);\n    }\n  }, {\n    key: \"_setExisted\",\n    value: function (existed\n    /*: boolean*/\n    ) {\n      var stateController = _CoreManager.default.getObjectStateController();\n\n      var state = stateController.getState(this._getStateIdentifier());\n\n      if (state) {\n        state.existed = existed;\n      }\n    }\n  }, {\n    key: \"_migrateId\",\n    value: function (serverId\n    /*: string*/\n    ) {\n      if (this._localId && serverId) {\n        if (singleInstance) {\n          var stateController = _CoreManager.default.getObjectStateController();\n\n          var oldState = stateController.removeState(this._getStateIdentifier());\n          this.id = serverId;\n          delete this._localId;\n\n          if (oldState) {\n            stateController.initializeState(this._getStateIdentifier(), oldState);\n          }\n        } else {\n          this.id = serverId;\n          delete this._localId;\n        }\n      }\n    }\n  }, {\n    key: \"_handleSaveResponse\",\n    value: function (response\n    /*: AttributeMap*/\n    , status\n    /*: number*/\n    ) {\n      var changes = {};\n\n      var stateController = _CoreManager.default.getObjectStateController();\n\n      var pending = stateController.popPendingState(this._getStateIdentifier());\n\n      for (var attr in pending) {\n        if (pending[attr] instanceof _ParseOp.RelationOp) {\n          changes[attr] = pending[attr].applyTo(undefined, this, attr);\n        } else if (!(attr in response)) {\n          // Only SetOps and UnsetOps should not come back with results\n          changes[attr] = pending[attr].applyTo(undefined);\n        }\n      }\n\n      for (attr in response) {\n        if ((attr === 'createdAt' || attr === 'updatedAt') && typeof response[attr] === 'string') {\n          changes[attr] = (0, _parseDate.default)(response[attr]);\n        } else if (attr === 'ACL') {\n          changes[attr] = new _ParseACL.default(response[attr]);\n        } else if (attr !== 'objectId') {\n          changes[attr] = (0, _decode.default)(response[attr]);\n\n          if (changes[attr] instanceof _ParseOp.UnsetOp) {\n            changes[attr] = undefined;\n          }\n        }\n      }\n\n      if (changes.createdAt && !changes.updatedAt) {\n        changes.updatedAt = changes.createdAt;\n      }\n\n      this._migrateId(response.objectId);\n\n      if (status !== 201) {\n        this._setExisted(true);\n      }\n\n      stateController.commitServerChanges(this._getStateIdentifier(), changes);\n    }\n  }, {\n    key: \"_handleSaveError\",\n    value: function () {\n      var stateController = _CoreManager.default.getObjectStateController();\n\n      stateController.mergeFirstPendingState(this._getStateIdentifier());\n    }\n    /** Public methods **/\n\n  }, {\n    key: \"initialize\",\n    value: function () {} // NOOP\n\n    /**\n     * Returns a JSON version of the object suitable for saving to Parse.\n     * @return {Object}\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function (seen\n    /*: Array<any> | void*/\n    )\n    /*: AttributeMap*/\n    {\n      var seenEntry = this.id ? this.className + ':' + this.id : this;\n      seen = seen || [seenEntry];\n      var json = {};\n      var attrs = this.attributes;\n\n      for (var _attr5 in attrs) {\n        if ((_attr5 === 'createdAt' || _attr5 === 'updatedAt') && attrs[_attr5].toJSON) {\n          json[_attr5] = attrs[_attr5].toJSON();\n        } else {\n          json[_attr5] = (0, _encode.default)(attrs[_attr5], false, false, seen);\n        }\n      }\n\n      var pending = this._getPendingOps();\n\n      for (var _attr6 in pending[0]) {\n        json[_attr6] = pending[0][_attr6].toJSON();\n      }\n\n      if (this.id) {\n        json.objectId = this.id;\n      }\n\n      return json;\n    }\n    /**\n     * Determines whether this ParseObject is equal to another ParseObject\n     * @param {Object} other - An other object ot compare\n     * @return {Boolean}\n     */\n\n  }, {\n    key: \"equals\",\n    value: function (other\n    /*: mixed*/\n    )\n    /*: boolean*/\n    {\n      if (this === other) {\n        return true;\n      }\n\n      return other instanceof ParseObject && this.className === other.className && this.id === other.id && typeof this.id !== 'undefined';\n    }\n    /**\n     * Returns true if this object has been modified since its last\n     * save/refresh.  If an attribute is specified, it returns true only if that\n     * particular attribute has been modified since the last save/refresh.\n     * @param {String} attr An attribute name (optional).\n     * @return {Boolean}\n     */\n\n  }, {\n    key: \"dirty\",\n    value: function (attr\n    /*:: ?: string*/\n    )\n    /*: boolean*/\n    {\n      if (!this.id) {\n        return true;\n      }\n\n      var pendingOps = this._getPendingOps();\n\n      var dirtyObjects = this._getDirtyObjectAttributes();\n\n      if (attr) {\n        if (dirtyObjects.hasOwnProperty(attr)) {\n          return true;\n        }\n\n        for (var i = 0; i < pendingOps.length; i++) {\n          if (pendingOps[i].hasOwnProperty(attr)) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n\n      if ((0, _keys.default)(pendingOps[0]).length !== 0) {\n        return true;\n      }\n\n      if ((0, _keys.default)(dirtyObjects).length !== 0) {\n        return true;\n      }\n\n      return false;\n    }\n    /**\n     * Returns an array of keys that have been modified since last save/refresh\n     * @return {String[]}\n     */\n\n  }, {\n    key: \"dirtyKeys\",\n    value: function ()\n    /*: Array<string>*/\n    {\n      var pendingOps = this._getPendingOps();\n\n      var keys = {};\n\n      for (var i = 0; i < pendingOps.length; i++) {\n        for (var _attr7 in pendingOps[i]) {\n          keys[_attr7] = true;\n        }\n      }\n\n      var dirtyObjects = this._getDirtyObjectAttributes();\n\n      for (var _attr8 in dirtyObjects) {\n        keys[_attr8] = true;\n      }\n\n      return (0, _keys.default)(keys);\n    }\n    /**\n     * Returns true if the object has been fetched.\n     * @return {Boolean}\n     */\n\n  }, {\n    key: \"isDataAvailable\",\n    value: function ()\n    /*: boolean*/\n    {\n      var serverData = this._getServerData();\n\n      return !!(0, _keys.default)(serverData).length;\n    }\n    /**\n     * Gets a Pointer referencing this Object.\n     * @return {Pointer}\n     */\n\n  }, {\n    key: \"toPointer\",\n    value: function ()\n    /*: Pointer*/\n    {\n      if (!this.id) {\n        throw new Error('Cannot create a pointer to an unsaved ParseObject');\n      }\n\n      return {\n        __type: 'Pointer',\n        className: this.className,\n        objectId: this.id\n      };\n    }\n    /**\n     * Gets the value of an attribute.\n     * @param {String} attr The string name of an attribute.\n     */\n\n  }, {\n    key: \"get\",\n    value: function (attr\n    /*: string*/\n    )\n    /*: mixed*/\n    {\n      return this.attributes[attr];\n    }\n    /**\n     * Gets a relation on the given class for the attribute.\n     * @param String attr The attribute to get the relation for.\n     * @return {Parse.Relation}\n     */\n\n  }, {\n    key: \"relation\",\n    value: function (attr\n    /*: string*/\n    )\n    /*: ParseRelation*/\n    {\n      var value = this.get(attr);\n\n      if (value) {\n        if (!(value instanceof _ParseRelation.default)) {\n          throw new Error('Called relation() on non-relation field ' + attr);\n        }\n\n        value._ensureParentAndKey(this, attr);\n\n        return value;\n      }\n\n      return new _ParseRelation.default(this, attr);\n    }\n    /**\n     * Gets the HTML-escaped value of an attribute.\n     * @param {String} attr The string name of an attribute.\n     */\n\n  }, {\n    key: \"escape\",\n    value: function (attr\n    /*: string*/\n    )\n    /*: string*/\n    {\n      var val = this.attributes[attr];\n\n      if (val == null) {\n        return '';\n      }\n\n      if (typeof val !== 'string') {\n        if (typeof val.toString !== 'function') {\n          return '';\n        }\n\n        val = val.toString();\n      }\n\n      return (0, _escape2.default)(val);\n    }\n    /**\n     * Returns <code>true</code> if the attribute contains a value that is not\n     * null or undefined.\n     * @param {String} attr The string name of the attribute.\n     * @return {Boolean}\n     */\n\n  }, {\n    key: \"has\",\n    value: function (attr\n    /*: string*/\n    )\n    /*: boolean*/\n    {\n      var attributes = this.attributes;\n\n      if (attributes.hasOwnProperty(attr)) {\n        return attributes[attr] != null;\n      }\n\n      return false;\n    }\n    /**\n     * Sets a hash of model attributes on the object.\n     *\n     * <p>You can call it with an object containing keys and values, with one\n     * key and value, or dot notation.  For example:<pre>\n     *   gameTurn.set({\n     *     player: player1,\n     *     diceRoll: 2\n     *   }, {\n     *     error: function(gameTurnAgain, error) {\n     *       // The set failed validation.\n     *     }\n     *   });\n     *\n     *   game.set(\"currentPlayer\", player2, {\n     *     error: function(gameTurnAgain, error) {\n     *       // The set failed validation.\n     *     }\n     *   });\n     *\n     *   game.set(\"finished\", true);</pre></p>\n     *\n     *   game.set(\"player.score\", 10);</pre></p>\n     *\n     * @param {String} key The key to set.\n     * @param {} value The value to give it.\n     * @param {Object} options A set of options for the set.\n     *     The only supported option is <code>error</code>.\n     * @return {(ParseObject|Boolean)} true if the set succeeded.\n     */\n\n  }, {\n    key: \"set\",\n    value: function (key\n    /*: mixed*/\n    , value\n    /*: mixed*/\n    , options\n    /*:: ?: mixed*/\n    )\n    /*: ParseObject | boolean*/\n    {\n      var changes = {};\n      var newOps = {};\n\n      if (key && (0, _typeof2.default)(key) === 'object') {\n        changes = key;\n        options = value;\n      } else if (typeof key === 'string') {\n        changes[key] = value;\n      } else {\n        return this;\n      }\n\n      options = options || {};\n      var readonly = [];\n\n      if (typeof this.constructor.readOnlyAttributes === 'function') {\n        readonly = (0, _concat.default)(readonly).call(readonly, this.constructor.readOnlyAttributes());\n      }\n\n      for (var k in changes) {\n        if (k === 'createdAt' || k === 'updatedAt') {\n          // This property is read-only, but for legacy reasons we silently\n          // ignore it\n          continue;\n        }\n\n        if ((0, _indexOf.default)(readonly).call(readonly, k) > -1) {\n          throw new Error('Cannot modify readonly attribute: ' + k);\n        }\n\n        if (options.unset) {\n          newOps[k] = new _ParseOp.UnsetOp();\n        } else if (changes[k] instanceof _ParseOp.Op) {\n          newOps[k] = changes[k];\n        } else if (changes[k] && (0, _typeof2.default)(changes[k]) === 'object' && typeof changes[k].__op === 'string') {\n          newOps[k] = (0, _ParseOp.opFromJSON)(changes[k]);\n        } else if (k === 'objectId' || k === 'id') {\n          if (typeof changes[k] === 'string') {\n            this.id = changes[k];\n          }\n        } else if (k === 'ACL' && (0, _typeof2.default)(changes[k]) === 'object' && !(changes[k] instanceof _ParseACL.default)) {\n          newOps[k] = new _ParseOp.SetOp(new _ParseACL.default(changes[k]));\n        } else if (changes[k] instanceof _ParseRelation.default) {\n          var relation = new _ParseRelation.default(this, k);\n          relation.targetClassName = changes[k].targetClassName;\n          newOps[k] = new _ParseOp.SetOp(relation);\n        } else {\n          newOps[k] = new _ParseOp.SetOp(changes[k]);\n        }\n      }\n\n      var currentAttributes = this.attributes; // Only set nested fields if exists\n\n      var serverData = this._getServerData();\n\n      if (typeof key === 'string' && (0, _includes.default)(key).call(key, '.')) {\n        var field = key.split('.')[0];\n\n        if (!serverData[field]) {\n          return this;\n        }\n      } // Calculate new values\n\n\n      var newValues = {};\n\n      for (var _attr9 in newOps) {\n        if (newOps[_attr9] instanceof _ParseOp.RelationOp) {\n          newValues[_attr9] = newOps[_attr9].applyTo(currentAttributes[_attr9], this, _attr9);\n        } else if (!(newOps[_attr9] instanceof _ParseOp.UnsetOp)) {\n          newValues[_attr9] = newOps[_attr9].applyTo(currentAttributes[_attr9]);\n        }\n      } // Validate changes\n\n\n      if (!options.ignoreValidation) {\n        var validation = this.validate(newValues);\n\n        if (validation) {\n          if (typeof options.error === 'function') {\n            options.error(this, validation);\n          }\n\n          return false;\n        }\n      } // Consolidate Ops\n\n\n      var pendingOps = this._getPendingOps();\n\n      var last = pendingOps.length - 1;\n\n      var stateController = _CoreManager.default.getObjectStateController();\n\n      for (var _attr10 in newOps) {\n        var nextOp = newOps[_attr10].mergeWith(pendingOps[last][_attr10]);\n\n        stateController.setPendingOp(this._getStateIdentifier(), _attr10, nextOp);\n      }\n\n      return this;\n    }\n    /**\n     * Remove an attribute from the model. This is a noop if the attribute doesn't\n     * exist.\n     * @param {String} attr The string name of an attribute.\n     * @return {(ParseObject|Boolean)}\n     */\n\n  }, {\n    key: \"unset\",\n    value: function (attr\n    /*: string*/\n    , options\n    /*:: ?: { [opt: string]: mixed }*/\n    )\n    /*: ParseObject | boolean*/\n    {\n      options = options || {};\n      options.unset = true;\n      return this.set(attr, null, options);\n    }\n    /**\n     * Atomically increments the value of the given attribute the next time the\n     * object is saved. If no amount is specified, 1 is used by default.\n     *\n     * @param attr {String} The key.\n     * @param amount {Number} The amount to increment by (optional).\n     * @return {(ParseObject|Boolean)}\n     */\n\n  }, {\n    key: \"increment\",\n    value: function (attr\n    /*: string*/\n    , amount\n    /*:: ?: number*/\n    )\n    /*: ParseObject | boolean*/\n    {\n      if (typeof amount === 'undefined') {\n        amount = 1;\n      }\n\n      if (typeof amount !== 'number') {\n        throw new Error('Cannot increment by a non-numeric amount.');\n      }\n\n      return this.set(attr, new _ParseOp.IncrementOp(amount));\n    }\n    /**\n     * Atomically add an object to the end of the array associated with a given\n     * key.\n     * @param attr {String} The key.\n     * @param item {} The item to add.\n     * @return {(ParseObject|Boolean)}\n     */\n\n  }, {\n    key: \"add\",\n    value: function (attr\n    /*: string*/\n    , item\n    /*: mixed*/\n    )\n    /*: ParseObject | boolean*/\n    {\n      return this.set(attr, new _ParseOp.AddOp([item]));\n    }\n    /**\n     * Atomically add the objects to the end of the array associated with a given\n     * key.\n     * @param attr {String} The key.\n     * @param items {Object[]} The items to add.\n     * @return {(ParseObject|Boolean)}\n     */\n\n  }, {\n    key: \"addAll\",\n    value: function (attr\n    /*: string*/\n    , items\n    /*: Array<mixed>*/\n    )\n    /*: ParseObject | boolean*/\n    {\n      return this.set(attr, new _ParseOp.AddOp(items));\n    }\n    /**\n     * Atomically add an object to the array associated with a given key, only\n     * if it is not already present in the array. The position of the insert is\n     * not guaranteed.\n     *\n     * @param attr {String} The key.\n     * @param item {} The object to add.\n     * @return {(ParseObject|Boolean)}\n     */\n\n  }, {\n    key: \"addUnique\",\n    value: function (attr\n    /*: string*/\n    , item\n    /*: mixed*/\n    )\n    /*: ParseObject | boolean*/\n    {\n      return this.set(attr, new _ParseOp.AddUniqueOp([item]));\n    }\n    /**\n     * Atomically add the objects to the array associated with a given key, only\n     * if it is not already present in the array. The position of the insert is\n     * not guaranteed.\n     *\n     * @param attr {String} The key.\n     * @param items {Object[]} The objects to add.\n     * @return {(ParseObject|Boolean)}\n     */\n\n  }, {\n    key: \"addAllUnique\",\n    value: function (attr\n    /*: string*/\n    , items\n    /*: Array<mixed>*/\n    )\n    /*: ParseObject | boolean*/\n    {\n      return this.set(attr, new _ParseOp.AddUniqueOp(items));\n    }\n    /**\n     * Atomically remove all instances of an object from the array associated\n     * with a given key.\n     *\n     * @param attr {String} The key.\n     * @param item {} The object to remove.\n     * @return {(ParseObject|Boolean)}\n     */\n\n  }, {\n    key: \"remove\",\n    value: function (attr\n    /*: string*/\n    , item\n    /*: mixed*/\n    )\n    /*: ParseObject | boolean*/\n    {\n      return this.set(attr, new _ParseOp.RemoveOp([item]));\n    }\n    /**\n     * Atomically remove all instances of the objects from the array associated\n     * with a given key.\n     *\n     * @param attr {String} The key.\n     * @param items {Object[]} The object to remove.\n     * @return {(ParseObject|Boolean)}\n     */\n\n  }, {\n    key: \"removeAll\",\n    value: function (attr\n    /*: string*/\n    , items\n    /*: Array<mixed>*/\n    )\n    /*: ParseObject | boolean*/\n    {\n      return this.set(attr, new _ParseOp.RemoveOp(items));\n    }\n    /**\n     * Returns an instance of a subclass of Parse.Op describing what kind of\n     * modification has been performed on this field since the last time it was\n     * saved. For example, after calling object.increment(\"x\"), calling\n     * object.op(\"x\") would return an instance of Parse.Op.Increment.\n     *\n     * @param attr {String} The key.\n     * @returns {Parse.Op} The operation, or undefined if none.\n     */\n\n  }, {\n    key: \"op\",\n    value: function (attr\n    /*: string*/\n    )\n    /*: ?Op*/\n    {\n      var pending = this._getPendingOps();\n\n      for (var i = pending.length; i--;) {\n        if (pending[i][attr]) {\n          return pending[i][attr];\n        }\n      }\n    }\n    /**\n     * Creates a new model with identical attributes to this one.\n     * @return {Parse.Object}\n     */\n\n  }, {\n    key: \"clone\",\n    value: function clone()\n    /*: any*/\n    {\n      var clone = new this.constructor();\n\n      if (!clone.className) {\n        clone.className = this.className;\n      }\n\n      var attributes = this.attributes;\n\n      if (typeof this.constructor.readOnlyAttributes === 'function') {\n        var readonly = this.constructor.readOnlyAttributes() || []; // Attributes are frozen, so we have to rebuild an object,\n        // rather than delete readonly keys\n\n        var copy = {};\n\n        for (var a in attributes) {\n          if ((0, _indexOf.default)(readonly).call(readonly, a) < 0) {\n            copy[a] = attributes[a];\n          }\n        }\n\n        attributes = copy;\n      }\n\n      if (clone.set) {\n        clone.set(attributes);\n      }\n\n      return clone;\n    }\n    /**\n     * Creates a new instance of this object. Not to be confused with clone()\n     * @return {Parse.Object}\n     */\n\n  }, {\n    key: \"newInstance\",\n    value: function ()\n    /*: any*/\n    {\n      var clone = new this.constructor();\n\n      if (!clone.className) {\n        clone.className = this.className;\n      }\n\n      clone.id = this.id;\n\n      if (singleInstance) {\n        // Just return an object with the right id\n        return clone;\n      }\n\n      var stateController = _CoreManager.default.getObjectStateController();\n\n      if (stateController) {\n        stateController.duplicateState(this._getStateIdentifier(), clone._getStateIdentifier());\n      }\n\n      return clone;\n    }\n    /**\n     * Returns true if this object has never been saved to Parse.\n     * @return {Boolean}\n     */\n\n  }, {\n    key: \"isNew\",\n    value: function ()\n    /*: boolean*/\n    {\n      return !this.id;\n    }\n    /**\n     * Returns true if this object was created by the Parse server when the\n     * object might have already been there (e.g. in the case of a Facebook\n     * login)\n     * @return {Boolean}\n     */\n\n  }, {\n    key: \"existed\",\n    value: function ()\n    /*: boolean*/\n    {\n      if (!this.id) {\n        return false;\n      }\n\n      var stateController = _CoreManager.default.getObjectStateController();\n\n      var state = stateController.getState(this._getStateIdentifier());\n\n      if (state) {\n        return state.existed;\n      }\n\n      return false;\n    }\n    /**\n     * Returns true if this object exists on the Server\n     *\n     * @param {Object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     * @return {Promise<boolean>} A boolean promise that is fulfilled if object exists.\n     */\n\n  }, {\n    key: \"exists\",\n    value: function () {\n      var _exists = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee(options\n      /*:: ?: RequestOptions*/\n      ) {\n        var query;\n        return _regenerator.default.wrap(function (_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.id) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", false);\n\n              case 2:\n                _context.prev = 2;\n                query = new _ParseQuery.default(this.className);\n                _context.next = 6;\n                return query.get(this.id, options);\n\n              case 6:\n                return _context.abrupt(\"return\", true);\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](2);\n\n                if (!(_context.t0.code === _ParseError.default.OBJECT_NOT_FOUND)) {\n                  _context.next = 13;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", false);\n\n              case 13:\n                throw _context.t0;\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[2, 9]]);\n      }));\n\n      return function () {\n        return _exists.apply(this, arguments);\n      };\n    }()\n    /**\n     * Checks if the model is currently in a valid state.\n     * @return {Boolean}\n     */\n\n  }, {\n    key: \"isValid\",\n    value: function ()\n    /*: boolean*/\n    {\n      return !this.validate(this.attributes);\n    }\n    /**\n     * You should not call this function directly unless you subclass\n     * <code>Parse.Object</code>, in which case you can override this method\n     * to provide additional validation on <code>set</code> and\n     * <code>save</code>.  Your implementation should return\n     *\n     * @param {Object} attrs The current data to validate.\n     * @return {} False if the data is valid.  An error object otherwise.\n     * @see Parse.Object#set\n     */\n\n  }, {\n    key: \"validate\",\n    value: function (attrs\n    /*: AttributeMap*/\n    )\n    /*: ParseError | boolean*/\n    {\n      if (attrs.hasOwnProperty('ACL') && !(attrs.ACL instanceof _ParseACL.default)) {\n        return new _ParseError.default(_ParseError.default.OTHER_CAUSE, 'ACL must be a Parse ACL.');\n      }\n\n      for (var _key in attrs) {\n        if (!/^[A-Za-z][0-9A-Za-z_.]*$/.test(_key)) {\n          return new _ParseError.default(_ParseError.default.INVALID_KEY_NAME);\n        }\n      }\n\n      return false;\n    }\n    /**\n     * Returns the ACL for this object.\n     * @returns {Parse.ACL} An instance of Parse.ACL.\n     * @see Parse.Object#get\n     */\n\n  }, {\n    key: \"getACL\",\n    value: function ()\n    /*: ?ParseACL*/\n    {\n      var acl = this.get('ACL');\n\n      if (acl instanceof _ParseACL.default) {\n        return acl;\n      }\n\n      return null;\n    }\n    /**\n     * Sets the ACL to be used for this object.\n     * @param {Parse.ACL} acl An instance of Parse.ACL.\n     * @param {Object} options\n     * @return {(ParseObject|Boolean)} Whether the set passed validation.\n     * @see Parse.Object#set\n     */\n\n  }, {\n    key: \"setACL\",\n    value: function (acl\n    /*: ParseACL*/\n    , options\n    /*:: ?: mixed*/\n    )\n    /*: ParseObject | boolean*/\n    {\n      return this.set('ACL', acl, options);\n    }\n    /**\n     * Clears any (or specific) changes to this object made since the last call to save()\n     * @param {string} [keys] - specify which fields to revert\n     */\n\n  }, {\n    key: \"revert\",\n    value: function ()\n    /*: void*/\n    {\n      var keysToRevert;\n\n      for (var _len = arguments.length, keys = new Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n        keys[_key2] = arguments[_key2];\n      }\n\n      if (keys.length) {\n        keysToRevert = [];\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = (0, _getIterator2.default)(keys), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _key3 = _step.value;\n\n            if (typeof _key3 === \"string\") {\n              keysToRevert.push(_key3);\n            } else {\n              throw new Error(\"Parse.Object#revert expects either no, or a list of string, arguments.\");\n            }\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      this._clearPendingOps(keysToRevert);\n    }\n    /**\n     * Clears all attributes on a model\n     * @return {(ParseObject | boolean)}\n     */\n\n  }, {\n    key: \"clear\",\n    value: function ()\n    /*: ParseObject | boolean*/\n    {\n      var attributes = this.attributes;\n      var erasable = {};\n      var readonly = ['createdAt', 'updatedAt'];\n\n      if (typeof this.constructor.readOnlyAttributes === 'function') {\n        readonly = (0, _concat.default)(readonly).call(readonly, this.constructor.readOnlyAttributes());\n      }\n\n      for (var _attr11 in attributes) {\n        if ((0, _indexOf.default)(readonly).call(readonly, _attr11) < 0) {\n          erasable[_attr11] = true;\n        }\n      }\n\n      return this.set(erasable, {\n        unset: true\n      });\n    }\n    /**\n     * Fetch the model from the server. If the server's representation of the\n     * model differs from its current attributes, they will be overriden.\n     *\n     * @param {Object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     *   <li>include: The name(s) of the key(s) to include. Can be a string, an array of strings,\n     *       or an array of array of strings.\n     * </ul>\n     * @return {Promise} A promise that is fulfilled when the fetch\n     *     completes.\n     */\n\n  }, {\n    key: \"fetch\",\n    value: function (options\n    /*: RequestOptions*/\n    )\n    /*: Promise*/\n    {\n      options = options || {};\n      var fetchOptions = {};\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        fetchOptions.useMasterKey = options.useMasterKey;\n      }\n\n      if (options.hasOwnProperty('sessionToken')) {\n        fetchOptions.sessionToken = options.sessionToken;\n      }\n\n      if (options.hasOwnProperty('include')) {\n        fetchOptions.include = [];\n\n        if ((0, _isArray.default)(options.include)) {\n          var _context2;\n\n          (0, _forEach.default)(_context2 = options.include).call(_context2, function (key) {\n            if ((0, _isArray.default)(key)) {\n              var _context3;\n\n              fetchOptions.include = (0, _concat.default)(_context3 = fetchOptions.include).call(_context3, key);\n            } else {\n              fetchOptions.include.push(key);\n            }\n          });\n        } else {\n          fetchOptions.include.push(options.include);\n        }\n      }\n\n      var controller = _CoreManager.default.getObjectController();\n\n      return controller.fetch(this, true, fetchOptions);\n    }\n    /**\n     * Fetch the model from the server. If the server's representation of the\n     * model differs from its current attributes, they will be overriden.\n     *\n     * Includes nested Parse.Objects for the provided key. You can use dot\n     * notation to specify which fields in the included object are also fetched.\n     *\n     * @param {String|Array<string|Array<string>>} keys The name(s) of the key(s) to include.\n     * @param {Object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     * @return {Promise} A promise that is fulfilled when the fetch\n     *     completes.\n     */\n\n  }, {\n    key: \"fetchWithInclude\",\n    value: function (keys\n    /*: String|Array<string|Array<string>>*/\n    , options\n    /*: RequestOptions*/\n    )\n    /*: Promise*/\n    {\n      options = options || {};\n      options.include = keys;\n      return this.fetch(options);\n    }\n    /**\n     * Set a hash of model attributes, and save the model to the server.\n     * updatedAt will be updated when the request returns.\n     * You can either call it as:<pre>\n     *   object.save();</pre>\n     * or<pre>\n     *   object.save(attrs);</pre>\n     * or<pre>\n     *   object.save(null, options);</pre>\n     * or<pre>\n     *   object.save(attrs, options);</pre>\n     * or<pre>\n     *   object.save(key, value, options);</pre>\n     *\n     * For example, <pre>\n     *   gameTurn.save({\n     *     player: \"Jake Cutter\",\n     *     diceRoll: 2\n     *   }).then(function(gameTurnAgain) {\n     *     // The save was successful.\n     *   }, function(error) {\n     *     // The save failed.  Error is an instance of Parse.Error.\n     *   });</pre>\n     *\n     * @param {String|Object|null} [attrs]\n     * Valid options are:<ul>\n     *   <li>`Object` - Key/value pairs to update on the object.</li>\n     *   <li>`String` Key - Key of attribute to update (requires arg2 to also be string)</li>\n     *   <li>`null` - Passing null for arg1 allows you to save the object with options passed in arg2.</li>\n     * </ul>\n     *\n     * @param {String|Object} [options]\n     * <ul>\n     *   <li>`String` Value - If arg1 was passed as a key, arg2 is the value that should be set on that key.</li>\n     *   <li>`Object` Options - Valid options are:\n     *     <ul>\n     *       <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *       <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     *       <li>cascadeSave: If `false`, nested objects will not be saved (default is `true`).\n     *     </ul>\n     *   </li>\n     * </ul>\n     *\n     * @param {Object} [options]\n     * Used to pass option parameters to method if arg1 and arg2 were both passed as strings.\n     * Valid options are:\n     * <ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *       be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     *   <li>cascadeSave: If `false`, nested objects will not be saved (default is `true`).\n     * </ul>\n     *\n     * @return {Promise} A promise that is fulfilled when the save\n     *     completes.\n     */\n\n  }, {\n    key: \"save\",\n    value: function (arg1\n    /*: ?string | { [attr: string]: mixed }*/\n    , arg2\n    /*: SaveOptions | mixed*/\n    , arg3\n    /*:: ?: SaveOptions*/\n    )\n    /*: Promise*/\n    {\n      var _this = this;\n\n      var attrs;\n      var options;\n\n      if ((0, _typeof2.default)(arg1) === 'object' || typeof arg1 === 'undefined') {\n        attrs = arg1;\n\n        if ((0, _typeof2.default)(arg2) === 'object') {\n          options = arg2;\n        }\n      } else {\n        attrs = {};\n        attrs[arg1] = arg2;\n        options = arg3;\n      } // TODO: safely remove me\n      // Support save({ success: function() {}, error: function() {} })\n\n\n      if (!options && attrs) {\n        options = {};\n\n        if (typeof attrs.success === 'function') {\n          options.success = attrs.success;\n          delete attrs.success;\n        }\n\n        if (typeof attrs.error === 'function') {\n          options.error = attrs.error;\n          delete attrs.error;\n        }\n      }\n\n      if (attrs) {\n        var validation = this.validate(attrs);\n\n        if (validation) {\n          if (options && typeof options.error === 'function') {\n            options.error(this, validation);\n          }\n\n          return _promise.default.reject(validation);\n        }\n\n        this.set(attrs, options);\n      }\n\n      options = options || {};\n      var saveOptions = {};\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        saveOptions.useMasterKey = !!options.useMasterKey;\n      }\n\n      if (options.hasOwnProperty('sessionToken') && typeof options.sessionToken === 'string') {\n        saveOptions.sessionToken = options.sessionToken;\n      }\n\n      if (options.hasOwnProperty('installationId') && typeof options.installationId === 'string') {\n        saveOptions.installationId = options.installationId;\n      }\n\n      var controller = _CoreManager.default.getObjectController();\n\n      var unsaved = options.cascadeSave !== false ? (0, _unsavedChildren.default)(this) : null;\n      return controller.save(unsaved, saveOptions).then(function () {\n        return controller.save(_this, saveOptions);\n      });\n    }\n    /**\n     * Destroy this model on the server if it was already persisted.\n     *\n     * @param {Object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     * @return {Promise} A promise that is fulfilled when the destroy\n     *     completes.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function (options\n    /*: RequestOptions*/\n    )\n    /*: Promise*/\n    {\n      options = options || {};\n      var destroyOptions = {};\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        destroyOptions.useMasterKey = options.useMasterKey;\n      }\n\n      if (options.hasOwnProperty('sessionToken')) {\n        destroyOptions.sessionToken = options.sessionToken;\n      }\n\n      if (!this.id) {\n        return _promise.default.resolve();\n      }\n\n      return _CoreManager.default.getObjectController().destroy(this, destroyOptions);\n    }\n    /**\n     * Asynchronously stores the object and every object it points to in the local datastore,\n     * recursively, using a default pin name: _default.\n     *\n     * If those other objects have not been fetched from Parse, they will not be stored.\n     * However, if they have changed data, all the changes will be retained.\n     *\n     * <pre>\n     * await object.pin();\n     * </pre>\n     *\n     * To retrieve object:\n     * <code>query.fromLocalDatastore()</code> or <code>query.fromPin()</code>\n     *\n     * @return {Promise} A promise that is fulfilled when the pin completes.\n     */\n\n  }, {\n    key: \"pin\",\n    value: function ()\n    /*: Promise<void>*/\n    {\n      return ParseObject.pinAllWithName(_LocalDatastoreUtils.DEFAULT_PIN, [this]);\n    }\n    /**\n     * Asynchronously removes the object and every object it points to in the local datastore,\n     * recursively, using a default pin name: _default.\n     *\n     * <pre>\n     * await object.unPin();\n     * </pre>\n     *\n     * @return {Promise} A promise that is fulfilled when the unPin completes.\n     */\n\n  }, {\n    key: \"unPin\",\n    value: function ()\n    /*: Promise<void>*/\n    {\n      return ParseObject.unPinAllWithName(_LocalDatastoreUtils.DEFAULT_PIN, [this]);\n    }\n    /**\n     * Asynchronously returns if the object is pinned\n     *\n     * <pre>\n     * const isPinned = await object.isPinned();\n     * </pre>\n     *\n     * @return {Promise<boolean>} A boolean promise that is fulfilled if object is pinned.\n     */\n\n  }, {\n    key: \"isPinned\",\n    value: function () {\n      var _isPinned = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee2() {\n        var localDatastore, objectKey, pin;\n        return _regenerator.default.wrap(function (_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                localDatastore = _CoreManager.default.getLocalDatastore();\n\n                if (localDatastore.isEnabled) {\n                  _context4.next = 3;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", _promise.default.reject('Parse.enableLocalDatastore() must be called first'));\n\n              case 3:\n                objectKey = localDatastore.getKeyForObject(this);\n                _context4.next = 6;\n                return localDatastore.fromPinWithName(objectKey);\n\n              case 6:\n                pin = _context4.sent;\n                return _context4.abrupt(\"return\", pin.length > 0);\n\n              case 8:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function () {\n        return _isPinned.apply(this, arguments);\n      };\n    }()\n    /**\n     * Asynchronously stores the objects and every object they point to in the local datastore, recursively.\n     *\n     * If those other objects have not been fetched from Parse, they will not be stored.\n     * However, if they have changed data, all the changes will be retained.\n     *\n     * <pre>\n     * await object.pinWithName(name);\n     * </pre>\n     *\n     * To retrieve object:\n     * <code>query.fromLocalDatastore()</code> or <code>query.fromPinWithName(name)</code>\n     *\n     * @param {String} name Name of Pin.\n     * @return {Promise} A promise that is fulfilled when the pin completes.\n     */\n\n  }, {\n    key: \"pinWithName\",\n    value: function (name\n    /*: string*/\n    )\n    /*: Promise<void>*/\n    {\n      return ParseObject.pinAllWithName(name, [this]);\n    }\n    /**\n     * Asynchronously removes the object and every object it points to in the local datastore, recursively.\n     *\n     * <pre>\n     * await object.unPinWithName(name);\n     * </pre>\n     *\n     * @param {String} name Name of Pin.\n     * @return {Promise} A promise that is fulfilled when the unPin completes.\n     */\n\n  }, {\n    key: \"unPinWithName\",\n    value: function (name\n    /*: string*/\n    )\n    /*: Promise<void>*/\n    {\n      return ParseObject.unPinAllWithName(name, [this]);\n    }\n    /**\n     * Asynchronously loads data from the local datastore into this object.\n     *\n     * <pre>\n     * await object.fetchFromLocalDatastore();\n     * </pre>\n     *\n     * You can create an unfetched pointer with <code>Parse.Object.createWithoutData()</code>\n     * and then call <code>fetchFromLocalDatastore()</code> on it.\n     *\n     * @return {Promise} A promise that is fulfilled when the fetch completes.\n     */\n\n  }, {\n    key: \"fetchFromLocalDatastore\",\n    value: function () {\n      var _fetchFromLocalDatastore = (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee3() {\n        var localDatastore, objectKey, pinned, result;\n        return _regenerator.default.wrap(function (_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                localDatastore = _CoreManager.default.getLocalDatastore();\n\n                if (localDatastore.isEnabled) {\n                  _context5.next = 3;\n                  break;\n                }\n\n                throw new Error('Parse.enableLocalDatastore() must be called first');\n\n              case 3:\n                objectKey = localDatastore.getKeyForObject(this);\n                _context5.next = 6;\n                return localDatastore._serializeObject(objectKey);\n\n              case 6:\n                pinned = _context5.sent;\n\n                if (pinned) {\n                  _context5.next = 9;\n                  break;\n                }\n\n                throw new Error('Cannot fetch an unsaved ParseObject');\n\n              case 9:\n                result = ParseObject.fromJSON(pinned);\n\n                this._finishFetch(result.toJSON());\n\n                return _context5.abrupt(\"return\", this);\n\n              case 12:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function () {\n        return _fetchFromLocalDatastore.apply(this, arguments);\n      };\n    }()\n    /** Static methods **/\n\n  }, {\n    key: \"attributes\",\n\n    /** Prototype getters / setters **/\n    get: function ()\n    /*: AttributeMap*/\n    {\n      var stateController = _CoreManager.default.getObjectStateController();\n\n      return (0, _freeze.default)(stateController.estimateAttributes(this._getStateIdentifier()));\n    }\n    /**\n     * The first time this object was saved on the server.\n     * @property createdAt\n     * @type Date\n     */\n\n  }, {\n    key: \"createdAt\",\n    get: function ()\n    /*: ?Date*/\n    {\n      return this._getServerData().createdAt;\n    }\n    /**\n     * The last time this object was updated on the server.\n     * @property updatedAt\n     * @type Date\n     */\n\n  }, {\n    key: \"updatedAt\",\n    get: function ()\n    /*: ?Date*/\n    {\n      return this._getServerData().updatedAt;\n    }\n  }], [{\n    key: \"_clearAllState\",\n    value: function () {\n      var stateController = _CoreManager.default.getObjectStateController();\n\n      stateController.clearAllState();\n    }\n    /**\n     * Fetches the given list of Parse.Object.\n     * If any error is encountered, stops and calls the error handler.\n     *\n     * <pre>\n     *   Parse.Object.fetchAll([object1, object2, ...])\n     *    .then((list) => {\n     *      // All the objects were fetched.\n     *    }, (error) => {\n     *      // An error occurred while fetching one of the objects.\n     *    });\n     * </pre>\n     *\n     * @param {Array} list A list of <code>Parse.Object</code>.\n     * @param {Object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     *   <li>include: The name(s) of the key(s) to include. Can be a string, an array of strings,\n     *       or an array of array of strings.\n     * </ul>\n     * @static\n     */\n\n  }, {\n    key: \"fetchAll\",\n    value: function (list\n    /*: Array<ParseObject>*/\n    ) {\n      var options\n      /*: RequestOptions*/\n      = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var queryOptions = {};\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        queryOptions.useMasterKey = options.useMasterKey;\n      }\n\n      if (options.hasOwnProperty('sessionToken')) {\n        queryOptions.sessionToken = options.sessionToken;\n      }\n\n      if (options.hasOwnProperty('include')) {\n        queryOptions.include = ParseObject.handleIncludeOptions(options);\n      }\n\n      return _CoreManager.default.getObjectController().fetch(list, true, queryOptions);\n    }\n    /**\n     * Fetches the given list of Parse.Object.\n     *\n     * Includes nested Parse.Objects for the provided key. You can use dot\n     * notation to specify which fields in the included object are also fetched.\n     *\n     * If any error is encountered, stops and calls the error handler.\n     *\n     * <pre>\n     *   Parse.Object.fetchAllWithInclude([object1, object2, ...], [pointer1, pointer2, ...])\n     *    .then((list) => {\n     *      // All the objects were fetched.\n     *    }, (error) => {\n     *      // An error occurred while fetching one of the objects.\n     *    });\n     * </pre>\n     *\n     * @param {Array} list A list of <code>Parse.Object</code>.\n     * @param {String|Array<string|Array<string>>} keys The name(s) of the key(s) to include.\n     * @param {Object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     * @static\n     */\n\n  }, {\n    key: \"fetchAllWithInclude\",\n    value: function (list\n    /*: Array<ParseObject>*/\n    , keys\n    /*: String|Array<string|Array<string>>*/\n    , options\n    /*: RequestOptions*/\n    ) {\n      options = options || {};\n      options.include = keys;\n      return ParseObject.fetchAll(list, options);\n    }\n    /**\n     * Fetches the given list of Parse.Object if needed.\n     * If any error is encountered, stops and calls the error handler.\n     *\n     * Includes nested Parse.Objects for the provided key. You can use dot\n     * notation to specify which fields in the included object are also fetched.\n     *\n     * If any error is encountered, stops and calls the error handler.\n     *\n     * <pre>\n     *   Parse.Object.fetchAllIfNeededWithInclude([object1, object2, ...], [pointer1, pointer2, ...])\n     *    .then((list) => {\n     *      // All the objects were fetched.\n     *    }, (error) => {\n     *      // An error occurred while fetching one of the objects.\n     *    });\n     * </pre>\n     *\n     * @param {Array} list A list of <code>Parse.Object</code>.\n     * @param {String|Array<string|Array<string>>} keys The name(s) of the key(s) to include.\n     * @param {Object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     * </ul>\n     * @static\n     */\n\n  }, {\n    key: \"fetchAllIfNeededWithInclude\",\n    value: function (list\n    /*: Array<ParseObject>*/\n    , keys\n    /*: String|Array<string|Array<string>>*/\n    , options\n    /*: RequestOptions*/\n    ) {\n      options = options || {};\n      options.include = keys;\n      return ParseObject.fetchAllIfNeeded(list, options);\n    }\n    /**\n     * Fetches the given list of Parse.Object if needed.\n     * If any error is encountered, stops and calls the error handler.\n     *\n     * <pre>\n     *   Parse.Object.fetchAllIfNeeded([object1, ...])\n     *    .then((list) => {\n     *      // Objects were fetched and updated.\n     *    }, (error) => {\n     *      // An error occurred while fetching one of the objects.\n     *    });\n     * </pre>\n     *\n     * @param {Array} list A list of <code>Parse.Object</code>.\n     * @param {Object} options\n     * @static\n     */\n\n  }, {\n    key: \"fetchAllIfNeeded\",\n    value: function (list\n    /*: Array<ParseObject>*/\n    , options) {\n      options = options || {};\n      var queryOptions = {};\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        queryOptions.useMasterKey = options.useMasterKey;\n      }\n\n      if (options.hasOwnProperty('sessionToken')) {\n        queryOptions.sessionToken = options.sessionToken;\n      }\n\n      if (options.hasOwnProperty('include')) {\n        queryOptions.include = ParseObject.handleIncludeOptions(options);\n      }\n\n      return _CoreManager.default.getObjectController().fetch(list, false, queryOptions);\n    }\n  }, {\n    key: \"handleIncludeOptions\",\n    value: function (options) {\n      var include = [];\n\n      if ((0, _isArray.default)(options.include)) {\n        var _context6;\n\n        (0, _forEach.default)(_context6 = options.include).call(_context6, function (key) {\n          if ((0, _isArray.default)(key)) {\n            include = (0, _concat.default)(include).call(include, key);\n          } else {\n            include.push(key);\n          }\n        });\n      } else {\n        include.push(options.include);\n      }\n\n      return include;\n    }\n    /**\n     * Destroy the given list of models on the server if it was already persisted.\n     *\n     * <p>Unlike saveAll, if an error occurs while deleting an individual model,\n     * this method will continue trying to delete the rest of the models if\n     * possible, except in the case of a fatal error like a connection error.\n     *\n     * <p>In particular, the Parse.Error object returned in the case of error may\n     * be one of two types:\n     *\n     * <ul>\n     *   <li>A Parse.Error.AGGREGATE_ERROR. This object's \"errors\" property is an\n     *       array of other Parse.Error objects. Each error object in this array\n     *       has an \"object\" property that references the object that could not be\n     *       deleted (for instance, because that object could not be found).</li>\n     *   <li>A non-aggregate Parse.Error. This indicates a serious error that\n     *       caused the delete operation to be aborted partway through (for\n     *       instance, a connection failure in the middle of the delete).</li>\n     * </ul>\n     *\n     * <pre>\n     *   Parse.Object.destroyAll([object1, object2, ...])\n     *    .then((list) => {\n     *      // All the objects were deleted.\n     *    }, (error) => {\n     *      // An error occurred while deleting one or more of the objects.\n     *      // If this is an aggregate error, then we can inspect each error\n     *      // object individually to determine the reason why a particular\n     *      // object was not deleted.\n     *      if (error.code === Parse.Error.AGGREGATE_ERROR) {\n     *        for (var i = 0; i < error.errors.length; i++) {\n     *          console.log(\"Couldn't delete \" + error.errors[i].object.id +\n     *            \"due to \" + error.errors[i].message);\n     *        }\n     *      } else {\n     *        console.log(\"Delete aborted because of \" + error.message);\n     *      }\n     *   });\n     * </pre>\n     *\n     * @param {Array} list A list of <code>Parse.Object</code>.\n     * @param {Object} options\n     * @static\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     *   <li>batchSize: Number of objects to process per request\n     * </ul>\n     * @return {Promise} A promise that is fulfilled when the destroyAll\n     *     completes.\n     */\n\n  }, {\n    key: \"destroyAll\",\n    value: function (list\n    /*: Array<ParseObject>*/\n    ) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var destroyOptions = {};\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        destroyOptions.useMasterKey = options.useMasterKey;\n      }\n\n      if (options.hasOwnProperty('sessionToken')) {\n        destroyOptions.sessionToken = options.sessionToken;\n      }\n\n      if (options.hasOwnProperty('batchSize') && typeof options.batchSize === 'number') {\n        destroyOptions.batchSize = options.batchSize;\n      }\n\n      return _CoreManager.default.getObjectController().destroy(list, destroyOptions);\n    }\n    /**\n     * Saves the given list of Parse.Object.\n     * If any error is encountered, stops and calls the error handler.\n     *\n     * <pre>\n     *   Parse.Object.saveAll([object1, object2, ...])\n     *    .then((list) => {\n     *       // All the objects were saved.\n     *    }, (error) => {\n     *       // An error occurred while saving one of the objects.\n     *    });\n     * </pre>\n     *\n     * @param {Array} list A list of <code>Parse.Object</code>.\n     * @param {Object} options\n     * @static\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *       behalf of a specific user.\n     *   <li>batchSize: Number of objects to process per request\n     * </ul>\n     */\n\n  }, {\n    key: \"saveAll\",\n    value: function (list\n    /*: Array<ParseObject>*/\n    ) {\n      var options\n      /*: RequestOptions*/\n      = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var saveOptions = {};\n\n      if (options.hasOwnProperty('useMasterKey')) {\n        saveOptions.useMasterKey = options.useMasterKey;\n      }\n\n      if (options.hasOwnProperty('sessionToken')) {\n        saveOptions.sessionToken = options.sessionToken;\n      }\n\n      if (options.hasOwnProperty('batchSize') && typeof options.batchSize === 'number') {\n        saveOptions.batchSize = options.batchSize;\n      }\n\n      return _CoreManager.default.getObjectController().save(list, saveOptions);\n    }\n    /**\n     * Creates a reference to a subclass of Parse.Object with the given id. This\n     * does not exist on Parse.Object, only on subclasses.\n     *\n     * <p>A shortcut for: <pre>\n     *  var Foo = Parse.Object.extend(\"Foo\");\n     *  var pointerToFoo = new Foo();\n     *  pointerToFoo.id = \"myObjectId\";\n     * </pre>\n     *\n     * @param {String} id The ID of the object to create a reference to.\n     * @static\n     * @return {Parse.Object} A Parse.Object reference.\n     */\n\n  }, {\n    key: \"createWithoutData\",\n    value: function (id\n    /*: string*/\n    ) {\n      var obj = new this();\n      obj.id = id;\n      return obj;\n    }\n    /**\n     * Creates a new instance of a Parse Object from a JSON representation.\n     * @param {Object} json The JSON map of the Object's data\n     * @param {boolean} override In single instance mode, all old server data\n     *   is overwritten if this is set to true\n     * @static\n     * @return {Parse.Object} A Parse.Object reference\n     */\n\n  }, {\n    key: \"fromJSON\",\n    value: function (json\n    /*: any*/\n    , override\n    /*:: ?: boolean*/\n    ) {\n      if (!json.className) {\n        throw new Error('Cannot create an object without a className');\n      }\n\n      var constructor = classMap[json.className];\n      var o = constructor ? new constructor() : new ParseObject(json.className);\n      var otherAttributes = {};\n\n      for (var _attr12 in json) {\n        if (_attr12 !== 'className' && _attr12 !== '__type') {\n          otherAttributes[_attr12] = json[_attr12];\n        }\n      }\n\n      if (override) {\n        // id needs to be set before clearServerData can work\n        if (otherAttributes.objectId) {\n          o.id = otherAttributes.objectId;\n        }\n\n        var preserved = null;\n\n        if (typeof o._preserveFieldsOnFetch === 'function') {\n          preserved = o._preserveFieldsOnFetch();\n        }\n\n        o._clearServerData();\n\n        if (preserved) {\n          o._finishFetch(preserved);\n        }\n      }\n\n      o._finishFetch(otherAttributes);\n\n      if (json.objectId) {\n        o._setExisted(true);\n      }\n\n      return o;\n    }\n    /**\n     * Registers a subclass of Parse.Object with a specific class name.\n     * When objects of that class are retrieved from a query, they will be\n     * instantiated with this subclass.\n     * This is only necessary when using ES6 subclassing.\n     * @param {String} className The class name of the subclass\n     * @param {Class} constructor The subclass\n     */\n\n  }, {\n    key: \"registerSubclass\",\n    value: function (className\n    /*: string*/\n    , constructor\n    /*: any*/\n    ) {\n      if (typeof className !== 'string') {\n        throw new TypeError('The first argument must be a valid class name.');\n      }\n\n      if (typeof constructor === 'undefined') {\n        throw new TypeError('You must supply a subclass constructor.');\n      }\n\n      if (typeof constructor !== 'function') {\n        throw new TypeError('You must register the subclass constructor. ' + 'Did you attempt to register an instance of the subclass?');\n      }\n\n      classMap[className] = constructor;\n\n      if (!constructor.className) {\n        constructor.className = className;\n      }\n    }\n    /**\n     * Creates a new subclass of Parse.Object for the given Parse class name.\n     *\n     * <p>Every extension of a Parse class will inherit from the most recent\n     * previous extension of that class. When a Parse.Object is automatically\n     * created by parsing JSON, it will use the most recent extension of that\n     * class.</p>\n     *\n     * <p>You should call either:<pre>\n     *     var MyClass = Parse.Object.extend(\"MyClass\", {\n     *         <i>Instance methods</i>,\n     *         initialize: function(attrs, options) {\n     *             this.someInstanceProperty = [],\n     *             <i>Other instance properties</i>\n     *         }\n     *     }, {\n     *         <i>Class properties</i>\n     *     });</pre>\n     * or, for Backbone compatibility:<pre>\n     *     var MyClass = Parse.Object.extend({\n     *         className: \"MyClass\",\n     *         <i>Instance methods</i>,\n     *         initialize: function(attrs, options) {\n     *             this.someInstanceProperty = [],\n     *             <i>Other instance properties</i>\n     *         }\n     *     }, {\n     *         <i>Class properties</i>\n     *     });</pre></p>\n     *\n     * @param {String} className The name of the Parse class backing this model.\n     * @param {Object} protoProps Instance properties to add to instances of the\n     *     class returned from this method.\n     * @param {Object} classProps Class properties to add the class returned from\n     *     this method.\n     * @return {Class} A new subclass of Parse.Object.\n     */\n\n  }, {\n    key: \"extend\",\n    value: function (className\n    /*: any*/\n    , protoProps\n    /*: any*/\n    , classProps\n    /*: any*/\n    ) {\n      if (typeof className !== 'string') {\n        if (className && typeof className.className === 'string') {\n          return ParseObject.extend(className.className, className, protoProps);\n        } else {\n          throw new Error('Parse.Object.extend\\'s first argument should be the className.');\n        }\n      }\n\n      var adjustedClassName = className;\n\n      if (adjustedClassName === 'User' && _CoreManager.default.get('PERFORM_USER_REWRITE')) {\n        adjustedClassName = '_User';\n      }\n\n      var parentProto = ParseObject.prototype;\n\n      if (this.hasOwnProperty('__super__') && this.__super__) {\n        parentProto = this.prototype;\n      } else if (classMap[adjustedClassName]) {\n        parentProto = classMap[adjustedClassName].prototype;\n      }\n\n      var ParseObjectSubclass = function (attributes, options) {\n        this.className = adjustedClassName;\n        this._objCount = objectCount++; // Enable legacy initializers\n\n        if (typeof this.initialize === 'function') {\n          this.initialize.apply(this, arguments);\n        }\n\n        if (attributes && (0, _typeof2.default)(attributes) === 'object') {\n          if (!this.set(attributes || {}, options)) {\n            throw new Error('Can\\'t create an invalid Parse Object');\n          }\n        }\n      };\n\n      ParseObjectSubclass.className = adjustedClassName;\n      ParseObjectSubclass.__super__ = parentProto;\n      ParseObjectSubclass.prototype = (0, _create.default)(parentProto, {\n        constructor: {\n          value: ParseObjectSubclass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n\n      if (protoProps) {\n        for (var prop in protoProps) {\n          if (prop !== 'className') {\n            (0, _defineProperty2.default)(ParseObjectSubclass.prototype, prop, {\n              value: protoProps[prop],\n              enumerable: false,\n              writable: true,\n              configurable: true\n            });\n          }\n        }\n      }\n\n      if (classProps) {\n        for (var _prop in classProps) {\n          if (_prop !== 'className') {\n            (0, _defineProperty2.default)(ParseObjectSubclass, _prop, {\n              value: classProps[_prop],\n              enumerable: false,\n              writable: true,\n              configurable: true\n            });\n          }\n        }\n      }\n\n      ParseObjectSubclass.extend = function (name, protoProps, classProps) {\n        if (typeof name === 'string') {\n          return ParseObject.extend.call(ParseObjectSubclass, name, protoProps, classProps);\n        }\n\n        return ParseObject.extend.call(ParseObjectSubclass, adjustedClassName, name, protoProps);\n      };\n\n      ParseObjectSubclass.createWithoutData = ParseObject.createWithoutData;\n      classMap[adjustedClassName] = ParseObjectSubclass;\n      return ParseObjectSubclass;\n    }\n    /**\n     * Enable single instance objects, where any local objects with the same Id\n     * share the same attributes, and stay synchronized with each other.\n     * This is disabled by default in server environments, since it can lead to\n     * security issues.\n     * @static\n     */\n\n  }, {\n    key: \"enableSingleInstance\",\n    value: function () {\n      singleInstance = true;\n\n      _CoreManager.default.setObjectStateController(SingleInstanceStateController);\n    }\n    /**\n     * Disable single instance objects, where any local objects with the same Id\n     * share the same attributes, and stay synchronized with each other.\n     * When disabled, you can have two instances of the same object in memory\n     * without them sharing attributes.\n     * @static\n     */\n\n  }, {\n    key: \"disableSingleInstance\",\n    value: function () {\n      singleInstance = false;\n\n      _CoreManager.default.setObjectStateController(UniqueInstanceStateController);\n    }\n    /**\n     * Asynchronously stores the objects and every object they point to in the local datastore,\n     * recursively, using a default pin name: _default.\n     *\n     * If those other objects have not been fetched from Parse, they will not be stored.\n     * However, if they have changed data, all the changes will be retained.\n     *\n     * <pre>\n     * await Parse.Object.pinAll([...]);\n     * </pre>\n     *\n     * To retrieve object:\n     * <code>query.fromLocalDatastore()</code> or <code>query.fromPin()</code>\n     *\n     * @param {Array} objects A list of <code>Parse.Object</code>.\n     * @return {Promise} A promise that is fulfilled when the pin completes.\n     * @static\n     */\n\n  }, {\n    key: \"pinAll\",\n    value: function (objects\n    /*: Array<ParseObject>*/\n    )\n    /*: Promise<void>*/\n    {\n      var localDatastore = _CoreManager.default.getLocalDatastore();\n\n      if (!localDatastore.isEnabled) {\n        return _promise.default.reject('Parse.enableLocalDatastore() must be called first');\n      }\n\n      return ParseObject.pinAllWithName(_LocalDatastoreUtils.DEFAULT_PIN, objects);\n    }\n    /**\n     * Asynchronously stores the objects and every object they point to in the local datastore, recursively.\n     *\n     * If those other objects have not been fetched from Parse, they will not be stored.\n     * However, if they have changed data, all the changes will be retained.\n     *\n     * <pre>\n     * await Parse.Object.pinAllWithName(name, [obj1, obj2, ...]);\n     * </pre>\n     *\n     * To retrieve object:\n     * <code>query.fromLocalDatastore()</code> or <code>query.fromPinWithName(name)</code>\n     *\n     * @param {String} name Name of Pin.\n     * @param {Array} objects A list of <code>Parse.Object</code>.\n     * @return {Promise} A promise that is fulfilled when the pin completes.\n     * @static\n     */\n\n  }, {\n    key: \"pinAllWithName\",\n    value: function (name\n    /*: string*/\n    , objects\n    /*: Array<ParseObject>*/\n    )\n    /*: Promise<void>*/\n    {\n      var localDatastore = _CoreManager.default.getLocalDatastore();\n\n      if (!localDatastore.isEnabled) {\n        return _promise.default.reject('Parse.enableLocalDatastore() must be called first');\n      }\n\n      return localDatastore._handlePinAllWithName(name, objects);\n    }\n    /**\n     * Asynchronously removes the objects and every object they point to in the local datastore,\n     * recursively, using a default pin name: _default.\n     *\n     * <pre>\n     * await Parse.Object.unPinAll([...]);\n     * </pre>\n     *\n     * @param {Array} objects A list of <code>Parse.Object</code>.\n     * @return {Promise} A promise that is fulfilled when the unPin completes.\n     * @static\n     */\n\n  }, {\n    key: \"unPinAll\",\n    value: function (objects\n    /*: Array<ParseObject>*/\n    )\n    /*: Promise<void>*/\n    {\n      var localDatastore = _CoreManager.default.getLocalDatastore();\n\n      if (!localDatastore.isEnabled) {\n        return _promise.default.reject('Parse.enableLocalDatastore() must be called first');\n      }\n\n      return ParseObject.unPinAllWithName(_LocalDatastoreUtils.DEFAULT_PIN, objects);\n    }\n    /**\n     * Asynchronously removes the objects and every object they point to in the local datastore, recursively.\n     *\n     * <pre>\n     * await Parse.Object.unPinAllWithName(name, [obj1, obj2, ...]);\n     * </pre>\n     *\n     * @param {String} name Name of Pin.\n     * @param {Array} objects A list of <code>Parse.Object</code>.\n     * @return {Promise} A promise that is fulfilled when the unPin completes.\n     * @static\n     */\n\n  }, {\n    key: \"unPinAllWithName\",\n    value: function (name\n    /*: string*/\n    , objects\n    /*: Array<ParseObject>*/\n    )\n    /*: Promise<void>*/\n    {\n      var localDatastore = _CoreManager.default.getLocalDatastore();\n\n      if (!localDatastore.isEnabled) {\n        return _promise.default.reject('Parse.enableLocalDatastore() must be called first');\n      }\n\n      return localDatastore._handleUnPinAllWithName(name, objects);\n    }\n    /**\n     * Asynchronously removes all objects in the local datastore using a default pin name: _default.\n     *\n     * <pre>\n     * await Parse.Object.unPinAllObjects();\n     * </pre>\n     *\n     * @return {Promise} A promise that is fulfilled when the unPin completes.\n     * @static\n     */\n\n  }, {\n    key: \"unPinAllObjects\",\n    value: function ()\n    /*: Promise<void>*/\n    {\n      var localDatastore = _CoreManager.default.getLocalDatastore();\n\n      if (!localDatastore.isEnabled) {\n        return _promise.default.reject('Parse.enableLocalDatastore() must be called first');\n      }\n\n      return localDatastore.unPinWithName(_LocalDatastoreUtils.DEFAULT_PIN);\n    }\n    /**\n     * Asynchronously removes all objects with the specified pin name.\n     * Deletes the pin name also.\n     *\n     * <pre>\n     * await Parse.Object.unPinAllObjectsWithName(name);\n     * </pre>\n     *\n     * @param {String} name Name of Pin.\n     * @return {Promise} A promise that is fulfilled when the unPin completes.\n     * @static\n     */\n\n  }, {\n    key: \"unPinAllObjectsWithName\",\n    value: function (name\n    /*: string*/\n    )\n    /*: Promise<void>*/\n    {\n      var localDatastore = _CoreManager.default.getLocalDatastore();\n\n      if (!localDatastore.isEnabled) {\n        return _promise.default.reject('Parse.enableLocalDatastore() must be called first');\n      }\n\n      return localDatastore.unPinWithName(_LocalDatastoreUtils.PIN_PREFIX + name);\n    }\n  }]);\n  return ParseObject;\n}();\n\nvar DefaultController = {\n  fetch: function (target\n  /*: ParseObject | Array<ParseObject>*/\n  , forceFetch\n  /*: boolean*/\n  , options\n  /*: RequestOptions*/\n  )\n  /*: Promise<Array<void> | ParseObject>*/\n  {\n    var localDatastore = _CoreManager.default.getLocalDatastore();\n\n    if ((0, _isArray.default)(target)) {\n      if (target.length < 1) {\n        return _promise.default.resolve([]);\n      }\n\n      var objs = [];\n      var ids = [];\n      var className = null;\n      var results = [];\n      var error = null;\n      (0, _forEach.default)(target).call(target, function (el) {\n        if (error) {\n          return;\n        }\n\n        if (!className) {\n          className = el.className;\n        }\n\n        if (className !== el.className) {\n          error = new _ParseError.default(_ParseError.default.INVALID_CLASS_NAME, 'All objects should be of the same class');\n        }\n\n        if (!el.id) {\n          error = new _ParseError.default(_ParseError.default.MISSING_OBJECT_ID, 'All objects must have an ID');\n        }\n\n        if (forceFetch || !el.isDataAvailable()) {\n          ids.push(el.id);\n          objs.push(el);\n        }\n\n        results.push(el);\n      });\n\n      if (error) {\n        return _promise.default.reject(error);\n      }\n\n      var query = new _ParseQuery.default(className);\n      query.containedIn('objectId', ids);\n\n      if (options && options.include) {\n        query.include(options.include);\n      }\n\n      query._limit = ids.length;\n      return (0, _find.default)(query).call(query, options).then(\n      /*#__PURE__*/\n      function () {\n        var _ref = (0, _asyncToGenerator2.default)(\n        /*#__PURE__*/\n        _regenerator.default.mark(function _callee4(objects) {\n          var idMap, i, obj, _i, _obj, id, _iteratorNormalCompletion2, _didIteratorError2, _iteratorError2, _iterator2, _step2, object;\n\n          return _regenerator.default.wrap(function (_context7) {\n            while (1) {\n              switch (_context7.prev = _context7.next) {\n                case 0:\n                  idMap = {};\n                  (0, _forEach.default)(objects).call(objects, function (o) {\n                    idMap[o.id] = o;\n                  });\n                  i = 0;\n\n                case 3:\n                  if (!(i < objs.length)) {\n                    _context7.next = 11;\n                    break;\n                  }\n\n                  obj = objs[i];\n\n                  if (!(!obj || !obj.id || !idMap[obj.id])) {\n                    _context7.next = 8;\n                    break;\n                  }\n\n                  if (!forceFetch) {\n                    _context7.next = 8;\n                    break;\n                  }\n\n                  return _context7.abrupt(\"return\", _promise.default.reject(new _ParseError.default(_ParseError.default.OBJECT_NOT_FOUND, 'All objects must exist on the server.')));\n\n                case 8:\n                  i++;\n                  _context7.next = 3;\n                  break;\n\n                case 11:\n                  if (!singleInstance) {\n                    // If single instance objects are disabled, we need to replace the\n                    for (_i = 0; _i < results.length; _i++) {\n                      _obj = results[_i];\n\n                      if (_obj && _obj.id && idMap[_obj.id]) {\n                        id = _obj.id;\n\n                        _obj._finishFetch(idMap[id].toJSON());\n\n                        results[_i] = idMap[id];\n                      }\n                    }\n                  }\n\n                  _iteratorNormalCompletion2 = true;\n                  _didIteratorError2 = false;\n                  _iteratorError2 = undefined;\n                  _context7.prev = 15;\n                  _iterator2 = (0, _getIterator2.default)(results);\n\n                case 17:\n                  if (_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done) {\n                    _context7.next = 24;\n                    break;\n                  }\n\n                  object = _step2.value;\n                  _context7.next = 21;\n                  return localDatastore._updateObjectIfPinned(object);\n\n                case 21:\n                  _iteratorNormalCompletion2 = true;\n                  _context7.next = 17;\n                  break;\n\n                case 24:\n                  _context7.next = 30;\n                  break;\n\n                case 26:\n                  _context7.prev = 26;\n                  _context7.t0 = _context7[\"catch\"](15);\n                  _didIteratorError2 = true;\n                  _iteratorError2 = _context7.t0;\n\n                case 30:\n                  _context7.prev = 30;\n                  _context7.prev = 31;\n\n                  if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                    _iterator2.return();\n                  }\n\n                case 33:\n                  _context7.prev = 33;\n\n                  if (!_didIteratorError2) {\n                    _context7.next = 36;\n                    break;\n                  }\n\n                  throw _iteratorError2;\n\n                case 36:\n                  return _context7.finish(33);\n\n                case 37:\n                  return _context7.finish(30);\n\n                case 38:\n                  return _context7.abrupt(\"return\", _promise.default.resolve(results));\n\n                case 39:\n                case \"end\":\n                  return _context7.stop();\n              }\n            }\n          }, _callee4, null, [[15, 26, 30, 38], [31,, 33, 37]]);\n        }));\n\n        return function () {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    } else {\n      var RESTController = _CoreManager.default.getRESTController();\n\n      var params = {};\n\n      if (options && options.include) {\n        params.include = options.include.join();\n      }\n\n      return RESTController.request('GET', 'classes/' + target.className + '/' + target._getId(), params, options).then(\n      /*#__PURE__*/\n      function () {\n        var _ref2 = (0, _asyncToGenerator2.default)(\n        /*#__PURE__*/\n        _regenerator.default.mark(function _callee5(response) {\n          return _regenerator.default.wrap(function (_context8) {\n            while (1) {\n              switch (_context8.prev = _context8.next) {\n                case 0:\n                  if (target instanceof ParseObject) {\n                    target._clearPendingOps();\n\n                    target._clearServerData();\n\n                    target._finishFetch(response);\n                  }\n\n                  _context8.next = 3;\n                  return localDatastore._updateObjectIfPinned(target);\n\n                case 3:\n                  return _context8.abrupt(\"return\", target);\n\n                case 4:\n                case \"end\":\n                  return _context8.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function () {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    }\n  },\n  destroy: function () {\n    var _destroy = (0, _asyncToGenerator2.default)(\n    /*#__PURE__*/\n    _regenerator.default.mark(function _callee8(target\n    /*: ParseObject | Array<ParseObject>*/\n    , options\n    /*: RequestOptions*/\n    ) {\n      var batchSize, localDatastore, RESTController, batches, deleteCompleted, errors;\n      return _regenerator.default.wrap(function (_context11) {\n        while (1) {\n          switch (_context11.prev = _context11.next) {\n            case 0:\n              batchSize = options && options.batchSize ? options.batchSize : DEFAULT_BATCH_SIZE;\n              localDatastore = _CoreManager.default.getLocalDatastore();\n              RESTController = _CoreManager.default.getRESTController();\n\n              if (!(0, _isArray.default)(target)) {\n                _context11.next = 15;\n                break;\n              }\n\n              if (!(target.length < 1)) {\n                _context11.next = 6;\n                break;\n              }\n\n              return _context11.abrupt(\"return\", _promise.default.resolve([]));\n\n            case 6:\n              batches = [[]];\n              (0, _forEach.default)(target).call(target, function (obj) {\n                if (!obj.id) {\n                  return;\n                }\n\n                batches[batches.length - 1].push(obj);\n\n                if (batches[batches.length - 1].length >= batchSize) {\n                  batches.push([]);\n                }\n              });\n\n              if (batches[batches.length - 1].length === 0) {\n                // If the last batch is empty, remove it\n                batches.pop();\n              }\n\n              deleteCompleted = _promise.default.resolve();\n              errors = [];\n              (0, _forEach.default)(batches).call(batches, function (batch) {\n                deleteCompleted = deleteCompleted.then(function () {\n                  return RESTController.request('POST', 'batch', {\n                    requests: (0, _map.default)(batch).call(batch, function (obj) {\n                      return {\n                        method: 'DELETE',\n                        path: getServerUrlPath() + 'classes/' + obj.className + '/' + obj._getId(),\n                        body: {}\n                      };\n                    })\n                  }, options).then(function (results) {\n                    for (var i = 0; i < results.length; i++) {\n                      if (results[i] && results[i].hasOwnProperty('error')) {\n                        var err = new _ParseError.default(results[i].error.code, results[i].error.error);\n                        err.object = batch[i];\n                        errors.push(err);\n                      }\n                    }\n                  });\n                });\n              });\n              return _context11.abrupt(\"return\", deleteCompleted.then(\n              /*#__PURE__*/\n              (0, _asyncToGenerator2.default)(\n              /*#__PURE__*/\n              _regenerator.default.mark(function _callee6() {\n                var aggregate, _iteratorNormalCompletion3, _didIteratorError3, _iteratorError3, _iterator3, _step3, object;\n\n                return _regenerator.default.wrap(function (_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        if (!errors.length) {\n                          _context9.next = 4;\n                          break;\n                        }\n\n                        aggregate = new _ParseError.default(_ParseError.default.AGGREGATE_ERROR);\n                        aggregate.errors = errors;\n                        return _context9.abrupt(\"return\", _promise.default.reject(aggregate));\n\n                      case 4:\n                        _iteratorNormalCompletion3 = true;\n                        _didIteratorError3 = false;\n                        _iteratorError3 = undefined;\n                        _context9.prev = 7;\n                        _iterator3 = (0, _getIterator2.default)(target);\n\n                      case 9:\n                        if (_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done) {\n                          _context9.next = 16;\n                          break;\n                        }\n\n                        object = _step3.value;\n                        _context9.next = 13;\n                        return localDatastore._destroyObjectIfPinned(object);\n\n                      case 13:\n                        _iteratorNormalCompletion3 = true;\n                        _context9.next = 9;\n                        break;\n\n                      case 16:\n                        _context9.next = 22;\n                        break;\n\n                      case 18:\n                        _context9.prev = 18;\n                        _context9.t0 = _context9[\"catch\"](7);\n                        _didIteratorError3 = true;\n                        _iteratorError3 = _context9.t0;\n\n                      case 22:\n                        _context9.prev = 22;\n                        _context9.prev = 23;\n\n                        if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                          _iterator3.return();\n                        }\n\n                      case 25:\n                        _context9.prev = 25;\n\n                        if (!_didIteratorError3) {\n                          _context9.next = 28;\n                          break;\n                        }\n\n                        throw _iteratorError3;\n\n                      case 28:\n                        return _context9.finish(25);\n\n                      case 29:\n                        return _context9.finish(22);\n\n                      case 30:\n                        return _context9.abrupt(\"return\", _promise.default.resolve(target));\n\n                      case 31:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee6, null, [[7, 18, 22, 30], [23,, 25, 29]]);\n              }))));\n\n            case 15:\n              if (!(target instanceof ParseObject)) {\n                _context11.next = 17;\n                break;\n              }\n\n              return _context11.abrupt(\"return\", RESTController.request('DELETE', 'classes/' + target.className + '/' + target._getId(), {}, options).then(\n              /*#__PURE__*/\n              (0, _asyncToGenerator2.default)(\n              /*#__PURE__*/\n              _regenerator.default.mark(function _callee7() {\n                return _regenerator.default.wrap(function (_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        _context10.next = 2;\n                        return localDatastore._destroyObjectIfPinned(target);\n\n                      case 2:\n                        return _context10.abrupt(\"return\", _promise.default.resolve(target));\n\n                      case 3:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee7);\n              }))));\n\n            case 17:\n              _context11.next = 19;\n              return localDatastore._destroyObjectIfPinned(target);\n\n            case 19:\n              return _context11.abrupt(\"return\", _promise.default.resolve(target));\n\n            case 20:\n            case \"end\":\n              return _context11.stop();\n          }\n        }\n      }, _callee8);\n    }));\n\n    return function () {\n      return _destroy.apply(this, arguments);\n    };\n  }(),\n  save: function (target\n  /*: ParseObject | Array<ParseObject | ParseFile>*/\n  , options\n  /*: RequestOptions*/\n  ) {\n    var batchSize = options && options.batchSize ? options.batchSize : DEFAULT_BATCH_SIZE;\n\n    var localDatastore = _CoreManager.default.getLocalDatastore();\n\n    var mapIdForPin = {};\n\n    var RESTController = _CoreManager.default.getRESTController();\n\n    var stateController = _CoreManager.default.getObjectStateController();\n\n    options = options || {};\n    options.returnStatus = options.returnStatus || true;\n\n    if ((0, _isArray.default)(target)) {\n      if (target.length < 1) {\n        return _promise.default.resolve([]);\n      }\n\n      var unsaved = (0, _concat.default)(target).call(target);\n\n      for (var i = 0; i < target.length; i++) {\n        if (target[i] instanceof ParseObject) {\n          unsaved = (0, _concat.default)(unsaved).call(unsaved, (0, _unsavedChildren.default)(target[i], true));\n        }\n      }\n\n      unsaved = (0, _unique.default)(unsaved);\n\n      var filesSaved = _promise.default.resolve();\n\n      var pending\n      /*: Array<ParseObject>*/\n      = [];\n      (0, _forEach.default)(unsaved).call(unsaved, function (el) {\n        if (el instanceof _ParseFile.default) {\n          filesSaved = filesSaved.then(function () {\n            return el.save();\n          });\n        } else if (el instanceof ParseObject) {\n          pending.push(el);\n        }\n      });\n      return filesSaved.then(function () {\n        var objectError = null;\n        return (0, _promiseUtils.continueWhile)(function () {\n          return pending.length > 0;\n        }, function () {\n          var batch = [];\n          var nextPending = [];\n          (0, _forEach.default)(pending).call(pending, function (el) {\n            if (batch.length < batchSize && (0, _canBeSerialized.default)(el)) {\n              batch.push(el);\n            } else {\n              nextPending.push(el);\n            }\n          });\n          pending = nextPending;\n\n          if (batch.length < 1) {\n            return _promise.default.reject(new _ParseError.default(_ParseError.default.OTHER_CAUSE, 'Tried to save a batch with a cycle.'));\n          } // Queue up tasks for each object in the batch.\n          // When every task is ready, the API request will execute\n\n\n          var res, rej;\n          var batchReturned = new _promise.default(function (resolve, reject) {\n            res = resolve;\n            rej = reject;\n          });\n          batchReturned.resolve = res;\n          batchReturned.reject = rej;\n          var batchReady = [];\n          var batchTasks = [];\n          (0, _forEach.default)(batch).call(batch, function (obj, index) {\n            var res, rej;\n            var ready = new _promise.default(function (resolve, reject) {\n              res = resolve;\n              rej = reject;\n            });\n            ready.resolve = res;\n            ready.reject = rej;\n            batchReady.push(ready);\n            stateController.pushPendingState(obj._getStateIdentifier());\n            batchTasks.push(stateController.enqueueTask(obj._getStateIdentifier(), function () {\n              ready.resolve();\n              return batchReturned.then(function (responses) {\n                if (responses[index].hasOwnProperty('success')) {\n                  var objectId = responses[index].success.objectId;\n                  var status = responses[index]._status;\n                  delete responses[index]._status;\n                  mapIdForPin[objectId] = obj._localId;\n\n                  obj._handleSaveResponse(responses[index].success, status);\n                } else {\n                  if (!objectError && responses[index].hasOwnProperty('error')) {\n                    var serverError = responses[index].error;\n                    objectError = new _ParseError.default(serverError.code, serverError.error); // Cancel the rest of the save\n\n                    pending = [];\n                  }\n\n                  obj._handleSaveError();\n                }\n              });\n            }));\n          });\n          (0, _promiseUtils.when)(batchReady).then(function () {\n            // Kick off the batch request\n            return RESTController.request('POST', 'batch', {\n              requests: (0, _map.default)(batch).call(batch, function (obj) {\n                var params = obj._getSaveParams();\n\n                params.path = getServerUrlPath() + params.path;\n                return params;\n              })\n            }, options);\n          }).then(batchReturned.resolve, function (error) {\n            batchReturned.reject(new _ParseError.default(_ParseError.default.INCORRECT_TYPE, error.message));\n          });\n          return (0, _promiseUtils.when)(batchTasks);\n        }).then(\n        /*#__PURE__*/\n        (0, _asyncToGenerator2.default)(\n        /*#__PURE__*/\n        _regenerator.default.mark(function _callee9() {\n          var _iteratorNormalCompletion4, _didIteratorError4, _iteratorError4, _iterator4, _step4, object;\n\n          return _regenerator.default.wrap(function (_context12) {\n            while (1) {\n              switch (_context12.prev = _context12.next) {\n                case 0:\n                  if (!objectError) {\n                    _context12.next = 2;\n                    break;\n                  }\n\n                  return _context12.abrupt(\"return\", _promise.default.reject(objectError));\n\n                case 2:\n                  _iteratorNormalCompletion4 = true;\n                  _didIteratorError4 = false;\n                  _iteratorError4 = undefined;\n                  _context12.prev = 5;\n                  _iterator4 = (0, _getIterator2.default)(target);\n\n                case 7:\n                  if (_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done) {\n                    _context12.next = 16;\n                    break;\n                  }\n\n                  object = _step4.value;\n                  _context12.next = 11;\n                  return localDatastore._updateLocalIdForObject(mapIdForPin[object.id], object);\n\n                case 11:\n                  _context12.next = 13;\n                  return localDatastore._updateObjectIfPinned(object);\n\n                case 13:\n                  _iteratorNormalCompletion4 = true;\n                  _context12.next = 7;\n                  break;\n\n                case 16:\n                  _context12.next = 22;\n                  break;\n\n                case 18:\n                  _context12.prev = 18;\n                  _context12.t0 = _context12[\"catch\"](5);\n                  _didIteratorError4 = true;\n                  _iteratorError4 = _context12.t0;\n\n                case 22:\n                  _context12.prev = 22;\n                  _context12.prev = 23;\n\n                  if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                    _iterator4.return();\n                  }\n\n                case 25:\n                  _context12.prev = 25;\n\n                  if (!_didIteratorError4) {\n                    _context12.next = 28;\n                    break;\n                  }\n\n                  throw _iteratorError4;\n\n                case 28:\n                  return _context12.finish(25);\n\n                case 29:\n                  return _context12.finish(22);\n\n                case 30:\n                  return _context12.abrupt(\"return\", _promise.default.resolve(target));\n\n                case 31:\n                case \"end\":\n                  return _context12.stop();\n              }\n            }\n          }, _callee9, null, [[5, 18, 22, 30], [23,, 25, 29]]);\n        })));\n      });\n    } else if (target instanceof ParseObject) {\n      // copying target lets Flow guarantee the pointer isn't modified elsewhere\n      var localId = target._localId;\n      var targetCopy = target;\n\n      var task = function () {\n        var params = targetCopy._getSaveParams();\n\n        return RESTController.request(params.method, params.path, params.body, options).then(function (response) {\n          var status = response._status;\n          delete response._status;\n\n          targetCopy._handleSaveResponse(response, status);\n        }, function (error) {\n          targetCopy._handleSaveError();\n\n          return _promise.default.reject(error);\n        });\n      };\n\n      stateController.pushPendingState(target._getStateIdentifier());\n      return stateController.enqueueTask(target._getStateIdentifier(), task).then(\n      /*#__PURE__*/\n      (0, _asyncToGenerator2.default)(\n      /*#__PURE__*/\n      _regenerator.default.mark(function _callee10() {\n        return _regenerator.default.wrap(function (_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                _context13.next = 2;\n                return localDatastore._updateLocalIdForObject(localId, target);\n\n              case 2:\n                _context13.next = 4;\n                return localDatastore._updateObjectIfPinned(target);\n\n              case 4:\n                return _context13.abrupt(\"return\", target);\n\n              case 5:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee10);\n      })), function (error) {\n        return _promise.default.reject(error);\n      });\n    }\n\n    return _promise.default.resolve();\n  }\n};\n\n_CoreManager.default.setObjectController(DefaultController);\n\nvar _default = ParseObject;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty2 = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\n_Object$defineProperty2(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _defineProperty = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/inherits\"));\n\nvar _wrapNativeSuper2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/wrapNativeSuper\"));\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n  * Constructs a new Parse.Error object with the given code and message.\n  * @alias Parse.Error\n  */\n\n\nvar ParseError =\n/*#__PURE__*/\nfunction (_Error) {\n  (0, _inherits2.default)(ParseError, _Error);\n  /**\n   * @param {Number} code An error code constant from <code>Parse.Error</code>.\n   * @param {String} message A detailed description of the error.\n   */\n\n  function ParseError(code, message) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ParseError);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ParseError).call(this, message));\n    _this.code = code;\n    (0, _defineProperty.default)((0, _assertThisInitialized2.default)(_this), 'message', {\n      enumerable: true,\n      value: message\n    });\n    return _this;\n  }\n\n  (0, _createClass2.default)(ParseError, [{\n    key: \"toString\",\n    value: function () {\n      return 'ParseError: ' + this.code + ' ' + this.message;\n    }\n  }]);\n  return ParseError;\n}((0, _wrapNativeSuper2.default)(Error));\n/**\n * Error code indicating some error other than those enumerated here.\n * @property OTHER_CAUSE\n * @static\n * @final\n */\n\n\nParseError.OTHER_CAUSE = -1;\n/**\n * Error code indicating that something has gone wrong with the server.\n * If you get this error code, it is Parse's fault. Contact us at\n * https://parse.com/help\n * @property INTERNAL_SERVER_ERROR\n * @static\n * @final\n */\n\nParseError.INTERNAL_SERVER_ERROR = 1;\n/**\n * Error code indicating the connection to the Parse servers failed.\n * @property CONNECTION_FAILED\n * @static\n * @final\n */\n\nParseError.CONNECTION_FAILED = 100;\n/**\n * Error code indicating the specified object doesn't exist.\n * @property OBJECT_NOT_FOUND\n * @static\n * @final\n */\n\nParseError.OBJECT_NOT_FOUND = 101;\n/**\n * Error code indicating you tried to query with a datatype that doesn't\n * support it, like exact matching an array or object.\n * @property INVALID_QUERY\n * @static\n * @final\n */\n\nParseError.INVALID_QUERY = 102;\n/**\n * Error code indicating a missing or invalid classname. Classnames are\n * case-sensitive. They must start with a letter, and a-zA-Z0-9_ are the\n * only valid characters.\n * @property INVALID_CLASS_NAME\n * @static\n * @final\n */\n\nParseError.INVALID_CLASS_NAME = 103;\n/**\n * Error code indicating an unspecified object id.\n * @property MISSING_OBJECT_ID\n * @static\n * @final\n */\n\nParseError.MISSING_OBJECT_ID = 104;\n/**\n * Error code indicating an invalid key name. Keys are case-sensitive. They\n * must start with a letter, and a-zA-Z0-9_ are the only valid characters.\n * @property INVALID_KEY_NAME\n * @static\n * @final\n */\n\nParseError.INVALID_KEY_NAME = 105;\n/**\n * Error code indicating a malformed pointer. You should not see this unless\n * you have been mucking about changing internal Parse code.\n * @property INVALID_POINTER\n * @static\n * @final\n */\n\nParseError.INVALID_POINTER = 106;\n/**\n * Error code indicating that badly formed JSON was received upstream. This\n * either indicates you have done something unusual with modifying how\n * things encode to JSON, or the network is failing badly.\n * @property INVALID_JSON\n * @static\n * @final\n */\n\nParseError.INVALID_JSON = 107;\n/**\n * Error code indicating that the feature you tried to access is only\n * available internally for testing purposes.\n * @property COMMAND_UNAVAILABLE\n * @static\n * @final\n */\n\nParseError.COMMAND_UNAVAILABLE = 108;\n/**\n * You must call Parse.initialize before using the Parse library.\n * @property NOT_INITIALIZED\n * @static\n * @final\n */\n\nParseError.NOT_INITIALIZED = 109;\n/**\n * Error code indicating that a field was set to an inconsistent type.\n * @property INCORRECT_TYPE\n * @static\n * @final\n */\n\nParseError.INCORRECT_TYPE = 111;\n/**\n * Error code indicating an invalid channel name. A channel name is either\n * an empty string (the broadcast channel) or contains only a-zA-Z0-9_\n * characters and starts with a letter.\n * @property INVALID_CHANNEL_NAME\n * @static\n * @final\n */\n\nParseError.INVALID_CHANNEL_NAME = 112;\n/**\n * Error code indicating that push is misconfigured.\n * @property PUSH_MISCONFIGURED\n * @static\n * @final\n */\n\nParseError.PUSH_MISCONFIGURED = 115;\n/**\n * Error code indicating that the object is too large.\n * @property OBJECT_TOO_LARGE\n * @static\n * @final\n */\n\nParseError.OBJECT_TOO_LARGE = 116;\n/**\n * Error code indicating that the operation isn't allowed for clients.\n * @property OPERATION_FORBIDDEN\n * @static\n * @final\n */\n\nParseError.OPERATION_FORBIDDEN = 119;\n/**\n * Error code indicating the result was not found in the cache.\n * @property CACHE_MISS\n * @static\n * @final\n */\n\nParseError.CACHE_MISS = 120;\n/**\n * Error code indicating that an invalid key was used in a nested\n * JSONObject.\n * @property INVALID_NESTED_KEY\n * @static\n * @final\n */\n\nParseError.INVALID_NESTED_KEY = 121;\n/**\n * Error code indicating that an invalid filename was used for ParseFile.\n * A valid file name contains only a-zA-Z0-9_. characters and is between 1\n * and 128 characters.\n * @property INVALID_FILE_NAME\n * @static\n * @final\n */\n\nParseError.INVALID_FILE_NAME = 122;\n/**\n * Error code indicating an invalid ACL was provided.\n * @property INVALID_ACL\n * @static\n * @final\n */\n\nParseError.INVALID_ACL = 123;\n/**\n * Error code indicating that the request timed out on the server. Typically\n * this indicates that the request is too expensive to run.\n * @property TIMEOUT\n * @static\n * @final\n */\n\nParseError.TIMEOUT = 124;\n/**\n * Error code indicating that the email address was invalid.\n * @property INVALID_EMAIL_ADDRESS\n * @static\n * @final\n */\n\nParseError.INVALID_EMAIL_ADDRESS = 125;\n/**\n * Error code indicating a missing content type.\n * @property MISSING_CONTENT_TYPE\n * @static\n * @final\n */\n\nParseError.MISSING_CONTENT_TYPE = 126;\n/**\n * Error code indicating a missing content length.\n * @property MISSING_CONTENT_LENGTH\n * @static\n * @final\n */\n\nParseError.MISSING_CONTENT_LENGTH = 127;\n/**\n * Error code indicating an invalid content length.\n * @property INVALID_CONTENT_LENGTH\n * @static\n * @final\n */\n\nParseError.INVALID_CONTENT_LENGTH = 128;\n/**\n * Error code indicating a file that was too large.\n * @property FILE_TOO_LARGE\n * @static\n * @final\n */\n\nParseError.FILE_TOO_LARGE = 129;\n/**\n * Error code indicating an error saving a file.\n * @property FILE_SAVE_ERROR\n * @static\n * @final\n */\n\nParseError.FILE_SAVE_ERROR = 130;\n/**\n * Error code indicating that a unique field was given a value that is\n * already taken.\n * @property DUPLICATE_VALUE\n * @static\n * @final\n */\n\nParseError.DUPLICATE_VALUE = 137;\n/**\n * Error code indicating that a role's name is invalid.\n * @property INVALID_ROLE_NAME\n * @static\n * @final\n */\n\nParseError.INVALID_ROLE_NAME = 139;\n/**\n * Error code indicating that an application quota was exceeded.  Upgrade to\n * resolve.\n * @property EXCEEDED_QUOTA\n * @static\n * @final\n */\n\nParseError.EXCEEDED_QUOTA = 140;\n/**\n * Error code indicating that a Cloud Code script failed.\n * @property SCRIPT_FAILED\n * @static\n * @final\n */\n\nParseError.SCRIPT_FAILED = 141;\n/**\n * Error code indicating that a Cloud Code validation failed.\n * @property VALIDATION_ERROR\n * @static\n * @final\n */\n\nParseError.VALIDATION_ERROR = 142;\n/**\n * Error code indicating that invalid image data was provided.\n * @property INVALID_IMAGE_DATA\n * @static\n * @final\n */\n\nParseError.INVALID_IMAGE_DATA = 143;\n/**\n * Error code indicating an unsaved file.\n * @property UNSAVED_FILE_ERROR\n * @static\n * @final\n */\n\nParseError.UNSAVED_FILE_ERROR = 151;\n/**\n * Error code indicating an invalid push time.\n * @property INVALID_PUSH_TIME_ERROR\n * @static\n * @final\n */\n\nParseError.INVALID_PUSH_TIME_ERROR = 152;\n/**\n * Error code indicating an error deleting a file.\n * @property FILE_DELETE_ERROR\n * @static\n * @final\n */\n\nParseError.FILE_DELETE_ERROR = 153;\n/**\n * Error code indicating that the application has exceeded its request\n * limit.\n * @property REQUEST_LIMIT_EXCEEDED\n * @static\n * @final\n */\n\nParseError.REQUEST_LIMIT_EXCEEDED = 155;\n/**\n * Error code indicating an invalid event name.\n * @property INVALID_EVENT_NAME\n * @static\n * @final\n */\n\nParseError.INVALID_EVENT_NAME = 160;\n/**\n * Error code indicating that the username is missing or empty.\n * @property USERNAME_MISSING\n * @static\n * @final\n */\n\nParseError.USERNAME_MISSING = 200;\n/**\n * Error code indicating that the password is missing or empty.\n * @property PASSWORD_MISSING\n * @static\n * @final\n */\n\nParseError.PASSWORD_MISSING = 201;\n/**\n * Error code indicating that the username has already been taken.\n * @property USERNAME_TAKEN\n * @static\n * @final\n */\n\nParseError.USERNAME_TAKEN = 202;\n/**\n * Error code indicating that the email has already been taken.\n * @property EMAIL_TAKEN\n * @static\n * @final\n */\n\nParseError.EMAIL_TAKEN = 203;\n/**\n * Error code indicating that the email is missing, but must be specified.\n * @property EMAIL_MISSING\n * @static\n * @final\n */\n\nParseError.EMAIL_MISSING = 204;\n/**\n * Error code indicating that a user with the specified email was not found.\n * @property EMAIL_NOT_FOUND\n * @static\n * @final\n */\n\nParseError.EMAIL_NOT_FOUND = 205;\n/**\n * Error code indicating that a user object without a valid session could\n * not be altered.\n * @property SESSION_MISSING\n * @static\n * @final\n */\n\nParseError.SESSION_MISSING = 206;\n/**\n * Error code indicating that a user can only be created through signup.\n * @property MUST_CREATE_USER_THROUGH_SIGNUP\n * @static\n * @final\n */\n\nParseError.MUST_CREATE_USER_THROUGH_SIGNUP = 207;\n/**\n * Error code indicating that an an account being linked is already linked\n * to another user.\n * @property ACCOUNT_ALREADY_LINKED\n * @static\n * @final\n */\n\nParseError.ACCOUNT_ALREADY_LINKED = 208;\n/**\n * Error code indicating that the current session token is invalid.\n * @property INVALID_SESSION_TOKEN\n * @static\n * @final\n */\n\nParseError.INVALID_SESSION_TOKEN = 209;\n/**\n * Error code indicating that a user cannot be linked to an account because\n * that account's id could not be found.\n * @property LINKED_ID_MISSING\n * @static\n * @final\n */\n\nParseError.LINKED_ID_MISSING = 250;\n/**\n * Error code indicating that a user with a linked (e.g. Facebook) account\n * has an invalid session.\n * @property INVALID_LINKED_SESSION\n * @static\n * @final\n */\n\nParseError.INVALID_LINKED_SESSION = 251;\n/**\n * Error code indicating that a service being linked (e.g. Facebook or\n * Twitter) is unsupported.\n * @property UNSUPPORTED_SERVICE\n * @static\n * @final\n */\n\nParseError.UNSUPPORTED_SERVICE = 252;\n/**\n * Error code indicating an invalid operation occured on schema\n * @property INVALID_SCHEMA_OPERATION\n * @static\n * @final\n */\n\nParseError.INVALID_SCHEMA_OPERATION = 255;\n/**\n * Error code indicating that there were multiple errors. Aggregate errors\n * have an \"errors\" property, which is an array of error objects with more\n * detail about each error that occurred.\n * @property AGGREGATE_ERROR\n * @static\n * @final\n */\n\nParseError.AGGREGATE_ERROR = 600;\n/**\n * Error code indicating the client was unable to read an input file.\n * @property FILE_READ_ERROR\n * @static\n * @final\n */\n\nParseError.FILE_READ_ERROR = 601;\n/**\n * Error code indicating a real error code is unavailable because\n * we had to use an XDomainRequest object to allow CORS requests in\n * Internet Explorer, which strips the body from HTTP responses that have\n * a non-2XX status code.\n * @property X_DOMAIN_REQUEST\n * @static\n * @final\n */\n\nParseError.X_DOMAIN_REQUEST = 602;\nvar _default = ParseError;\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/slicedToArray\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs3/regenerator\"));\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\n\nvar _EventEmitter = _interopRequireDefault(require(\"./EventEmitter\"));\n\nvar _LiveQueryClient = _interopRequireDefault(require(\"./LiveQueryClient\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n\nfunction getLiveQueryClient()\n/*: LiveQueryClient*/\n{\n  return _CoreManager.default.getLiveQueryController().getDefaultLiveQueryClient();\n}\n/**\n *\n * We expose three events to help you monitor the status of the WebSocket connection:\n *\n * <p>Open - When we establish the WebSocket connection to the LiveQuery server, you'll get this event.\n *\n * <pre>\n * Parse.LiveQuery.on('open', () => {\n *\n * });</pre></p>\n *\n * <p>Close - When we lose the WebSocket connection to the LiveQuery server, you'll get this event.\n *\n * <pre>\n * Parse.LiveQuery.on('close', () => {\n *\n * });</pre></p>\n *\n * <p>Error - When some network error or LiveQuery server error happens, you'll get this event.\n *\n * <pre>\n * Parse.LiveQuery.on('error', (error) => {\n *\n * });</pre></p>\n *\n * @class Parse.LiveQuery\n * @static\n *\n */\n\n\nvar LiveQuery = new _EventEmitter.default();\n/**\n * After open is called, the LiveQuery will try to send a connect request\n * to the LiveQuery server.\n */\n\nLiveQuery.open =\n/*#__PURE__*/\n(0, _asyncToGenerator2.default)(\n/*#__PURE__*/\n_regenerator.default.mark(function _callee() {\n  var liveQueryClient;\n  return _regenerator.default.wrap(function (_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return getLiveQueryClient();\n\n        case 2:\n          liveQueryClient = _context.sent;\n          return _context.abrupt(\"return\", liveQueryClient.open());\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\n/**\n * When you're done using LiveQuery, you can call Parse.LiveQuery.close().\n * This function will close the WebSocket connection to the LiveQuery server,\n * cancel the auto reconnect, and unsubscribe all subscriptions based on it.\n * If you call query.subscribe() after this, we'll create a new WebSocket\n * connection to the LiveQuery server.\n */\n\nLiveQuery.close =\n/*#__PURE__*/\n(0, _asyncToGenerator2.default)(\n/*#__PURE__*/\n_regenerator.default.mark(function _callee2() {\n  var liveQueryClient;\n  return _regenerator.default.wrap(function (_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return getLiveQueryClient();\n\n        case 2:\n          liveQueryClient = _context2.sent;\n          return _context2.abrupt(\"return\", liveQueryClient.close());\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _callee2);\n})); // Register a default onError callback to make sure we do not crash on error\n\nLiveQuery.on('error', function () {});\nvar _default = LiveQuery;\nexports.default = _default;\nvar defaultLiveQueryClient;\nvar DefaultLiveQueryController = {\n  setDefaultLiveQueryClient: function (liveQueryClient\n  /*: LiveQueryClient*/\n  ) {\n    defaultLiveQueryClient = liveQueryClient;\n  },\n  getDefaultLiveQueryClient: function () {\n    var _getDefaultLiveQueryClient = (0, _asyncToGenerator2.default)(\n    /*#__PURE__*/\n    _regenerator.default.mark(function _callee3() {\n      var _ref3, _ref4, currentUser, installationId, sessionToken, liveQueryServerURL, serverURL, protocol, host, applicationId, javascriptKey, masterKey;\n\n      return _regenerator.default.wrap(function (_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!defaultLiveQueryClient) {\n                _context3.next = 2;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", defaultLiveQueryClient);\n\n            case 2:\n              _context3.next = 4;\n              return _promise.default.all([_CoreManager.default.getUserController().currentUserAsync(), _CoreManager.default.getInstallationController().currentInstallationId()]);\n\n            case 4:\n              _ref3 = _context3.sent;\n              _ref4 = (0, _slicedToArray2.default)(_ref3, 2);\n              currentUser = _ref4[0];\n              installationId = _ref4[1];\n              sessionToken = currentUser ? currentUser.getSessionToken() : undefined;\n              liveQueryServerURL = _CoreManager.default.get('LIVEQUERY_SERVER_URL');\n\n              if (!(liveQueryServerURL && (0, _indexOf.default)(liveQueryServerURL).call(liveQueryServerURL, 'ws') !== 0)) {\n                _context3.next = 12;\n                break;\n              }\n\n              throw new Error('You need to set a proper Parse LiveQuery server url before using LiveQueryClient');\n\n            case 12:\n              // If we can not find Parse.liveQueryServerURL, we try to extract it from Parse.serverURL\n              if (!liveQueryServerURL) {\n                serverURL = _CoreManager.default.get('SERVER_URL');\n                protocol = (0, _indexOf.default)(serverURL).call(serverURL, 'https') === 0 ? 'wss://' : 'ws://';\n                host = serverURL.replace(/^https?:\\/\\//, '');\n                liveQueryServerURL = protocol + host;\n\n                _CoreManager.default.set('LIVEQUERY_SERVER_URL', liveQueryServerURL);\n              }\n\n              applicationId = _CoreManager.default.get('APPLICATION_ID');\n              javascriptKey = _CoreManager.default.get('JAVASCRIPT_KEY');\n              masterKey = _CoreManager.default.get('MASTER_KEY');\n              defaultLiveQueryClient = new _LiveQueryClient.default({\n                applicationId: applicationId,\n                serverURL: liveQueryServerURL,\n                javascriptKey: javascriptKey,\n                masterKey: masterKey,\n                sessionToken: sessionToken,\n                installationId: installationId\n              });\n              defaultLiveQueryClient.on('error', function (error) {\n                LiveQuery.emit('error', error);\n              });\n              defaultLiveQueryClient.on('open', function () {\n                LiveQuery.emit('open');\n              });\n              defaultLiveQueryClient.on('close', function () {\n                LiveQuery.emit('close');\n              });\n              return _context3.abrupt(\"return\", defaultLiveQueryClient);\n\n            case 21:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function () {\n      return _getDefaultLiveQueryClient.apply(this, arguments);\n    };\n  }(),\n  _clearCachedDefaultClient: function () {\n    defaultLiveQueryClient = null;\n  }\n};\n\n_CoreManager.default.setLiveQueryController(DefaultLiveQueryController);","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime-corejs3/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _defineProperty = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\"));\n\nvar _decode = _interopRequireDefault(require(\"./decode\"));\n\nvar _encode = _interopRequireDefault(require(\"./encode\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _CryptoController = _interopRequireDefault(require(\"./CryptoController\"));\n\nvar _InstallationController = _interopRequireDefault(require(\"./InstallationController\"));\n\nvar ParseOp = _interopRequireWildcard(require(\"./ParseOp\"));\n\nvar _RESTController = _interopRequireDefault(require(\"./RESTController\"));\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * Contains all Parse API classes and functions.\n * @static\n * @global\n * @class\n * @hideconstructor\n */\n\n\nvar Parse = {\n  /**\n   * Call this method first to set up your authentication tokens for Parse.\n   * You can get your keys from the Data Browser on parse.com.\n   * @param {String} applicationId Your Parse Application ID.\n   * @param {String} javaScriptKey (optional) Your Parse JavaScript Key (Not needed for parse-server)\n   * @param {String} masterKey (optional) Your Parse Master Key. (Node.js only!)\n   * @static\n   */\n  initialize: function (applicationId\n  /*: string*/\n  , javaScriptKey\n  /*: string*/\n  ) {\n    if (\"browser\" === 'browser' && _CoreManager.default.get('IS_NODE') && !process.env.SERVER_RENDERING) {\n      /* eslint-disable no-console */\n      console.log('It looks like you\\'re using the browser version of the SDK in a ' + 'node.js environment. You should require(\\'parse/node\\') instead.');\n      /* eslint-enable no-console */\n    }\n\n    Parse._initialize(applicationId, javaScriptKey);\n  },\n  _initialize: function (applicationId\n  /*: string*/\n  , javaScriptKey\n  /*: string*/\n  , masterKey\n  /*: string*/\n  ) {\n    _CoreManager.default.set('APPLICATION_ID', applicationId);\n\n    _CoreManager.default.set('JAVASCRIPT_KEY', javaScriptKey);\n\n    _CoreManager.default.set('MASTER_KEY', masterKey);\n\n    _CoreManager.default.set('USE_MASTER_KEY', false);\n  },\n\n  /**\n   * Call this method to set your AsyncStorage engine\n   * Starting Parse@1.11, the ParseSDK do not provide a React AsyncStorage as the ReactNative module\n   * is not provided at a stable path and changes over versions.\n   * @param {AsyncStorage} storage a react native async storage.\n   * @static\n   */\n  setAsyncStorage: function (storage\n  /*: any*/\n  ) {\n    _CoreManager.default.setAsyncStorage(storage);\n  },\n\n  /**\n   * Call this method to set your LocalDatastoreStorage engine\n   * If using React-Native use {@link Parse.setAsyncStorage Parse.setAsyncStorage()}\n   * @param {LocalDatastoreController} controller a data storage.\n   * @static\n   */\n  setLocalDatastoreController: function (controller\n  /*: any*/\n  ) {\n    _CoreManager.default.setLocalDatastoreController(controller);\n  }\n};\n/** These legacy setters may eventually be deprecated **/\n\n/**\n * @member Parse.applicationId\n * @type string\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'applicationId', {\n  get: function () {\n    return _CoreManager.default.get('APPLICATION_ID');\n  },\n  set: function (value) {\n    _CoreManager.default.set('APPLICATION_ID', value);\n  }\n});\n/**\n * @member Parse.javaScriptKey\n * @type string\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'javaScriptKey', {\n  get: function () {\n    return _CoreManager.default.get('JAVASCRIPT_KEY');\n  },\n  set: function (value) {\n    _CoreManager.default.set('JAVASCRIPT_KEY', value);\n  }\n});\n/**\n * @member Parse.masterKey\n * @type string\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'masterKey', {\n  get: function () {\n    return _CoreManager.default.get('MASTER_KEY');\n  },\n  set: function (value) {\n    _CoreManager.default.set('MASTER_KEY', value);\n  }\n});\n/**\n * @member Parse.serverURL\n * @type string\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'serverURL', {\n  get: function () {\n    return _CoreManager.default.get('SERVER_URL');\n  },\n  set: function (value) {\n    _CoreManager.default.set('SERVER_URL', value);\n  }\n});\n/**\n * @member Parse.serverAuthToken\n * @type string\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'serverAuthToken', {\n  get: function () {\n    return _CoreManager.default.get('SERVER_AUTH_TOKEN');\n  },\n  set: function (value) {\n    _CoreManager.default.set('SERVER_AUTH_TOKEN', value);\n  }\n});\n/**\n * @member Parse.serverAuthType\n * @type string\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'serverAuthType', {\n  get: function () {\n    return _CoreManager.default.get('SERVER_AUTH_TYPE');\n  },\n  set: function (value) {\n    _CoreManager.default.set('SERVER_AUTH_TYPE', value);\n  }\n});\n/**\n * @member Parse.liveQueryServerURL\n * @type string\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'liveQueryServerURL', {\n  get: function () {\n    return _CoreManager.default.get('LIVEQUERY_SERVER_URL');\n  },\n  set: function (value) {\n    _CoreManager.default.set('LIVEQUERY_SERVER_URL', value);\n  }\n});\n/**\n * @member Parse.encryptedUser\n * @type boolean\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'encryptedUser', {\n  get: function () {\n    return _CoreManager.default.get('ENCRYPTED_USER');\n  },\n  set: function (value) {\n    _CoreManager.default.set('ENCRYPTED_USER', value);\n  }\n});\n/**\n * @member Parse.secret\n * @type string\n * @static\n */\n\n(0, _defineProperty.default)(Parse, 'secret', {\n  get: function () {\n    return _CoreManager.default.get('ENCRYPTED_KEY');\n  },\n  set: function (value) {\n    _CoreManager.default.set('ENCRYPTED_KEY', value);\n  }\n});\n/* End setters */\n\nParse.ACL = require('./ParseACL').default;\nParse.Analytics = require('./Analytics');\nParse.AnonymousUtils = require('./AnonymousUtils').default;\nParse.Cloud = require('./Cloud');\nParse.CoreManager = require('./CoreManager');\nParse.Config = require('./ParseConfig').default;\nParse.Error = require('./ParseError').default;\nParse.FacebookUtils = require('./FacebookUtils').default;\nParse.File = require('./ParseFile').default;\nParse.GeoPoint = require('./ParseGeoPoint').default;\nParse.Polygon = require('./ParsePolygon').default;\nParse.Installation = require('./ParseInstallation').default;\nParse.LocalDatastore = require('./LocalDatastore');\nParse.Object = require('./ParseObject').default;\nParse.Op = {\n  Set: ParseOp.SetOp,\n  Unset: ParseOp.UnsetOp,\n  Increment: ParseOp.IncrementOp,\n  Add: ParseOp.AddOp,\n  Remove: ParseOp.RemoveOp,\n  AddUnique: ParseOp.AddUniqueOp,\n  Relation: ParseOp.RelationOp\n};\nParse.Push = require('./Push');\nParse.Query = require('./ParseQuery').default;\nParse.Relation = require('./ParseRelation').default;\nParse.Role = require('./ParseRole').default;\nParse.Schema = require('./ParseSchema').default;\nParse.Session = require('./ParseSession').default;\nParse.Storage = require('./Storage');\nParse.User = require('./ParseUser').default;\nParse.LiveQuery = require('./ParseLiveQuery').default;\nParse.LiveQueryClient = require('./LiveQueryClient').default;\n\nParse._request = function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return _CoreManager.default.getRESTController().request.apply(null, args);\n};\n\nParse._ajax = function () {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return _CoreManager.default.getRESTController().ajax.apply(null, args);\n}; // We attempt to match the signatures of the legacy versions of these methods\n\n\nParse._decode = function (_, value) {\n  return (0, _decode.default)(value);\n};\n\nParse._encode = function (value, _, disallowObjects) {\n  return (0, _encode.default)(value, disallowObjects);\n};\n\nParse._getInstallationId = function () {\n  return _CoreManager.default.getInstallationController().currentInstallationId();\n};\n/**\n * Enable pinning in your application.\n * This must be called before your application can use pinning.\n *\n * @static\n */\n\n\nParse.enableLocalDatastore = function () {\n  Parse.LocalDatastore.isEnabled = true;\n};\n/**\n * Flag that indicates whether Local Datastore is enabled.\n *\n * @static\n */\n\n\nParse.isLocalDatastoreEnabled = function () {\n  return Parse.LocalDatastore.isEnabled;\n};\n/**\n * Gets all contents from Local Datastore\n *\n * <pre>\n * await Parse.dumpLocalDatastore();\n * </pre>\n *\n * @static\n */\n\n\nParse.dumpLocalDatastore = function () {\n  if (!Parse.LocalDatastore.isEnabled) {\n    console.log('Parse.enableLocalDatastore() must be called first'); // eslint-disable-line no-console\n\n    return _promise.default.resolve({});\n  } else {\n    return Parse.LocalDatastore._getAllContents();\n  }\n};\n/**\n * Enable the current user encryption.\n * This must be called before login any user.\n *\n * @static\n */\n\n\nParse.enableEncryptedUser = function () {\n  Parse.encryptedUser = true;\n};\n/**\n * Flag that indicates whether Encrypted User is enabled.\n *\n * @static\n */\n\n\nParse.isEncryptedUserEnabled = function () {\n  return Parse.encryptedUser;\n};\n\n_CoreManager.default.setCryptoController(_CryptoController.default);\n\n_CoreManager.default.setInstallationController(_InstallationController.default);\n\n_CoreManager.default.setRESTController(_RESTController.default);\n\n// For legacy requires, of the form `var Parse = require('parse').Parse`\nParse.Parse = Parse;\nmodule.exports = Parse;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\n\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = void 0;\n\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/json/stringify\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\n\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\n\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n\nvar _decode = _interopRequireDefault(require(\"./decode\"));\n\nvar _encode = _interopRequireDefault(require(\"./encode\"));\n\nvar _escape2 = _interopRequireDefault(require(\"./escape\"));\n\nvar _ParseError = _interopRequireDefault(require(\"./ParseError\"));\n\nvar _Storage = _interopRequireDefault(require(\"./Storage\"));\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n/**\n * Parse.Config is a local representation of configuration data that\n * can be set from the Parse dashboard.\n *\n * @alias Parse.Config\n */\n\n\nvar ParseConfig =\n/*#__PURE__*/\nfunction () {\n  function ParseConfig() {\n    (0, _classCallCheck2.default)(this, ParseConfig);\n    (0, _defineProperty2.default)(this, \"attributes\", void 0);\n    (0, _defineProperty2.default)(this, \"_escapedAttributes\", void 0);\n    this.attributes = {};\n    this._escapedAttributes = {};\n  }\n  /**\n   * Gets the value of an attribute.\n   * @param {String} attr The name of an attribute.\n   */\n\n\n  (0, _createClass2.default)(ParseConfig, [{\n    key: \"get\",\n    value: function (attr\n    /*: string*/\n    )\n    /*: any*/\n    {\n      return this.attributes[attr];\n    }\n    /**\n     * Gets the HTML-escaped value of an attribute.\n     * @param {String} attr The name of an attribute.\n     */\n\n  }, {\n    key: \"escape\",\n    value: function (attr\n    /*: string*/\n    )\n    /*: string*/\n    {\n      var html = this._escapedAttributes[attr];\n\n      if (html) {\n        return html;\n      }\n\n      var val = this.attributes[attr];\n      var escaped = '';\n\n      if (val != null) {\n        escaped = (0, _escape2.default)(val.toString());\n      }\n\n      this._escapedAttributes[attr] = escaped;\n      return escaped;\n    }\n    /**\n     * Retrieves the most recently-fetched configuration object, either from\n     * memory or from local storage if necessary.\n     *\n     * @static\n     * @return {Config} The most recently-fetched Parse.Config if it\n     *     exists, else an empty Parse.Config.\n     */\n\n  }], [{\n    key: \"current\",\n    value: function () {\n      var controller = _CoreManager.default.getConfigController();\n\n      return controller.current();\n    }\n    /**\n     * Gets a new configuration object from the server.\n     * @static\n     * @param {Object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     * </ul>\n     * @return {Promise} A promise that is resolved with a newly-created\n     *     configuration object when the get completes.\n     */\n\n  }, {\n    key: \"get\",\n    value: function () {\n      var options\n      /*: RequestOptions*/\n      = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      var controller = _CoreManager.default.getConfigController();\n\n      return controller.get(options);\n    }\n    /**\n     * Save value keys to the server.\n     * @static\n     * @param {Object} attrs The config parameters and values.\n     * @param {Object} masterKeyOnlyFlags The flags that define whether config parameters listed\n     * in `attrs` should be retrievable only by using the master key.\n     * For example: `param1: true` makes `param1` only retrievable by using the master key.\n     * If a parameter is not provided or set to `false`, it can be retrieved without\n     * using the master key.\n     * @return {Promise} A promise that is resolved with a newly-created\n     *     configuration object or with the current with the update.\n     */\n\n  }, {\n    key: \"save\",\n    value: function (attrs\n    /*: { [key: string]: any }*/\n    , masterKeyOnlyFlags\n    /*: { [key: string]: any }*/\n    ) {\n      var controller = _CoreManager.default.getConfigController(); //To avoid a mismatch with the local and the cloud config we get a new version\n\n\n      return controller.save(attrs, masterKeyOnlyFlags).then(function () {\n        return controller.get({\n          useMasterKey: true\n        });\n      }, function (error) {\n        return _promise.default.reject(error);\n      });\n    }\n  }]);\n  return ParseConfig;\n}();\n\nvar currentConfig = null;\nvar CURRENT_CONFIG_KEY = 'currentConfig';\n\nfunction decodePayload(data) {\n  try {\n    var json = JSON.parse(data);\n\n    if (json && (0, _typeof2.default)(json) === 'object') {\n      return (0, _decode.default)(json);\n    }\n  } catch (e) {\n    return null;\n  }\n}\n\nvar DefaultController = {\n  current: function () {\n    if (currentConfig) {\n      return currentConfig;\n    }\n\n    var config = new ParseConfig();\n\n    var storagePath = _Storage.default.generatePath(CURRENT_CONFIG_KEY);\n\n    var configData;\n\n    if (!_Storage.default.async()) {\n      configData = _Storage.default.getItem(storagePath);\n\n      if (configData) {\n        var attributes = decodePayload(configData);\n\n        if (attributes) {\n          config.attributes = attributes;\n          currentConfig = config;\n        }\n      }\n\n      return config;\n    } // Return a promise for async storage controllers\n\n\n    return _Storage.default.getItemAsync(storagePath).then(function (configData) {\n      if (configData) {\n        var _attributes = decodePayload(configData);\n\n        if (_attributes) {\n          config.attributes = _attributes;\n          currentConfig = config;\n        }\n      }\n\n      return config;\n    });\n  },\n  get: function () {\n    var options\n    /*: RequestOptions*/\n    = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var RESTController = _CoreManager.default.getRESTController();\n\n    return RESTController.request('GET', 'config', {}, options).then(function (response) {\n      if (!response || !response.params) {\n        var error = new _ParseError.default(_ParseError.default.INVALID_JSON, 'Config JSON response invalid.');\n        return _promise.default.reject(error);\n      }\n\n      var config = new ParseConfig();\n      config.attributes = {};\n\n      for (var attr in response.params) {\n        config.attributes[attr] = (0, _decode.default)(response.params[attr]);\n      }\n\n      currentConfig = config;\n      return _Storage.default.setItemAsync(_Storage.default.generatePath(CURRENT_CONFIG_KEY), (0, _stringify.default)(response.params)).then(function () {\n        return config;\n      });\n    });\n  },\n  save: function (attrs\n  /*: { [key: string]: any }*/\n  , masterKeyOnlyFlags\n  /*: { [key: string]: any }*/\n  ) {\n    var RESTController = _CoreManager.default.getRESTController();\n\n    var encodedAttrs = {};\n\n    for (var _key in attrs) {\n      encodedAttrs[_key] = (0, _encode.default)(attrs[_key]);\n    }\n\n    return RESTController.request('PUT', 'config', {\n      params: encodedAttrs,\n      masterKeyOnly: masterKeyOnlyFlags\n    }, {\n      useMasterKey: true\n    }).then(function (response) {\n      if (response && response.result) {\n        return _promise.default.resolve();\n      } else {\n        var error = new _ParseError.default(_ParseError.default.INTERNAL_SERVER_ERROR, 'Error occured updating Config.');\n        return _promise.default.reject(error);\n      }\n    });\n  }\n};\n\n_CoreManager.default.setConfigController(DefaultController);\n\nvar _default = ParseConfig;\nexports.default = _default;"],"sourceRoot":""}